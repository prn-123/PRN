GeneralSetupController.cs
=========================
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using SAPPERI.Model.ViewModel;
using SAPPERI.Model.SeviceModel;
using Framework.Web;
using SAPPERI.Biz;
using SAPPERI.Model.Model;
using SAPPERI.Service;

namespace SAPPERI.VMS.Controllers
{
    using WebMarkupMin.AspNet4.Mvc;

    [CompressContent]
    [MinifyHtml]
    public class GeneralSetupController : Controller
    {
        private readonly GeneralSetUpManager _generalsetupmanager;

        /// <summary>
        /// Initializes a new instance of the <see cref="GeneralSetupController"/> class.
        /// </summary>
        /// <param name="generalsetupmanager">The generalsetupmanager.</param>
        public GeneralSetupController(GeneralSetUpManager generalsetupmanager)
        {
            _generalsetupmanager = generalsetupmanager;
        }

        /// <summary>
        /// Indexes this instance.
        /// </summary>
        /// <returns></returns>
        public ActionResult Index()
        {
            GeneralSetUpViewModel general = new GeneralSetUpViewModel();
            general.CurrencyList = _generalsetupmanager.GetCurrencyList();
            general.UnitList = _generalsetupmanager.GetUnitByApplicationRights(Convert.ToInt64(ApplicationContext.Current.UserInfo.ApplicationId), ApplicationContext.Current.UserInfo.UserID, ApplicationContext.Current.UserInfo.SecurityCompanyID, ApplicationContext.Current.UserInfo.AppCode, ApplicationContext.Current.UserInfo.AppAuthKey);
            return View(general);
        }

        /// <summary>
        /// Binds the fuel rates.
        /// </summary>
        /// <returns></returns>
        public JsonResult BindRates(int UnitID)
        {
            var GeneralRates = _generalsetupmanager.BindRates(UnitID);
            return Json(GeneralRates, JsonRequestBehavior.AllowGet);
        }

        /// <summary>
        /// Binds the units.
        /// </summary>
        /// <returns></returns>
        public JsonResult BindUnits()
        {
            var Units = _generalsetupmanager.BindUnits();
            return Json(Units, JsonRequestBehavior.AllowGet);
        }

        /// <summary>
        /// Loads the models.
        /// </summary>
        /// <param name="UnitID">The unit identifier.</param>
        /// <returns></returns>
        public JsonResult BindModels(int UnitID)
        {
            var Models = _generalsetupmanager.loadmodels().ToList();
            var Modelstaxilist = _generalsetupmanager.loadmodelsfromtaxi(UnitID);
            if (Modelstaxilist.Count() > 0)
            {
                Models.RemoveAll(x => Modelstaxilist.Any(y => y.ModelID == x.ModelID));
            }
            return Json(Models, JsonRequestBehavior.AllowGet);
        }

        /// <summary>
        /// Binds the taxi rate types.
        /// </summary>
        /// <param name="UnitID">The unit identifier.</param>
        /// <returns></returns>
        public JsonResult BindTaxiRateTypes(int UnitID)
        {
            var TaxiRates = _generalsetupmanager.BindTaxiRateTypes(UnitID);
            return Json(TaxiRates, JsonRequestBehavior.AllowGet);
        }

        /// <summary>
        /// Gets the employees.
        /// </summary>
        /// <param name="UnitID">The unit identifier.</param>
        /// <returns></returns>
        public JsonResult GetEmployees(string UnitID)
        {
            return Json(_generalsetupmanager.GetEmployees(UnitID), JsonRequestBehavior.AllowGet);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="EffectiveDate"></param>
        /// <param name="UnitID"></param>
        /// <returns></returns>
        public JsonResult getFuelRates(DateTime EffectiveDate, string UnitID)
        {
            return Json(_generalsetupmanager.getFuelRates(EffectiveDate, UnitID), JsonRequestBehavior.AllowGet);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="UnitID"></param>
        /// <returns></returns>

        public JsonResult getMailDetails(string UnitID)
        {
            return Json(_generalsetupmanager.getMailDetails(UnitID), JsonRequestBehavior.AllowGet);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="UnitID"></param>
        /// <returns></returns>

        public JsonResult getFrontOfficeDetails(string UnitID)
        {
            return Json(_generalsetupmanager.getFrontOfficeDetails(UnitID), JsonRequestBehavior.AllowGet);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="EffectiveDate"></param>
        /// <param name="UnitID"></param>
        /// <returns></returns>

        public JsonResult getOvertimeRates(DateTime EffectiveDate, string UnitID)
        {
            return Json(_generalsetupmanager.getOvertimeRates(EffectiveDate, UnitID), JsonRequestBehavior.AllowGet);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="EffectiveDate"></param>
        /// <param name="UnitID"></param>
        /// <returns></returns>

        public JsonResult getDayoffRates(DateTime EffectiveDate, string UnitID)
        {
            return Json(_generalsetupmanager.getDayoffRates(EffectiveDate, UnitID), JsonRequestBehavior.AllowGet);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="EffectiveDate"></param>
        /// <param name="UnitID"></param>
        /// <returns></returns>

        public JsonResult getAllowanceRates(DateTime EffectiveDate, string UnitID)
        {
            return Json(_generalsetupmanager.getAllowanceRates(EffectiveDate, UnitID), JsonRequestBehavior.AllowGet);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="EffectiveDate"></param>
        /// <param name="UnitID"></param>
        /// <returns></returns>

        public JsonResult getTaxiRates(DateTime EffectiveDate, string UnitID)
        {
            return Json(_generalsetupmanager.getTaxiRates(EffectiveDate, UnitID), JsonRequestBehavior.AllowGet);
        }

        /// <summary>
        /// Saves the details.
        /// </summary>
        /// <param name="LotusDetails">The lotus details.</param>
        /// <returns></returns>
        [HttpPost]
        public int SaveDetails(GeneralSetupModel GeneralSetup, List<FuelTypeRatesModel> FuelRates,
            List<CategoryOvertimeModel> OverTimeRates, List<DutyModerateModel> DayOffRates,
           List<AllowanceRateModel> AllowanceRates, List<TaxiRateModel> TaxiRates)
        {
            int Result = 0;
            Result = _generalsetupmanager.SaveDetails(GeneralSetup, FuelRates, OverTimeRates, DayOffRates, AllowanceRates, TaxiRates);
            return Result;
        }

        /// <summary>
        /// Saves the details other units.
        /// </summary>
        /// <param name="GeneralSetup">The general setup.</param>
        /// <param name="FuelRates">The fuel rates.</param>
        /// <param name="OverTimeRates">The over time rates.</param>
        /// <param name="DayOffRates">The day off rates.</param>
        /// <param name="AllowanceRates">The allowance rates.</param>
        /// <param name="TaxiRates">The taxi rates.</param>
        /// <param name="Units">The units.</param>
        /// <param name="chkfuel">The chkfuel.</param>
        /// <param name="chkovertime">The chkovertime.</param>
        /// <param name="chkdayoff">The chkdayoff.</param>
        /// <param name="chkallowance">The chkallowance.</param>
        /// <param name="chktaxi">The chktaxi.</param>
        /// <param name="chkvendor">The chkvendor.</param>
        /// <param name="chkexpenses">The chkexpenses.</param>
        /// <param name="chkgst">The CHKGST.</param>
        /// <returns></returns>
        [HttpPost]
        public int SaveDetailsOtherUnits(GeneralSetupModel GeneralSetup, List<FuelTypeRatesModel> FuelRates,
            List<CategoryOvertimeModel> OverTimeRates, List<DutyModerateModel> DayOffRates,
           List<AllowanceRateModel> AllowanceRates, List<TaxiRateModel> TaxiRates, string[] Units, int chkfuel, int chkovertime, int chkdayoff,
           int chkallowance, int chktaxi, int chkothers)
        {
            int Result = 0;
            Result = _generalsetupmanager.SaveDetailsOtherUnits(GeneralSetup, FuelRates, OverTimeRates, DayOffRates, AllowanceRates, TaxiRates, Units,
       chkfuel, chkovertime, chkdayoff, chkallowance, chktaxi, chkothers);
            return Result;
        }

        /// <summary>
        /// Saves the mail setup details.
        /// </summary>
        /// <param name="LotusDetails">The lotus details.</param>
        /// <returns></returns>
        [HttpPost]
        public int SaveMailSetupDetails(LotusMailModel LotusDetails)
        {
            int Result = 0;
            var lotusdetails = new LotusMailModel()
            {

                UnitCode = LotusDetails.UnitCode,
                EmployeeID = LotusDetails.EmployeeID,
                EmployeeCode = LotusDetails.EmployeeCode,
                EmployeeName = LotusDetails.EmployeeName,
                MobileNumber = LotusDetails.MobileNumber,
                LotusMail = LotusDetails.LotusMail,
                UnitID = LotusDetails.UnitID,
                UnitName = LotusDetails.UnitName,
                FrontOfficeLotusID = LotusDetails.FrontOfficeLotusID,
                ExecutiveLotusID1 = LotusDetails.ExecutiveLotusID1,
                ExecutiveLotusID2 = LotusDetails.ExecutiveLotusID2,
                CompanyCode = ApplicationContext.Current.UserInfo.CompanyCode,
                CreatedBy = ApplicationContext.Current.UserInfo.UserID,
                CreatedTime = DateTime.UtcNow,
                CompanyID = ApplicationContext.Current.UserInfo.CompanyID,
                CompanyName = ApplicationContext.Current.UserInfo.CompanyName,
                BCCMail1 = LotusDetails.BCCMail1,
                CCMail1 = LotusDetails.CCMail1,
                CCMail2 = LotusDetails.CCMail2,
                CCMail3 = LotusDetails.CCMail3,
                MailStatus = LotusDetails.MailStatus
            };

            Result = _generalsetupmanager.SaveMailSetupDetails(LotusDetails);

            return Result;
        }
    }
}



index.cshtml
============
@model  SAPPERI.Model.ViewModel.GeneralSetUpViewModel
@{
    ViewBag.Title = "General SetUp";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="white-box radius5">
    <div class="title">General Setup </div>
    <div class="row form-wrap">
        @Html.Hidden("hdnCurrentUnitID", ApplicationContext.Current.UserInfo.LocationID, new { id = "hdnCurrentUnitID" })
        @Html.Hidden("hdnCurrentUnitCode", ApplicationContext.Current.UserInfo.LocationCode, new { id = "hdnCurrentUnitCode" })
        @Html.Hidden("hdnCurrentUnit", ApplicationContext.Current.UserInfo.LocationName, new { id = "hdnCurrentUnit" })
        @Html.Hidden("hdnLocation", (object)ViewBag.UnitID, new { @id = "hdnLocation" })
        <input type="hidden" id="hdnSetupID" value="0" />
        <input type="hidden" id="hdnEffectivedateFuel" />
        <form class="col s12">
            <div class="common-tab border radius3">
                <div class="row">
                    <div class="col s12">
                        <ul class="tabs">
                            <li class="tab"><a class="active" href="#Request-details" id="tab1">Fuel & OT Rates</a></li>
                            <li class="tab"><a href="#Trip-details" id="tab2">Taxi Rate</a></li>
                            <li class="tab"><a href="#Setup-details" id="tab3">Mail Set up</a></li>
                            <li class="tab"><a href="#SAP-Link1" id="tab4">SAP Link</a></li>
                            <li class="tab"><a href="#SAP-Link2" id="tab5">SAP Link</a></li>
                            <li class="tab"><a href="#SAP-Link3" id="tab6">GST Link</a></li>
                            <li class="tab"><a href="#SAP-Link4" id="tab7">GST Link</a></li>
                        </ul>
                    </div>
                    <div id="Request-details" class="col s12 tab-content">
                        <div class="row">
                            <div class="col l4 s12">
                                <label>Location<span class="Mandatory">*</span></label>
                                @Html.HiddenFor(m => m.generalsetup.UnitCode, new { id = "hdnUnitCode" })
                                @Html.DropDownListFor(m => m.generalsetup.UnitID, new SelectList(Model.UnitList, "UnitID", "Unit"), "-----Select-----", new { @id = "ddlUnits" })
                            </div>

                            <div class="col l4 s12">
                                <label>Base Currency</label>
                                @Html.DropDownListFor(m => m.generalsetup.BaseCurrency, new SelectList(Model.CurrencyList, "CurrencyID", "CurrencyKey"), "-----Select-----", new { @id = "ddlCurrency" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col l6 s12">
                                <div class="border radius5 clearfix pos-rel" style="padding:25px 0; margin:25px 0;">
                                    <h3 class="legend">Fuel Rates</h3>
                                    <div class="input-field col l8 s12">
                                        <label>Effective Date<span class="Mandatory">*</span></label>
                                        <input id="txtEffectiveDateFuel" type="text" class="datepicker">
                                    </div>
                                    <div class="input-field col l4 s12" style="padding-top:25px;">
                                        <input type="checkbox" id="chkDailyUpdate" class="filled-in" style="margin-top: 50px;text-align: right;">
                                        <label for="chkDailyUpdate">Daily Update</label>
                                    </div>
                                    <div class="input-field col s12">
                                        <div class="radius5" style="width:100%">
                                            <div id="dvFuelType">
                                                <table id="grdFuelType"></table>
                                                <div id="grdPagerFuelType"></div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col l6 s12">
                                <div class="border radius5 clearfix pos-rel" style="padding:25px 0; margin:25px 0;">
                                    <h3 class="legend">Overtime Rates</h3>
                                    <div class="input-field col l12 s12">
                                        <label>Effective Date<span class="Mandatory">*</span></label>
                                        <input id="txtEffectiveDateOvertime" type="text" class="datepicker">
                                    </div>
                                    <div class="input-field col s12">
                                        <div class="radius5" style="width:100%">
                                            <div id="dvOvertime">
                                                <table id="grdOvertime"></table>
                                                <div id="grdPagerOvertime"></div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col l6 s12">
                                <div class="border radius5 clearfix pos-rel" style="padding:25px 0; margin:25px 0;">
                                    <h3 class="legend">Day Off Rates</h3>
                                    <div class="input-field col l12 s12">
                                        <label>Effective Date<span class="Mandatory">*</span></label>
                                        <input id="txtEffectiveDateDayOff" type="text" class="datepicker">
                                    </div>
                                    <div class="input-field col s12">
                                        <div class="radius5" style="width:100%">
                                            <div id="dvFuelType">
                                                <table id="grdDayoffRates"></table>
                                                <div id="grdPagerDayoffRates"></div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col l6 s12">
                                <div class="border radius5 clearfix pos-rel" style="padding:25px 0; margin:25px 0;">
                                    <h3 class="legend">Allowance Rates</h3>
                                    <div class="input-field col l12 s12">
                                        <label>Effective Date<span class="Mandatory">*</span></label>
                                        <input id="txtEffectiveDateAllowance" type="text" class="datepicker">
                                    </div>
                                    <div class="input-field col s12">
                                        <div class="radius5" style="width:100%">
                                            <div id="dvOvertime">
                                                <table id="grdAllowanceRates"></table>
                                                <div id="grdPagerAllowanceRates"></div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="Trip-details" class="col s12 tab-content">
                        <div class="row">
                            <div class="col l4s12">
                                <label>Effective Date<span class="Mandatory">*</span></label>
                                <input type="text" class="datepicker" id="txtEffectiveDatetaxiRate">
                            </div>
                            <div class="col l4 s12">
                                <label>Model</label>
                                <select id="ddlTaxiModels"></select>
                            </div>
                        </div>                      

                        <div class="input-field col s12">
                            <div class="radius5" style="width:100%">
                                <div id="dvTaxirates">
                                    <table id="grdTaxiRates"></table>
                                    <div id="grdPagerTaxiRates"></div>
                                </div>
                            </div>
                        </div>


                    </div>
                    <div id="Setup-details" class="col s12 tab-content">
                        <div class="row">
                            <div class="input-field col l3 s12">
                                <div class="clearfix" style="padding-bottom: 25px">
                                    <input type="radio" class="with-gap" name="group1" id="rbEmployee" checked>
                                    <label for="rbEmployee">Employee</label>
                                    <input type="radio" class="with-gap" name="group1" id="rbFrontOffice">
                                    <label for="rbFrontOffice">Front Office</label>
                                </div>
                            </div>
                            <div class="input-field col l4 s12">
                                <label>Location</label>
                                @Html.DropDownListFor(m => m.generalsetup.UnitID, new SelectList(Model.UnitList, "UnitID", "Unit"), "-----Select-----", new { @id = "ddlUnitsEmployee" })
                            </div>
                        </div>
                        <br />
                        <br />
                        <div id="divemployee">
                            <div class="row no-margin">
                               
                                <div class="input-field col l4 s12">
                                    <label>Employee Code<span class="Mandatory">*</span></label>
                                    <input type="text" id="txtEmployeeCode" maxlength="8">
                                    <input type="text" id="txtEmployeeID" hidden>
                                    <button id="btnShowEmpmodal" type="button" class="button-lst"><span></span><span></span><span></span></button>
                                </div>
                                <div class="input-field col l4 s12">
                                    <label>Employee Name<span class="Mandatory">*</span></label>
                                    <input type="text" class="validate" id="txtEmployeeName" maxlength="60">
                                </div>
                            </div>
                            <div class="row no-margin">
                                <div class="input-field col l4 s12">
                                    <label>Mail ID<span class="Mandatory">*</span></label>
                                    <input type="email" class="validate" id="txtMailID" maxlength="60">

                                </div>
                                <div class="input-field col l4 s12">
                                    <label>Mobile Number</label>
                                    <input type="text" class="validate" id="txtMobileNo" maxlength="11">
                                </div>
                                <div class="input-field col l4 s12">
                                    <label>BCC</label>
                                    <input type="email" class="validate" id="txtBccMail" maxlength="45">
                                </div>
                            </div>
                            <div class="row no-margin">
                                <div class="input-field col l4 s12">
                                    <label>CC1</label>
                                    <input type="email" class="validate" id="txtCcMail1" maxlength="45">

                                </div>
                                <div class="input-field col l4 s12">
                                    <label>CC2</label>
                                    <input type="email" class="validate" id="txtCcMail2" maxlength="45">
                                </div>
                                <div class="input-field col l4 s12">
                                    <label>CC3</label>
                                    <input type="email" class="validate" id="txtCcMail3" maxlength="45">
                                </div>
                            </div>
                        </div>
                        <div id="divfrontoffice">
                            <div class="row no-margin">
                                <div class="input-field col l4 s12">
                                    <label>Front Office Mail ID<span class="Mandatory">*</span></label>
                                    <input type="email" class="validate" id="txtFrontOfficeMailID" maxlength="45">
                                </div>
                                <div class="input-field col l4 s12">
                                    <label>Department Head Mail ID</label>
                                    <input type="email" class="validate" id="txtDepartmentMailID" maxlength="45">
                                </div>
                                <div class="input-field col l4 s12">
                                    <label>Executive Mail ID</label>
                                    <input type="email" class="validate" id="txtExecutiveMailID" maxlength="45">
                                </div>
                            </div>
                        </div>
                        <div class="form-submit clearfix">
                            <div class="right">
                                <button type="button" class="btn save round button" id="btnEmployeeSave">Save</button>
                                <button type="button" class="btn save round button" id="btnEmployeeCancel">Cancel</button>
                            </div>
                        </div>
                    </div>
                    <div id="SAP-Link1" class="col s12 tab-content">
                        <h2 class="form-title"><span>Vendor Account SAP</span></h2>
                        <div class="row no-margin">
                            <div class="input-field col l4 s12">
                                <label for="Vendor_Code">Tax</label>
                                <select id="ddlTax"></select>
                            </div>
                            <div class="input-field col l4 s12">
                                <label for="Name">Pollution Certificate</label>
                                <select id="ddlPollution"></select>
                            </div>
                            <div class="input-field col l4 s12">
                                <label for="Name">Testing</label>
                                <select id="ddlTesting"></select>
                            </div>
                        </div>
                        <div class="row no-margin">
                            <div class="input-field col l4 s12">
                                <label for="Vendor_Code">Auto Slip</label>
                                <select id="ddlAutoSlip"></select>
                            </div>
                            <div class="input-field col l4 s12">
                                <label for="Name">Taxi Slip</label>
                                <select id="ddlTaxiSlip"></select>
                            </div>
                        </div>
                    </div>
                    <div id="SAP-Link2" class="col s12 tab-content">
                        <h2 class="form-title"><span>Expenses Account SAP</span></h2>
                        <div class="row no-margin">
                            <div class="input-field col l4 s12">
                                <label for="Vendor_Code">Insurance</label>
                                <select id="ddlExpenseInsurance"></select>
                            </div>
                            <div class="input-field col l4 s12">
                                <label for="Vendor_Code">Tax</label>
                                <select id="ddlExpenseTax"></select>
                            </div>
                            <div class="input-field col l4 s12">
                                <label for="Name">Pollution Certificate</label>
                                <select id="ddlExpensePollution"></select>
                            </div>
                        </div>
                        <div class="row no-margin">
                            <div class="input-field col l4 s12">
                                <label for="Name">Testing/Permit Fee</label>
                                <select id="ddlExpenseTesting"></select>
                            </div>
                            <div class="input-field col l4 s12">
                                <label for="Vendor_Code">Service/Repair</label>
                                <select id="ddlExpenseService"></select>
                            </div>
                            <div class="input-field col l4 s12">
                                <label for="Name">Tyre Purchase</label>
                                <select id="ddlExpenseTyrePurchase"></select>
                            </div>
                        </div>
                        <div class="row no-margin">
                            <div class="input-field col l4 s12">
                                <label for="Name">Re-Register</label>
                                <select id="ddlExpenseReregister"></select>
                            </div>
                            <div class="input-field col l4 s12">
                                <label for="Vendor_Code">Battery Purchase</label>
                                <select id="ddlExpenseBatteryPurchase"></select>
                            </div>
                            <div class="input-field col l4 s12">
                                <label for="Vendor_Code">Fuel Bill</label>
                                <select id="ddlExpenseFuelBill"></select>
                            </div>
                        </div>
                        <div class="row no-margin">
                            <div class="input-field col l4 s12">
                                <label for="Name">Taxi Payments</label>
                                <select id="ddlExpenseTaxiPayments"></select>
                            </div>
                            <div class="input-field col l4 s12">
                                <label for="Name">Auto Payments</label>
                                <select id="ddlExpenseAutoPayments"></select>
                            </div>
                            <div class="input-field col l4 s12">
                                <label for="Vendor_Code">Accident Advance</label>
                                <select id="ddlExpenseAccidentAdvance"></select>
                            </div>
                        </div>
                        <div class="row no-margin">
                            <div class="input-field col l4 s12">
                                <label for="Name">Maintenance</label>
                                <select id="ddlExpenseMaintenance"></select>
                            </div>
                        </div>
                    </div>
                    <div id="SAP-Link3" class="col s12 tab-content">
                        <div class="row">
                            <div class="col s3">
                                <fieldset class="radius5">
                                    <legend><h3>Insurance</h3></legend>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>GST Rate</label>
                                            <select id="ddlInsuranceGSTRate" title="GST Rate"></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>CGST Rate</label>
                                            <select id="ddlInsuranceCgstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>SGST Rate</label>
                                            <select id="ddlInsuranceSgstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>IGST Rate</label>
                                            <select id="ddlInsuranceIgstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>CESS Rate</label>
                                            <select id="ddlInsuranceCessRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                </fieldset>
                            </div>
                            <div class="col s3">
                                <fieldset class="radius5">
                                    <legend><h3>Tyre</h3></legend>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>GST Rate</label>
                                            <select id="ddlTyreGstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>CGST Rate</label>
                                            <select id="ddlTyreCgstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>SGST Rate</label>
                                            <select id="ddlTyreSgstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>IGST Rate</label>
                                            <select id="ddlTyreIgstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>CESS Rate</label>
                                            <select id="ddlTyreCessRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                </fieldset>
                            </div>
                            <div class="col s3">
                                <fieldset class="radius5">
                                    <legend><h3>Battery</h3></legend>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>GST Rate</label>
                                            <select id="ddlBatteryGstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>CGST Rate</label>
                                            <select id="ddlBatteryCgstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>SGST Rate</label>
                                            <select id="ddlBatterySgstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>IGST Rate</label>
                                            <select id="ddlBatteryIgstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>CESS Rate</label>
                                            <select id="ddlBatteryCessRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                </fieldset>
                            </div>
                            <div class="col s3">
                                <fieldset class="radius5">
                                    <legend><h3>Tax</h3></legend>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>GST Rate</label>
                                            <select id="ddlTaxGstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>CGST Rate</label>
                                            <select id="ddlTaxCgstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>SGST Rate</label>
                                            <select id="ddlTaxSgstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>IGST Rate</label>
                                            <select id="ddlTaxIgstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>CESS Rate</label>
                                            <select id="ddlTaxCessRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                </fieldset>
                            </div>
                        </div>
                        <div class="row fieldsetrow">
                            <div class="col s3" >
                                <fieldset class="radius5">
                                    <legend><h3>Pollution</h3></legend>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>GST Rate</label>
                                            <select id="ddlPollutionGstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>CGST Rate</label>
                                            <select id="ddlPollutionCgstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>SGST Rate</label>
                                            <select id="ddlPollutionSgstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>IGST Rate</label>
                                            <select id="ddlPollutionIgstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>CESS Rate</label>
                                            <select id="ddlPollutionCessRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                </fieldset>
                            </div>
                            <div class="col s3">
                                <fieldset class="radius5">
                                    <legend><h3>Permit</h3></legend>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>GST Rate</label>
                                            <select id="ddlPermitGstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>CGST Rate</label>
                                            <select id="ddlPermitCgstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>SGST Rate</label>
                                            <select id="ddlPermitSgstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>IGST Rate</label>
                                            <select id="ddlPermitIgstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>CESS Rate</label>
                                            <select id="ddlPermitCessRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                </fieldset>
                            </div>
                            <div class="col s3">
                                <fieldset class="radius5">
                                    <legend><h3>Testing</h3></legend>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>GST Rate</label>
                                            <select id="ddlTestingGstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>CGST Rate</label>
                                            <select id="ddlTestingCgstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>SGST Rate</label>
                                            <select id="ddlTestingSgstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>IGST Rate</label>
                                            <select id="ddlTestingIgstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>CESS Rate</label>
                                            <select id="ddlTestingCessRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                </fieldset>
                            </div>
                            <div class="col s3">
                                <fieldset class="radius5">
                                    <legend><h3>Service</h3></legend>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>GST Rate</label>
                                            <select id="ddlServiceGstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>CGST Rate</label>
                                            <select id="ddlServiceCgstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>SGST Rate</label>
                                            <select id="ddlServiceSgstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>IGST Rate</label>
                                            <select id="ddlServiceIgstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>CESS Rate</label>
                                            <select id="ddlServiceCessRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                </fieldset>
                            </div>
                        </div>
                    </div>
                    <div id="SAP-Link4" class="col s12 tab-content">
                        <div class="row no-margin">
                            <div class="col s3">
                                <fieldset class="radius5">
                                    <legend><h3>Fuel Oil</h3></legend>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>GST Rate</label>
                                            <select id="ddlFuelOilGstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>CGST Rate</label>
                                            <select id="ddlFuelOilCgstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>SGST Rate</label>
                                            <select id="ddlFuelOilSgstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>IGST Rate</label>
                                            <select id="ddlFuelOilIgstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>CESS Rate</label>
                                            <select id="ddlFuelOilCessRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                </fieldset>
                            </div>
                            <div class="col s3">
                                <fieldset class="radius5">
                                    <legend><h3>Taxi</h3></legend>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>GST Rate</label>
                                            <select id="ddlTaxiGstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>CGST Rate</label>
                                            <select id="ddlTaxiCgstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>SGST Rate</label>
                                            <select id="ddlTaxiSgstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>IGST Rate</label>
                                            <select id="ddlTaxiIgstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>CESS Rate</label>
                                            <select id="ddlTaxiCessRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                </fieldset>
                            </div>
                            <div class="col s3">
                                <fieldset class="radius5">
                                    <legend><h3>Auto</h3></legend>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>GST Rate</label>
                                            <select id="ddlAutoGstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>CGST Rate</label>
                                            <select id="ddlAutoCgstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>SGST Rate</label>
                                            <select id="ddlAutoSgstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>IGST Rate</label>
                                            <select id="ddltAutoIgstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>CESS Rate</label>
                                            <select id="ddlAutoCessRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                </fieldset>
                            </div>
                            <div class="col s3">
                                <fieldset class="radius5">
                                    <legend><h3>Accident</h3></legend>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>GST Rate</label>
                                            <select id="ddlAccidentGstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>CGST Rate</label>
                                            <select id="ddlAccidentCgstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>SGST Rate</label>
                                            <select id="ddlAccidentSgstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>IGST Rate</label>
                                            <select id="ddlAccidentIgstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>CESS Rate</label>
                                            <select id="ddlAccidentCessRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                </fieldset>
                            </div>
                        </div>
                        <div class="row no-margin fieldsetrow">
                            <div class="col s3">
                                <fieldset class="radius5">
                                    <legend><h3>Maintenance</h3></legend>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>GST Rate</label>
                                            <select id="ddlMaintenanceGstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>CGST Rate</label>
                                            <select id="ddlMaintenanceCgstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>SGST Rate</label>
                                            <select id="ddlMaintenanceSgstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>IGST Rate</label>
                                            <select id="ddlMaintenanceIgstRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                    <div class="row no-margin">
                                        <div class="input-field col l12 s12">
                                            <label>CESS Rate</label>
                                            <select id="ddlMaintenanceCessRate" title="CGST Rate"><option value="0">-----Select-----</option></select>
                                        </div>
                                    </div>
                                </fieldset>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </form>
        <div class="form-submit clearfix">
            <div class="right">
                <button type="submit" class="btn save round button" id="btnSave">Save</button>
                <button type="submit" class="btn save round button" id="btnSaveToOtherUnits">Apply to other Units</button>
            </div>
        </div>
    </div>

</div>

@*Search Employee Popup Window*@
<div id="modalEmpDetails" class="modal small-modal">
    <div class="row no-margin">
        <h2 class="title">
            Select Employee
            <a href="#!" class="modal-action modal-close right">
                <i class="icon pop-close"></i>
            </a>
        </h2>
    </div>

    <div class="modal-content" id="modalEmp">
        <div class="row">
            <div class="loader" id="loader_Emplist">
                <div class="lds-ellipsis"><div></div><div></div><div></div><div></div></div>
            </div>
            <div class="input-field col l12 s12">
                <div class="clearfix">

                    <div id="dvContainer" class="col-md-12">
                        <table id="grid-Employeetable"></table>
                        <div id="grid-employeepager"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@*Applicable to other units*@
<div id="modalApplytoOtherUnits" class="modal small-modal out-scroll ">
    <div class="row no-margin">
        <h2 class="title">Units and Features<a href="#!" class="modal-action modal-close right"><i class="icon pop-close"></i></a></h2>
        <div class="col s12">
            <label>Applicable for</label>
            @Html.DropDownListFor(m => m.generalsetup.UnitID, new SelectList(Model.UnitList, "UnitID", "Unit"), "Select", new { multiple = "true", @id = "ddlUnitsToApply" })
        </div>
    </div>    
    <div class="row no-margin">
        <div class="input-field col l3 s12">
            <input type="checkbox" id="ChkFuelRates" class="filled-in">
            <label for="ChkFuelRates">Fuel Rates</label>
        </div>
        <div class="input-field col l3 s12">
            <input type="checkbox" id="ChkOvertimeRates" class="filled-in">
            <label for="ChkOvertimeRates">Overtime Rates</label>
        </div>
        <div class="input-field col l3 s12">
            <input type="checkbox" id="ChkDayoffRates" class="filled-in">
            <label for="ChkDayoffRates">Dayoff Rates</label>
        </div>
        <div class="input-field col l3 s12">
            <input type="checkbox" id="ChkAllowanceRates" class="filled-in">
            <label for="ChkAllowanceRates">Allowance Rates</label>
        </div>
    </div>
    <div class="row no-margin">
        <div class="input-field col l3 s12">
            <input type="checkbox" id="ChkTaxiRates" class="filled-in">
            <label for="ChkTaxiRates">Taxi Rates</label>
        </div>
        <div class="input-field col l3 s12">
            <input type="checkbox" id="ChkOthers" class="filled-in">
            <label for="ChkOthers">Others</label>
        </div>
       
    </div>

    <div class="form-submit clearfix">
        <div class="right">
            <button type="submit" class="btn save round button" id="btnSaveOtherUnits">OK</button>
        </div>
    </div>
</div>


@section scripts {
    @Scripts.Render("~/bundles/GeneralSetup/Index")
}


GeneralSetupManager.cs
======================
using DapperBase;
using SAPPERI.Model.Model;
using SAPPERI.Model.SeviceModel;
using SAPPERI.Model.ViewModel;
using SAPPERI.Model;
using SAPPERI.Service;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Framework.Web;
using System.Configuration;

namespace SAPPERI.Biz
{
    public class GeneralSetUpManager
    {
        private readonly SAPPeriIMService _sapPeriIMService;
        private readonly IDapperRepository _repository;

        public GeneralSetUpManager(SAPPeriIMService sapPeriIMService, IDapperRepository repository)
        {

            _sapPeriIMService = sapPeriIMService;
            _repository = repository;
        }

        /// <summary>
        /// Gets the unit by application rights.
        /// </summary>
        /// <param name="ApplicationId">The application identifier.</param>
        /// <param name="UserId">The user identifier.</param>
        /// <param name="CompanyID">The company identifier.</param>
        /// <param name="AppCode">The application code.</param>
        /// <param name="AppAuthKey">The application authentication key.</param>
        /// <returns></returns>
        public IEnumerable<UnitMaster> GetUnitByApplicationRights(Int64 ApplicationId, Int64 UserId, Int64 CompanyID, string AppCode, string AppAuthKey)
        {
            return _sapPeriIMService.GetUnitByApplicationRights(ApplicationId, UserId, CompanyID, AppCode, AppAuthKey);
        }

        /// <summary>
        /// Gets the currency list.
        /// </summary>
        /// <returns></returns>
        public IEnumerable<CurrencyServiceViewModel> GetCurrencyList()
        {
            return _sapPeriIMService.GetCurrency();
        }

        /// <summary>
        /// Loadmodelses the specified unit identifier.
        /// </summary>
        /// <param name="UnitID">The unit identifier.</param>
        /// <returns></returns>
        public IEnumerable<ModelVehicleModel> loadmodels()
        {
            var taximodellist = _repository.Query<ModelVehicleModel>(
                         @"SELECT ModelID,ModelName,ModelCode FROM peri_vms_model WHERE CompanyID=@CompanyID AND IsActive=1",
                    new
                    {
                        CompanyID = ApplicationContext.Current.UserInfo.CompanyID
                    });
            return taximodellist;
        }

        /// <summary>
        /// Loadmodelsfromtaxis the specified unit identifier.
        /// </summary>
        /// <param name="UnitID">The unit identifier.</param>
        /// <returns></returns>
        public IEnumerable<ModelVehicleModel> loadmodelsfromtaxi(int UnitID)
        {
            var taximodellist = _repository.Query<ModelVehicleModel>(
                         @"SELECT ModelID,ModelName FROM peri_vms_modelrate WHERE CompanyID=@CompanyID AND IsActive=1 and UnitID=@UnitID",
                    new
                    {
                        CompanyID = ApplicationContext.Current.UserInfo.CompanyID,
                        UnitID = UnitID
                    });
            return taximodellist;
        }

        /// <summary>
        /// Binds the units.
        /// </summary>
        /// <returns></returns>
        public IEnumerable<UnitMaster> BindUnits()
        {
            return _sapPeriIMService.GetUnitByApplicationRights(Convert.ToInt64(ApplicationContext.Current.UserInfo.ApplicationId), ApplicationContext.Current.UserInfo.UserID, ApplicationContext.Current.UserInfo.SecurityCompanyID, ApplicationContext.Current.UserInfo.AppCode, ApplicationContext.Current.UserInfo.AppAuthKey);
        }



        /// <summary>
        /// Binds the fuel rates.
        /// </summary>
        /// <param name="UnitID">The unit identifier.</param>
        /// <returns></returns>
        public GeneralSetUpViewModel BindRates(int UnitID)
        {
            GeneralSetUpViewModel general = new GeneralSetUpViewModel();

            var generalsetuplst = _repository.Query<GeneralSetupModel>(
            @"select * from peri_vms_setup where CompanyID=@CompanyID and UnitID=@UnitID",
       new
       {
           UnitID = UnitID,
           CompanyID = ApplicationContext.Current.UserInfo.CompanyID
       });

            string fuelrateQuery = @"SELECT look.lookupid LookupID, look.type LookupType,IFNULL(rate,0) Rate,
                                     DATE_FORMAT(EffectiveDate,'%d/%m/%Y') EffectiveDateString
                                     FROM peri_vms_lookup look
                                     INNER JOIN peri_vms_lookupcategory cat ON cat.lookupcategoryid = look.lookupcategoryid  
                                     LEFT JOIN peri_vms_fueltyperates_m fuel ON fuel.LookupID = look.lookupid AND UnitID=@UnitID AND CompanyID=@CompanyID
                                     AND fuel.EffectiveDate =( Select  EffectiveDate from peri_vms_fueltyperates_m WHERE UnitID = @UnitID AND 
                                          CompanyID =@CompanyID AND EffectiveDate <= curdate()  ORDER BY EffectiveDate DESC LIMIT 1)
                                     WHERE cat.LookupCategoryID IN (@FuelType , @GasType, @Oil)
                                     GROUP BY look.type ORDER BY look.order ASC";
            var fueltyperates = _repository.Query<FuelTypeRatesModel>
                (fuelrateQuery,
            new
            {
                UnitID = UnitID,
                FuelType = SAPPERI.Model.ConstantModel.lookupCategory.FuelType,
                GasType = SAPPERI.Model.ConstantModel.lookupCategory.GasType,
                Oil = SAPPERI.Model.ConstantModel.lookupCategory.Oil,
                CompanyID = ApplicationContext.Current.UserInfo.CompanyID
            });

            string overtimeratesQuery = @"SELECT look.lookupid DriverCategoryLookupID, look.type Type, IFNULL(OvertimeRate, 0) AS OvertimeRate,
                                          DATE_FORMAT(EffectiveDate, '%d/%m/%Y') AS EffectiveDateString 
                                          FROM   peri_vms_lookup look
                                          INNER JOIN peri_vms_lookupcategory cat ON cat.lookupcategoryid = look.lookupcategoryid
                                          LEFT  JOIN peri_vms_categoryovertimerate_m ovr ON ovr.DriverCategoryLookupID = look.lookupid AND  
                                          ovr.UnitID = @UnitID AND ovr.CompanyID = @CompanyID AND 
                                          EffectiveDate =( Select  EffectiveDate from peri_vms_categoryovertimerate_m WHERE UnitID = @UnitID AND 
                                          CompanyID =@CompanyID AND EffectiveDate <= curdate()  ORDER BY EffectiveDate DESC LIMIT 1)
                                          WHERE cat.LookupCategoryID = @LookupCategoryID order by look.order asc";
            var overtimerates = _repository.Query<CategoryOvertimeModel>(
                overtimeratesQuery,
           new
           {
               UnitID = UnitID,
               LookupCategoryID = SAPPERI.Model.ConstantModel.lookupCategory.DriverCategory,
               CompanyID = ApplicationContext.Current.UserInfo.CompanyID
           });

            string dayOffRatesQuery = @"SELECT a.lookupid DriverCategoryLookupID,b.lookupid DayOffTypeLookupID,a.type DriverType,
                           b.type Type,IFNULL(dutyoff.OffDayRate,0) OffDayRate,  DATE_FORMAT(dutyoff.EffectiveDate,'%d/%m/%Y') EffectiveDateString
                           FROM peri_vms_lookup a
                           INNER JOIN peri_vms_lookup b
                           LEFT JOIN peri_vms_dutymoderate_m AS dutyoff ON dutyoff.DayOffTypeLookupID = b.LookupID AND 
                                     dutyoff.DriverCategoryLookupID=a.lookupid  AND  UnitID=@UnitID AND CompanyID=@CompanyID 
                                     AND dutyoff.EffectiveDate =( Select  EffectiveDate from peri_vms_dutymoderate_m WHERE UnitID =@UnitID AND 
                                          CompanyID =@CompanyID  AND EffectiveDate <= curdate()  ORDER BY EffectiveDate DESC LIMIT 1)
                           WHERE  a.lookupcategoryID = @lookupcategoryID AND b.lookupcategoryID = @DayOffType
                           ORDER BY a.order ASC , b.order ASC";
            var dayoffrates = _repository.Query<DutyModerateModel>(
              dayOffRatesQuery,
          new
          {
              UnitID = UnitID,
              lookupcategoryID = SAPPERI.Model.ConstantModel.lookupCategory.DriverCategory,
              DayOffType = SAPPERI.Model.ConstantModel.lookupCategory.DayOffType,
              CompanyID = ApplicationContext.Current.UserInfo.CompanyID
          });

            string allowanceQuery = @"SELECT a.lookupid DriverCategoryLookupID,b.lookupid AllowanceTypeLookupID,a.type DriverType,b.type Type,
                                             IFNULL(AllowanceRate, 0) AllowanceRate,DATE_FORMAT(EffectiveDate, '%d/%m/%Y') EffectiveDateString
                                      FROM peri_vms_lookup a
                                      CROSS JOIN peri_vms_lookup b
                                      LEFT JOIN peri_vms_allowancerate_m AS allowance ON allowance.AllowanceTypeLookupID = b.LookupID AND 
                                                allowance.DriverCategoryLookupID=a.lookupid  AND   UnitID =@UnitID AND CompanyID =@CompanyID
                                                AND allowance.EffectiveDate =( Select  EffectiveDate from peri_vms_allowancerate_m WHERE  UnitID =@UnitID AND 
                                                CompanyID =@CompanyID AND EffectiveDate <= curdate()  ORDER BY EffectiveDate DESC LIMIT 1)
                                      WHERE a.lookupcategoryID = @DriverCategory AND b.lookupcategoryID = @AllowanceType
                                      ORDER BY a.order ASC , b.order ASC";

            var allowancerates = _repository.Query<AllowanceRateModel>(allowanceQuery,
         new
         {
             UnitID = UnitID,
             DriverCategory = SAPPERI.Model.ConstantModel.lookupCategory.DriverCategory,
             AllowanceType = SAPPERI.Model.ConstantModel.lookupCategory.AllowanceType,
             CompanyID = ApplicationContext.Current.UserInfo.CompanyID
         });



            var taxirateslist = _repository.Query<TaxiRateModel>(
              @"SELECT ra.ModelID,mo.ModelName,ra.LookupID,ra.LookupType,ra.ACKiloMeterRate,
               ra.NonACKiloMeterRate,ra.ACHoulryRate,ra.NonACHourlyRate,DATE_FORMAT(EffectiveDate,'%d/%m/%Y') EffectiveDateString
               FROM peri_vms_modelrate ra 
               INNER JOIN peri_vms_model mo ON ra.ModelID=mo.ModelID                  
               WHERE ra.UnitID =@UnitID AND ra.CompanyID =@CompanyID
               AND EffectiveDate =(Select  EffectiveDate from peri_vms_modelrate WHERE UnitID =@UnitID AND CompanyID =@CompanyID AND
                                   EffectiveDate <= curdate()  ORDER BY EffectiveDate DESC LIMIT 1)",
         new
         {
             UnitID = UnitID,
             CompanyID = ApplicationContext.Current.UserInfo.CompanyID
         });

            var lotusemployeelist = _repository.Query<LotusMailModel>(
             @"select * from peri_vms_lotusmail where CompanyID=@CompanyID and UnitID=@UnitID",
        new
        {
            UnitID = UnitID,
            CompanyID = ApplicationContext.Current.UserInfo.CompanyID
        });

            var lotusfrontofficelist = _repository.Query<LotusMailModel>(
            @"select * from peri_vms_lotusmail_unit where CompanyID=@CompanyID and UnitID=@UnitID",
       new
       {
           UnitID = UnitID,
           CompanyID = ApplicationContext.Current.UserInfo.CompanyID
       });



            var taxlist = new Service.SAPPeriIMService().GetVendorsforVMS(Convert.ToInt32(ApplicationContext.Current.UserInfo.CompanyID), UnitID, null, Convert.ToInt64(ApplicationContext.Current.UserInfo.ApplicationId), ConstantModel.lookupCategory.Tax);
            var pollutionlist = new Service.SAPPeriIMService().GetVendorsforVMS(Convert.ToInt32(ApplicationContext.Current.UserInfo.CompanyID), UnitID, null, Convert.ToInt64(ApplicationContext.Current.UserInfo.ApplicationId), ConstantModel.lookupCategory.Pollution);
            var testinglist = new Service.SAPPeriIMService().GetVendorsforVMS(Convert.ToInt32(ApplicationContext.Current.UserInfo.CompanyID), UnitID, null, Convert.ToInt64(ApplicationContext.Current.UserInfo.ApplicationId), ConstantModel.lookupCategory.Testing);
            var autosliplist = new Service.SAPPeriIMService().GetVendorsforVMS(Convert.ToInt32(ApplicationContext.Current.UserInfo.CompanyID), UnitID, null, Convert.ToInt64(ApplicationContext.Current.UserInfo.ApplicationId), ConstantModel.lookupCategory.AutoSlip);
            var taxisliplist = new Service.SAPPeriIMService().GetVendorsforVMS(Convert.ToInt32(ApplicationContext.Current.UserInfo.CompanyID), UnitID, null, Convert.ToInt64(ApplicationContext.Current.UserInfo.ApplicationId), ConstantModel.lookupCategory.TaxiSlip);
            var expenseinsurancelist = new Service.SAPPeriIMService().GetVendorsforVMS(Convert.ToInt32(ApplicationContext.Current.UserInfo.CompanyID), UnitID, null, Convert.ToInt64(ApplicationContext.Current.UserInfo.ApplicationId), ConstantModel.lookupCategory.Insurance);
            var expensetaxlist = new Service.SAPPeriIMService().GetVendorsforVMS(Convert.ToInt32(ApplicationContext.Current.UserInfo.CompanyID), UnitID, null, Convert.ToInt64(ApplicationContext.Current.UserInfo.ApplicationId), ConstantModel.lookupCategory.Tax);
            var expensepollutionlist = new Service.SAPPeriIMService().GetVendorsforVMS(Convert.ToInt32(ApplicationContext.Current.UserInfo.CompanyID), UnitID, null, Convert.ToInt64(ApplicationContext.Current.UserInfo.ApplicationId), ConstantModel.lookupCategory.Pollution);
            var expensetestinglist = new Service.SAPPeriIMService().GetVendorsforVMS(Convert.ToInt32(ApplicationContext.Current.UserInfo.CompanyID), UnitID, null, Convert.ToInt64(ApplicationContext.Current.UserInfo.ApplicationId), ConstantModel.lookupCategory.Testing);
            var expenseservicelist = new Service.SAPPeriIMService().GetVendorsforVMS(Convert.ToInt32(ApplicationContext.Current.UserInfo.CompanyID), UnitID, null, Convert.ToInt64(ApplicationContext.Current.UserInfo.ApplicationId), ConstantModel.lookupCategory.ServiceRepair);
            var expensetyrelist = new Service.SAPPeriIMService().GetVendorsforVMS(Convert.ToInt32(ApplicationContext.Current.UserInfo.CompanyID), UnitID, null, Convert.ToInt64(ApplicationContext.Current.UserInfo.ApplicationId), ConstantModel.lookupCategory.Tyre);
            var expensereregisterlist = new Service.SAPPeriIMService().GetVendorsforVMS(Convert.ToInt32(ApplicationContext.Current.UserInfo.CompanyID), UnitID, null, Convert.ToInt64(ApplicationContext.Current.UserInfo.ApplicationId), ConstantModel.lookupCategory.ReRegister);
            var expensebatterylist = new Service.SAPPeriIMService().GetVendorsforVMS(Convert.ToInt32(ApplicationContext.Current.UserInfo.CompanyID), UnitID, null, Convert.ToInt64(ApplicationContext.Current.UserInfo.ApplicationId), ConstantModel.lookupCategory.Battery);
            var expensefuelbilllist = new Service.SAPPeriIMService().GetVendorsforVMS(Convert.ToInt32(ApplicationContext.Current.UserInfo.CompanyID), UnitID, null, Convert.ToInt64(ApplicationContext.Current.UserInfo.ApplicationId), ConstantModel.lookupCategory.FuelOilBill);
            var expensetaxipaymentslist = new Service.SAPPeriIMService().GetVendorsforVMS(Convert.ToInt32(ApplicationContext.Current.UserInfo.CompanyID), UnitID, null, Convert.ToInt64(ApplicationContext.Current.UserInfo.ApplicationId), ConstantModel.lookupCategory.TaxiSlip);
            var expenseautopaymentslist = new Service.SAPPeriIMService().GetVendorsforVMS(Convert.ToInt32(ApplicationContext.Current.UserInfo.CompanyID), UnitID, null, Convert.ToInt64(ApplicationContext.Current.UserInfo.ApplicationId), ConstantModel.lookupCategory.AutoSlip);
            var expenseaccidentadvancelist = new Service.SAPPeriIMService().GetVendorsforVMS(Convert.ToInt32(ApplicationContext.Current.UserInfo.CompanyID), UnitID, null, Convert.ToInt64(ApplicationContext.Current.UserInfo.ApplicationId), ConstantModel.lookupCategory.AccidentClaim);
            var expensemaintenancelist = new Service.SAPPeriIMService().GetVendorsforVMS(Convert.ToInt32(ApplicationContext.Current.UserInfo.CompanyID), UnitID, null, Convert.ToInt64(ApplicationContext.Current.UserInfo.ApplicationId), ConstantModel.lookupCategory.VehicleMaintain);


            general.OvertimeRates = overtimerates;
            general.FuelTypeRates = fueltyperates;
            general.DayOffRates = dayoffrates;
            general.AllowanceRates = allowancerates;
            general.TaxList = taxlist;
            general.PollutionList = pollutionlist;
            general.TestingList = testinglist;
            general.AutoSlipList = autosliplist;
            general.TaxiSlipList = taxisliplist;
            general.ExpenseInsuranceList = expenseinsurancelist;
            general.ExpenseTaxList = expensetaxlist;
            general.ExpensePollutionList = expensepollutionlist;
            general.ExpenseTestingList = expensetestinglist;
            general.ExpenseServiceList = expenseservicelist;
            general.ExpenseTyreList = expensetyrelist;
            general.ExpenseReregisterList = expensereregisterlist;
            general.ExpenseBatteryList = expensebatterylist;
            general.ExpenseFuelBillList = expensefuelbilllist;
            general.ExpenseTaxiPaymentsList = expensetaxipaymentslist;
            general.ExpenseAutoPaymentsList = expenseautopaymentslist;
            general.ExpenseAccidentAdvanceList = expenseaccidentadvancelist;
            general.ExpenseMaintenanceList = expensemaintenancelist;
            general.TaxiRatesList = taxirateslist;
            general.LotusEmployeeList = lotusemployeelist;
            general.LotusFrontOfficeList = lotusfrontofficelist;
            general.GeneralSetUpLst = generalsetuplst;

            return general;
        }

        /// <summary>
        /// Binds the taxi rate types.
        /// </summary>
        /// <param name="UnitID">The unit identifier.</param>
        /// <returns></returns>
        public IEnumerable<TaxiRateModel> BindTaxiRateTypes(int UnitID)
        {
            var TaxiModelList = _repository.Query<TaxiRateModel>
               (@"SELECT look.lookupid LookupID,look.type LookupType
                FROM  peri_vms_lookup look INNER JOIN peri_vms_lookupcategory cat ON 
                cat.lookupcategoryid=look.lookupcategoryid  WHERE cat.LookupCategoryID =
                " + SAPPERI.Model.ConstantModel.lookupCategory.TaxiRateType + " order by look.order");
            return TaxiModelList;
        }

        /// <summary>
        /// Gets the employees.
        /// </summary>
        /// <param name="unitId">The unit identifier.</param>
        /// <returns></returns>
        public IEnumerable<EmployeeServiceModel> GetEmployees(string unitId)
        {
            var employees = new Service.SAPPeriIMService().GetEmpDataByUnit(Convert.ToInt32(ApplicationContext.Current.UserInfo.SecurityCompanyID),
                ApplicationContext.Current.UserInfo.AppCode, ApplicationContext.Current.UserInfo.AppAuthKey, unitId, 1, 4000, null, null).Employees;
            return employees;
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="EffectiveDate"></param>
        /// <param name="UnitID"></param>
        /// <returns></returns>
        public IEnumerable<FuelTypeRatesModel> getFuelRates(DateTime EffectiveDate, string UnitID)
        {
            var EffectiveDateString = EffectiveDate.ToString("yyyy-MM-dd 00:00:00");
            string fuelrateQuery = @"SELECT look.lookupid LookupID, look.type LookupType,IFNULL(rate,0) Rate,
                                     DATE_FORMAT(EffectiveDate,'%d/%m/%Y') EffectiveDateString
                                     FROM peri_vms_lookup look
                                     INNER JOIN peri_vms_lookupcategory cat ON cat.lookupcategoryid = look.lookupcategoryid  
                                     LEFT JOIN peri_vms_fueltyperates_m fuel ON fuel.LookupID = look.lookupid AND UnitID=@UnitID AND CompanyID=@CompanyID
                                     AND fuel.EffectiveDate =@EffectiveDate
                                     WHERE cat.LookupCategoryID IN (@FuelType , @GasType, @Oil)
                                     GROUP BY look.type ORDER BY look.order ASC";
            var fueltyperates = _repository.Query<FuelTypeRatesModel>
                (fuelrateQuery,
            new
            {
                UnitID = UnitID,
                FuelType = SAPPERI.Model.ConstantModel.lookupCategory.FuelType,
                GasType = SAPPERI.Model.ConstantModel.lookupCategory.GasType,
                Oil = SAPPERI.Model.ConstantModel.lookupCategory.Oil,
                EffectiveDate = EffectiveDateString,
                CompanyID = ApplicationContext.Current.UserInfo.CompanyID
            });
            return fueltyperates;
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="UnitID"></param>
        /// <returns></returns>

        public IEnumerable<LotusMailModel> getMailDetails(string UnitID)
        {
            return _repository.Query<LotusMailModel>(@"SELECT EmployeeID,EmployeeCode,EmployeeName,MobileNumber,LotusMail,
            CCMail1,CCMail2,CCMail3,BCCMail1,UnitCode,UnitID,UnitName from peri_vms_lotusmail 
                                                    where CompanyID=@CompanyID and UnitID=@UnitID and IsActive=1",
                     new
                     {
                         CompanyID = ApplicationContext.Current.UserInfo.CompanyID,
                         UnitID = UnitID
                     });
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="UnitID"></param>
        /// <returns></returns>

        public IEnumerable<LotusMailModel> getFrontOfficeDetails(string UnitID)
        {
            return _repository.Query<LotusMailModel>(@"SELECT UnitID,UnitCode,UnitName,FrontOfficeLotusID,ExecutiveLotusID1,
            ExecutiveLotusID2 from peri_vms_lotusmail_unit where CompanyID=@CompanyID and UnitID=@UnitID and IsActive=1",
                     new
                     {
                         CompanyID = ApplicationContext.Current.UserInfo.CompanyID,
                         UnitID = UnitID
                     });
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="EffectiveDate"></param>
        /// <param name="UnitID"></param>
        /// <returns></returns>

        public IEnumerable<CategoryOvertimeModel> getOvertimeRates(DateTime EffectiveDate, string UnitID)
        {
            var EffectiveDateString = EffectiveDate.ToString("yyyy-MM-dd 00:00:00");
            string overtimeratesQuery = @"SELECT look.lookupid DriverCategoryLookupID, look.type Type, IFNULL(OvertimeRate, 0) AS OvertimeRate,
                                          DATE_FORMAT(EffectiveDate, '%d/%m/%Y') AS EffectiveDateString 
                                          FROM   peri_vms_lookup look
                                          INNER JOIN peri_vms_lookupcategory cat ON cat.lookupcategoryid = look.lookupcategoryid
                                          LEFT  JOIN peri_vms_categoryovertimerate_m ovr ON ovr.DriverCategoryLookupID = look.lookupid AND  
                                          ovr.UnitID = @UnitID AND ovr.CompanyID = @CompanyID AND 
                                          EffectiveDate =@EffectiveDate
                                          WHERE cat.LookupCategoryID = @LookupCategoryID order by look.order asc";
            var overtimerates = _repository.Query<CategoryOvertimeModel>(
                overtimeratesQuery,
           new
           {
               UnitID = UnitID,
               LookupCategoryID = SAPPERI.Model.ConstantModel.lookupCategory.DriverCategory,
               EffectiveDate = EffectiveDateString,
               CompanyID = ApplicationContext.Current.UserInfo.CompanyID
           });
            return overtimerates;
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="EffectiveDate"></param>
        /// <param name="UnitID"></param>
        /// <returns></returns>

        public IEnumerable<DutyModerateModel> getDayoffRates(DateTime EffectiveDate, string UnitID)
        {
            var EffectiveDateString = EffectiveDate.ToString("yyyy-MM-dd 00:00:00");
            string dayOffRatesQuery = @"SELECT a.lookupid DriverCategoryLookupID,b.lookupid DayOffTypeLookupID,a.type DriverType,
                           b.type Type,IFNULL(dutyoff.OffDayRate,0) OffDayRate,  DATE_FORMAT(dutyoff.EffectiveDate,'%d/%m/%Y') EffectiveDateString
                           FROM peri_vms_lookup a
                           INNER JOIN peri_vms_lookup b
                           LEFT JOIN peri_vms_dutymoderate_m AS dutyoff ON dutyoff.DayOffTypeLookupID = b.LookupID AND 
                                     dutyoff.DriverCategoryLookupID=a.lookupid  AND  UnitID=@UnitID AND CompanyID=@CompanyID 
                                     AND dutyoff.EffectiveDate =@EffectiveDate
                           WHERE  a.lookupcategoryID = @lookupcategoryID AND b.lookupcategoryID = @DayOffType
                           ORDER BY a.order ASC , b.order ASC";
            var dayoffrates = _repository.Query<DutyModerateModel>(
              dayOffRatesQuery,
          new
          {
              UnitID = UnitID,
              lookupcategoryID = SAPPERI.Model.ConstantModel.lookupCategory.DriverCategory,
              DayOffType = SAPPERI.Model.ConstantModel.lookupCategory.DayOffType,
              EffectiveDate = EffectiveDateString,
              CompanyID = ApplicationContext.Current.UserInfo.CompanyID
          });
            return dayoffrates;

        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="EffectiveDate"></param>
        /// <param name="UnitID"></param>
        /// <returns></returns>

        public IEnumerable<AllowanceRateModel> getAllowanceRates(DateTime EffectiveDate, string UnitID)
        {
            var EffectiveDateString = EffectiveDate.ToString("yyyy-MM-dd 00:00:00");
            string allowanceQuery = @"SELECT a.lookupid DriverCategoryLookupID,b.lookupid AllowanceTypeLookupID,a.type DriverType,b.type Type,
                                             IFNULL(AllowanceRate, 0) AllowanceRate,DATE_FORMAT(EffectiveDate, '%d/%m/%Y') EffectiveDateString
                                      FROM peri_vms_lookup a
                                      CROSS JOIN peri_vms_lookup b
                                      LEFT JOIN peri_vms_allowancerate_m AS allowance ON allowance.AllowanceTypeLookupID = b.LookupID AND 
                                                allowance.DriverCategoryLookupID=a.lookupid  AND   UnitID =@UnitID AND CompanyID =@CompanyID
                                                AND allowance.EffectiveDate =@EffectiveDate
                                      WHERE a.lookupcategoryID = @DriverCategory AND b.lookupcategoryID = @AllowanceType
                                      ORDER BY a.order ASC , b.order ASC";

            var allowancerates = _repository.Query<AllowanceRateModel>(allowanceQuery,
         new
         {
             UnitID = UnitID,
             DriverCategory = SAPPERI.Model.ConstantModel.lookupCategory.DriverCategory,
             AllowanceType = SAPPERI.Model.ConstantModel.lookupCategory.AllowanceType,
             EffectiveDate = EffectiveDateString,
             CompanyID = ApplicationContext.Current.UserInfo.CompanyID
         });
            return allowancerates;
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="EffectiveDate"></param>
        /// <param name="UnitID"></param>
        /// <returns></returns>

        public IEnumerable<TaxiRateModel> getTaxiRates(DateTime EffectiveDate, string UnitID)
        {
            var EffectiveDateString = EffectiveDate.ToString("yyyy-MM-dd 00:00:00");

            var taxirateslist = _repository.Query<TaxiRateModel>(
             @"SELECT ra.ModelID,mo.ModelName,ra.LookupID,ra.LookupType,ra.ACKiloMeterRate,
               ra.NonACKiloMeterRate,ra.ACHoulryRate,ra.NonACHourlyRate,DATE_FORMAT(EffectiveDate,'%d/%m/%Y') EffectiveDateString
               FROM peri_vms_modelrate ra 
               INNER JOIN peri_vms_model mo ON ra.ModelID=mo.ModelID                  
               WHERE ra.UnitID =@UnitID AND ra.CompanyID =@CompanyID
               AND EffectiveDate =@EffectiveDate",
        new
        {
            UnitID = UnitID,
            CompanyID = ApplicationContext.Current.UserInfo.CompanyID,
            EffectiveDate = EffectiveDateString
        });
            return taxirateslist;
        }

        /// <summary>
        /// Saves the mail setup details.
        /// </summary>
        /// <param name="LotusDetails">The lotus details.</param>
        /// <returns></returns>
        public int SaveMailSetupDetails(LotusMailModel LotusDetails)
        {
            _repository.BeginTransaction();

            // ............Lotus mail .................  

            if (LotusDetails.MailStatus == 1)
            {
                //employee

                var Mailexists = _repository.Query<LotusMailModel>(@"SELECT * from peri_vms_lotusmail
                                                    where CompanyID=@CompanyID and UnitID=@UnitID and IsActive=1",
                     new
                     {
                         CompanyID = ApplicationContext.Current.UserInfo.CompanyID,
                         UnitID = LotusDetails.UnitID
                     });
                if (Mailexists.Count() > 0)
                {
                    _repository.Execute(@"UPDATE peri_vms_lotusmail SET  
                                        EmployeeID=@EmployeeID,
                                        LotusMail=@LotusMail,
                                        ModifiedBy=@ModifiedBy,
                                        ModifiedTime=@ModifiedTime, 
                                        BCCMail1=@BCCMail1,
                                        CCMail1=@CCMail1,
                                        CCMail2=@CCMail2,
                                        CCMail3=@CCMail3,
                                        EmployeeCode=@EmployeeCode,
                                        EmployeeName=@EmployeeName,
                                        MobileNumber=@MobileNumber
                                        where CompanyID=@CompanyID and UnitID=@UnitID",
                                            new
                                            {

                                                EmployeeID = LotusDetails.EmployeeID,
                                                LotusMail = LotusDetails.LotusMail,
                                                ModifiedBy = ApplicationContext.Current.UserInfo.UserID,
                                                ModifiedTime = DateTime.UtcNow,
                                                BCCMail1 = LotusDetails.BCCMail1,
                                                CCMail1 = LotusDetails.CCMail1,
                                                CCMail2 = LotusDetails.CCMail2,
                                                CCMail3 = LotusDetails.CCMail3,
                                                EmployeeCode = LotusDetails.EmployeeCode,
                                                EmployeeName = LotusDetails.EmployeeName,
                                                MobileNumber = LotusDetails.MobileNumber,
                                                CompanyID = ApplicationContext.Current.UserInfo.CompanyID,
                                                UnitID = LotusDetails.UnitID,
                                            });
                }
                else
                {
                    _repository.Insert(@"Insert into peri_vms_lotusmail(
                                        CompanyID,
                                        CompanyCode,                                       
                                        UnitCode,
                                        EmployeeID,
                                        LotusMail,
                                        CreatedBy,
                                        CreatedTime,                                       
                                        UnitID,
                                        UnitName,
                                        CompanyName,
                                        BCCMail1,
                                        CCMail1,
                                        CCMail2,
                                        CCMail3,
                                        EmployeeCode,
                                        EmployeeName,
                                        MobileNumber
                                        )
                                        values
                                        (@CompanyID,
                                        @CompanyCode,                                       
                                        @UnitCode,
                                        @EmployeeID,
                                        @LotusMail,
                                        @CreatedBy,
                                        @CreatedTime,                                       
                                        @UnitID,
                                        @UnitName,
                                        @CompanyName,
                                        @BCCMail1,
                                        @CCMail1,
                                        @CCMail2,
                                        @CCMail3,
                                        @EmployeeCode,
                                        @EmployeeName,
                                        @MobileNumber)",
                                            new
                                            {
                                                CompanyID = ApplicationContext.Current.UserInfo.CompanyID,
                                                CompanyCode = ApplicationContext.Current.UserInfo.CompanyCode,
                                                UnitCode = LotusDetails.UnitCode,
                                                EmployeeID = LotusDetails.EmployeeID,
                                                LotusMail = LotusDetails.LotusMail,
                                                CreatedBy = ApplicationContext.Current.UserInfo.UserID,
                                                CreatedTime = DateTime.UtcNow,
                                                UnitID = LotusDetails.UnitID,
                                                UnitName = LotusDetails.UnitName,
                                                CompanyName = ApplicationContext.Current.UserInfo.CompanyName,
                                                BCCMail1 = LotusDetails.BCCMail1,
                                                CCMail1 = LotusDetails.CCMail1,
                                                CCMail2 = LotusDetails.CCMail2,
                                                CCMail3 = LotusDetails.CCMail3,
                                                EmployeeCode = LotusDetails.EmployeeCode,
                                                EmployeeName = LotusDetails.EmployeeName,
                                                MobileNumber = LotusDetails.MobileNumber
                                            });

                }
            }

            else
            {

                //front office          

                var MailUnitexists = _repository.Query<LotusMailModel>(@"SELECT * from peri_vms_lotusmail_unit
                                                    where CompanyID=@CompanyID and UnitID=@UnitID and IsActive=1",
                    new
                    {
                        CompanyID = ApplicationContext.Current.UserInfo.CompanyID,
                        UnitID = LotusDetails.UnitID
                    });

                if (MailUnitexists.Count() > 0)
                {
                    _repository.Execute(@"UPDATE peri_vms_lotusmail_unit SET 
                                        CompanyCode=@CompanyCode,
                                        UnitCode=@UnitCode,
                                        FrontOfficeLotusID=@FrontOfficeLotusID,
                                        ExecutiveLotusID1=@ExecutiveLotusID1,
                                        ExecutiveLotusID2=@ExecutiveLotusID2,
                                        ModifiedBy=@ModifiedBy,
                                        ModifiedTime=@ModifiedTime,
                                        CompanyID=@CompanyID,                                        
                                        UnitName=@UnitName,
                                        CompanyName=@CompanyName
                                        where CompanyID=@CompanyID and UnitID=@UnitID",
                                            new
                                            {
                                                CompanyCode = ApplicationContext.Current.UserInfo.CompanyCode,
                                                UnitCode = LotusDetails.UnitCode,
                                                FrontOfficeLotusID = LotusDetails.FrontOfficeLotusID,
                                                ExecutiveLotusID1 = LotusDetails.ExecutiveLotusID1,
                                                ExecutiveLotusID2 = LotusDetails.ExecutiveLotusID2,
                                                ModifiedBy = ApplicationContext.Current.UserInfo.UserID,
                                                ModifiedTime = DateTime.UtcNow,
                                                CompanyID = ApplicationContext.Current.UserInfo.CompanyID,
                                                UnitID = LotusDetails.UnitID,
                                                UnitName = LotusDetails.UnitName,
                                                CompanyName = ApplicationContext.Current.UserInfo.CompanyName,
                                            });
                }
                else
                {
                    _repository.Insert(@"Insert into peri_vms_lotusmail_unit(
                                        CompanyID,
                                        CompanyCode,                                      
                                        UnitCode,
                                        FrontOfficeLotusID,
                                        ExecutiveLotusID1,
                                        ExecutiveLotusID2,
                                        CreatedBy,
                                        CreatedTime,                                      
                                        UnitID,
                                        UnitName,
                                        CompanyName)
                                        values
                                        (@CompanyID,
                                        @CompanyCode,                                       
                                        @UnitCode,
                                        @FrontOfficeLotusID,
                                        @ExecutiveLotusID1,
                                        @ExecutiveLotusID2,
                                        @CreatedBy,
                                        @CreatedTime,                                       
                                        @UnitID,
                                        @UnitName,
                                        @CompanyName)",
                                            new
                                            {
                                                CompanyID = ApplicationContext.Current.UserInfo.CompanyID,
                                                CompanyCode = ApplicationContext.Current.UserInfo.CompanyCode,
                                                UnitCode = LotusDetails.UnitCode,
                                                FrontOfficeLotusID = LotusDetails.FrontOfficeLotusID,
                                                ExecutiveLotusID1 = LotusDetails.ExecutiveLotusID1,
                                                ExecutiveLotusID2 = LotusDetails.ExecutiveLotusID2,
                                                CreatedBy = ApplicationContext.Current.UserInfo.UserID,
                                                CreatedTime = DateTime.UtcNow,
                                                UnitID = LotusDetails.UnitID,
                                                UnitName = LotusDetails.UnitName,
                                                CompanyName = ApplicationContext.Current.UserInfo.CompanyName,
                                            });



                }
            }
            _repository.CommitChanges();
            return 1;
        }

        /// <summary>
        /// Saves the details.
        /// </summary>
        /// <param name="LotusDetails">The lotus details.</param>
        /// <returns></returns>
        public int SaveDetails(GeneralSetupModel generalsetup, List<FuelTypeRatesModel> FuelRates,
        List<CategoryOvertimeModel> OverTimeRates, List<DutyModerateModel> DayOffRates,
        List<AllowanceRateModel> AllowanceRates, List<TaxiRateModel> TaxiRates)
        {
            _repository.BeginTransaction();

            // ............General set up .................  
            generalsetup.SetupID = SaveToGeneralSetUpTable(generalsetup);

            // ............Fuel rates .................

            if (generalsetup.EffectiveDateFuel.ToString() != "01-01-0001 00:00:00")
            {
                SaveFuelRates(FuelRates, generalsetup.UnitID, generalsetup.EffectiveDateFuel, generalsetup.UnitCode, generalsetup.SetupID);
            }

            // ............Overtime rates .................

            if (generalsetup.EffectiveDateOvertime.ToString() != "01-01-0001 00:00:00")
            {
                SaveOverTimeRates(OverTimeRates, generalsetup.UnitID, generalsetup.EffectiveDateOvertime, generalsetup.UnitCode, generalsetup.SetupID);
            }

            // ............Dayoff rates .................

            if (generalsetup.EffectiveDateDayOff.ToString() != "01-01-0001 00:00:00")
            {
                SaveDayOffRates(DayOffRates, generalsetup.UnitID, generalsetup.EffectiveDateDayOff, "", generalsetup.SetupID);
            }

            // ............Allowancerates .................

            if (generalsetup.EffectiveDateAllowance.ToString() != "01-01-0001 00:00:00")
            {
                SaveAllowanceRates(AllowanceRates, generalsetup.UnitID, generalsetup.EffectiveDateAllowance, "", generalsetup.SetupID);
            }

            // ............Taxi rates .................

            if (generalsetup.EffectiveDateTaxi.ToString() != "01-01-0001 00:00:00")
            {
                SaveTaxiRates(TaxiRates, generalsetup.UnitID, generalsetup.EffectiveDateTaxi, "", generalsetup.SetupID);
            }

            _repository.CommitChanges();
            return 1;

        }

        public int SaveDetailsOtherUnits(GeneralSetupModel generalsetup, List<FuelTypeRatesModel> FuelRates,
          List<CategoryOvertimeModel> OverTimeRates, List<DutyModerateModel> DayOffRates,
          List<AllowanceRateModel> AllowanceRates, List<TaxiRateModel> TaxiRates, string[] Units, int chkfuel, int chkovertime, int chkdayoff,
           int chkallowance, int chktaxi, int chkothers)
        {
            _repository.BeginTransaction();

            for (int i = 0; i < Units.Length; i++)
            {
                //check whether setup is already saved for the unit
                int setUpID = IsSetUpExistsForUnit(Convert.ToInt32(Units[i]));
                generalsetup.SetupID = setUpID;
                generalsetup.UnitID = Convert.ToInt32(Units[i]);

                setUpID = SaveToGeneralSetUpTable(generalsetup); // if new set up , created id is returning

                // ............Fuel rates .................

                if (generalsetup.EffectiveDateFuel.ToString() != "01-01-0001 00:00:00" && chkfuel == 1)
                {
                    SaveFuelRates(FuelRates, Convert.ToInt32(Units[i]), generalsetup.EffectiveDateFuel, "", setUpID);
                }

                // ............Overtime rates .................

                if (generalsetup.EffectiveDateOvertime.ToString() != "01-01-0001 00:00:00" && chkovertime == 1)
                {
                    SaveOverTimeRates(OverTimeRates, Convert.ToInt32(Units[i]), generalsetup.EffectiveDateOvertime, "", setUpID);
                }

                // ............Dayoff rates .................

                if (generalsetup.EffectiveDateDayOff.ToString() != "01-01-0001 00:00:00" && chkdayoff == 1)
                {
                    SaveDayOffRates(DayOffRates, Convert.ToInt32(Units[i]), generalsetup.EffectiveDateDayOff, "", setUpID);
                }

                // ............Allowancerates .................

                if (generalsetup.EffectiveDateAllowance.ToString() != "01-01-0001 00:00:00" && chkallowance == 1)
                {
                    SaveAllowanceRates(AllowanceRates, Convert.ToInt32(Units[i]), generalsetup.EffectiveDateAllowance, "", setUpID);

                }

                // ............Taxi rates .................

                if (generalsetup.EffectiveDateTaxi.ToString() != "01-01-0001 00:00:00" && chktaxi == 1)
                {
                    SaveTaxiRates(TaxiRates, Convert.ToInt32(Units[i]), generalsetup.EffectiveDateTaxi, "", setUpID);
                }
            }

            _repository.CommitChanges();
            return 1;

        }

        /// <summary>
        /// save to general setup table
        /// </summary>
        private int SaveToGeneralSetUpTable(GeneralSetupModel generalsetup)
        {
            int setUpID = generalsetup.SetupID;
            generalsetup.CompanyName = ApplicationContext.Current.UserInfo.CompanyName;
            generalsetup.CompanyID = ApplicationContext.Current.UserInfo.CompanyID;

            if (generalsetup.SetupID > 0)
            {
                generalsetup.ModifiedBy = ApplicationContext.Current.UserInfo.UserID;
                generalsetup.ModifiedTime = DateTime.UtcNow.AddHours(Convert.ToDouble(ConfigurationManager.AppSettings["TimeDiff"]));

                string updateQuery = @"UPDATE peri_vms_setup SET  
                                    TaxVendorID=@TaxVendorID,
                                    TaxVendor=@TaxVendor,
                                    PollutionVendorID=@PollutionVendorID,
                                    PollutionVendor=@PollutionVendor,
                                    TestingVendorID=@TestingVendorID,
                                    TestingVendor=@TestingVendor,
                                    AutoVendorID=@AutoVendorID,
                                    AutoVendor=@AutoVendor,
                                    TaxiVendorID=@TaxiVendorID,
                                    TaxiVendor=@TaxiVendor,
                                    InsuranceDebitAccountID=@InsuranceDebitAccountID,
                                    InsuranceDebitAccount=@InsuranceDebitAccount,
                                    TaxDebitAccountID=@TaxDebitAccountID,
                                    TaxDebitAccount=@TaxDebitAccount,
                                    PollutionDebitAccountID=@PollutionDebitAccountID,
                                    PollutionDebitAccount=@PollutionDebitAccount,
                                    TestingDebitAccountID=@TestingDebitAccountID,
                                    TestingDebitAccount=@TestingDebitAccount,
                                    ServiceDebitAccountID=@ServiceDebitAccountID,
                                    ServiceDebitAccount=@ServiceDebitAccount,
                                    TyrePurchaseDebitAccountID=@TyrePurchaseDebitAccountID,
                                    TyrePurchaseDebitAccount=@TyrePurchaseDebitAccount,
                                    ReregisterDebitAccountID=@ReregisterDebitAccountID,
                                    ReregisterDebitAccount=@ReregisterDebitAccount,
                                    BatteryDebitAccountID=@BatteryDebitAccountID,
                                    BatteryDebitAccount=@BatteryDebitAccount,
                                    FuelDebitAccountID=@FuelDebitAccountID,
                                    FuelDebitAccount=@FuelDebitAccount,
                                    TaxiDebitAccountID=@TaxiDebitAccountID,
                                    TaxiDebitAccount=@TaxiDebitAccount,
                                    AutoDebitAccountID=@AutoDebitAccountID,
                                    AutoDebitAccount=@AutoDebitAccount,
                                    AdvanceDebitAccountID=@AdvanceDebitAccountID,
                                    AdvanceDebitAccount=@AdvanceDebitAccount,
                                    MaintenanceDebitAccountID=@MaintenanceDebitAccountID,
                                    MaintenanceDebitAccount=@MaintenanceDebitAccount,
                                    InsuranceGSTRate=@InsuranceGSTRate,
                                    InsuranceCGSTRate=@InsuranceCGSTRate,
                                    InsuranceSGSTRate=@InsuranceSGSTRate,
                                    InsuranceIGSTRate=@InsuranceIGSTRate,
                                    InsuranceCESSRate=@InsuranceCESSRate,
                                    TyreGSTRate=@TyreGSTRate,
                                    TyreCGSTRate=@TyreCGSTRate,
                                    TyreSGSTRate=@TyreSGSTRate,
                                    TyreIGSTRate=@TyreIGSTRate,
                                    TyreCESSRate=@TyreCESSRate,
                                    BatteryGSTRate=@BatteryGSTRate,
                                    BatteryCGSTRate=@BatteryCGSTRate,
                                    BatterySGSTRate=@BatterySGSTRate,
                                    BatteryIGSTRate=@BatteryIGSTRate,
                                    BatteryCESSRate=@BatteryCESSRate,
                                    TaxGSTRate=@TaxGSTRate,
                                    TaxCGSTRate=@TaxCGSTRate,
                                    TaxSGSTRate=@TaxSGSTRate,
                                    TaxIGSTRate=@TaxIGSTRate,
                                    TaxCESSRate=@TaxCESSRate,
                                    PollutionGSTRate=@PollutionGSTRate,
                                    PollutionCGSTRate=@PollutionCGSTRate,
                                    PollutionSGSTRate=@PollutionSGSTRate,
                                    PollutionIGSTRate=@PollutionIGSTRate,
                                    PollutionCESSRate=@PollutionCESSRate,
                                    PermitGSTRate=@PermitGSTRate,
                                    PermitCGSTRate=@PermitCGSTRate,
                                    PermitSGSTRate=@PermitSGSTRate,
                                    PermitIGSTRate=@PermitIGSTRate,
                                    PermitCESSRate=@PermitCESSRate,
                                    TestingGSTRate=@TestingGSTRate,
                                    TestingCGSTRate=@TestingCGSTRate,
                                    TestingSGSTRate=@TestingSGSTRate,
                                    TestingIGSTRate=@TestingIGSTRate,
                                    TestingCESSRate=@TestingCESSRate,
                                    ServiceGSTRate=@ServiceGSTRate,
                                    ServiceCGSTRate=@ServiceCGSTRate,
                                    ServiceSGSTRate=@ServiceSGSTRate,
                                    ServiceIGSTRate=@ServiceIGSTRate,
                                    ServiceCESSRate=@ServiceCESSRate,
                                    FuelOilGSTRate=@FuelOilGSTRate,
                                    FuelOilCGSTRate=@FuelOilCGSTRate,
                                    FuelOilSGSTRate=@FuelOilSGSTRate,
                                    FuelOilIGSTRate=@FuelOilIGSTRate,
                                    FuelOilCESSRate=@FuelOilCESSRate,
                                    TaxiCGSTRate=@TaxiCGSTRate,
                                    TaxiSGSTRate=@TaxiSGSTRate,
                                    TaxiIGSTRate=@TaxiIGSTRate,
                                    TaxiCESSRate=@TaxiCESSRate,
                                    AutoGSTRate=@AutoGSTRate,
                                    AutoCGSTRate=@AutoCGSTRate,
                                    AutoSGSTRate=@AutoSGSTRate,
                                    AutoIGSTRate=@AutoIGSTRate,
                                    AutoCESSRate=@AutoCESSRate,
                                    AccidentGSTRate=@AccidentGSTRate,
                                    AccidentCGSTRate=@AccidentCGSTRate,
                                    AccidentSGSTRate=@AccidentSGSTRate,
                                    AccidentIGSTRate=@AccidentIGSTRate,
                                    AccidentCESSRate=@AccidentCESSRate,
                                    MaintenanceGSTRate=@MaintenanceGSTRate,
                                    MaintenanceCGSTRate=@MaintenanceCGSTRate,
                                    MaintenanceSGSTRate=@MaintenanceSGSTRate,
                                    MaintenanceIGSTRate=@MaintenanceIGSTRate,
                                    MaintenanceCESSRate=@MaintenanceCESSRate,
                                    UnitCode=@UnitCode,
                                    CompanyCode=@CompanyCode,
                                    BaseCurrency=@BaseCurrency,
                                    ModifiedBy=@ModifiedBy,
                                    ModifiedTime=@ModifiedTime,
                                    UnitID=@UnitID,
                                    CompanyID=@CompanyID,
                                    FuelRateDailyUpdate=@FuelRateDailyUpdate,
                                    UnitName=@UnitName,
                                    CompanyName=@CompanyName where SetupID=@SetupID";
                //Updation
                _repository.Execute(updateQuery,
                                    generalsetup);

            }
            else
            {
                generalsetup.CreatedBy = ApplicationContext.Current.UserInfo.UserID;
                generalsetup.CreatedTime = DateTime.UtcNow.AddHours(Convert.ToDouble(ConfigurationManager.AppSettings["TimeDiff"]));
                //Insertion
                setUpID = _repository.Insert(@"Insert into peri_vms_setup(TaxVendorID,TaxVendor,PollutionVendorID,PollutionVendor,
                                    TestingVendorID,TestingVendor,AutoVendorID,AutoVendor,TaxiVendorID,TaxiVendor,InsuranceDebitAccountID,
                                    InsuranceDebitAccount,TaxDebitAccountID,TaxDebitAccount,PollutionDebitAccountID,PollutionDebitAccount,
                                    TestingDebitAccountID,TestingDebitAccount,ServiceDebitAccountID,ServiceDebitAccount,TyrePurchaseDebitAccountID,
                                    TyrePurchaseDebitAccount,ReregisterDebitAccountID,ReregisterDebitAccount,BatteryDebitAccountID,BatteryDebitAccount,
                                    FuelDebitAccountID,FuelDebitAccount,TaxiDebitAccountID,TaxiDebitAccount,AutoDebitAccountID,AutoDebitAccount,
                                    AdvanceDebitAccountID,AdvanceDebitAccount,MaintenanceDebitAccountID,MaintenanceDebitAccount,InsuranceGSTRate,
                                    InsuranceCGSTRate,InsuranceSGSTRate,InsuranceIGSTRate,InsuranceCESSRate,TyreGSTRate,TyreCGSTRate,
                                    TyreSGSTRate,TyreIGSTRate,TyreCESSRate,BatteryGSTRate,BatteryCGSTRate,BatterySGSTRate,BatteryIGSTRate,
                                    BatteryCESSRate,TaxGSTRate,TaxCGSTRate,TaxSGSTRate,TaxIGSTRate,TaxCESSRate,PollutionGSTRate,PollutionCGSTRate,
                                    PollutionSGSTRate,PollutionIGSTRate,PollutionCESSRate,PermitGSTRate,PermitCGSTRate,PermitSGSTRate,
                                    PermitIGSTRate,PermitCESSRate,TestingGSTRate,TestingCGSTRate,TestingSGSTRate,TestingIGSTRate,
                                    TestingCESSRate,
                                    ServiceGSTRate,
                                    ServiceCGSTRate,
                                    ServiceSGSTRate,
                                    ServiceIGSTRate,
                                    ServiceCESSRate,
                                    FuelOilGSTRate,
                                    FuelOilCGSTRate,
                                    FuelOilSGSTRate,
                                    FuelOilIGSTRate,
                                    FuelOilCESSRate,
                                    TaxiCGSTRate,
                                    TaxiSGSTRate,
                                    TaxiIGSTRate,
                                    TaxiCESSRate,
                                    AutoGSTRate,
                                    AutoCGSTRate,
                                    AutoSGSTRate,
                                    AutoIGSTRate,
                                    AutoCESSRate,
                                    AccidentGSTRate,
                                    AccidentCGSTRate,
                                    AccidentSGSTRate,
                                    AccidentIGSTRate,
                                    AccidentCESSRate,
                                    MaintenanceGSTRate,
                                    MaintenanceCGSTRate,
                                    MaintenanceSGSTRate,
                                    MaintenanceIGSTRate,
                                    MaintenanceCESSRate,
                                    UnitCode,
                                    CompanyCode,
                                    BaseCurrency,
                                    ModifiedBy,
                                    ModifiedTime,
                                    UnitID,
                                    CompanyID,
                                    FuelRateDailyUpdate,
                                    UnitName,
                                    CompanyName)
                                    values(
                                    @TaxVendorID,
                                    @TaxVendor,
                                    @PollutionVendorID,
                                    @PollutionVendor,
                                    @TestingVendorID,
                                    @TestingVendor,
                                    @AutoVendorID,
                                    @AutoVendor,
                                    @TaxiVendorID,
                                    @TaxiVendor,
                                    @InsuranceDebitAccountID,
                                    @InsuranceDebitAccount,
                                    @TaxDebitAccountID,
                                    @TaxDebitAccount,
                                    @PollutionDebitAccountID,
                                    @PollutionDebitAccount,
                                    @TestingDebitAccountID,
                                    @TestingDebitAccount,
                                    @ServiceDebitAccountID,
                                    @ServiceDebitAccount,
                                    @TyrePurchaseDebitAccountID,
                                    @TyrePurchaseDebitAccount,
                                    @ReregisterDebitAccountID,
                                    @ReregisterDebitAccount,
                                    @BatteryDebitAccountID,
                                    @BatteryDebitAccount,
                                    @FuelDebitAccountID,
                                    @FuelDebitAccount,
                                    @TaxiDebitAccountID,
                                    @TaxiDebitAccount,
                                    @AutoDebitAccountID,
                                    @AutoDebitAccount,
                                    @AdvanceDebitAccountID,
                                    @AdvanceDebitAccount,
                                    @MaintenanceDebitAccountID,
                                    @MaintenanceDebitAccount,
                                    @InsuranceGSTRate,
                                    @InsuranceCGSTRate,
                                    @InsuranceSGSTRate,
                                    @InsuranceIGSTRate,
                                    @InsuranceCESSRate,
                                    @TyreGSTRate,
                                    @TyreCGSTRate,
                                    @TyreSGSTRate,
                                    @TyreIGSTRate,
                                    @TyreCESSRate,
                                    @BatteryGSTRate,
                                    @BatteryCGSTRate,
                                    @BatterySGSTRate,
                                    @BatteryIGSTRate,
                                    @BatteryCESSRate,
                                    @TaxGSTRate,
                                    @TaxCGSTRate,
                                    @TaxSGSTRate,
                                    @TaxIGSTRate,
                                    @TaxCESSRate,
                                    @PollutionGSTRate,
                                    @PollutionCGSTRate,
                                    @PollutionSGSTRate,
                                    @PollutionIGSTRate,
                                    @PollutionCESSRate,
                                    @PermitGSTRate,
                                    @PermitCGSTRate,
                                    @PermitSGSTRate,
                                    @PermitIGSTRate,
                                    @PermitCESSRate,
                                    @TestingGSTRate,
                                    @TestingCGSTRate,
                                    @TestingSGSTRate,
                                    @TestingIGSTRate,
                                    @TestingCESSRate,
                                    @ServiceGSTRate,
                                    @ServiceCGSTRate,
                                    @ServiceSGSTRate,
                                    @ServiceIGSTRate,
                                    @ServiceCESSRate,
                                    @FuelOilGSTRate,
                                    @FuelOilCGSTRate,
                                    @FuelOilSGSTRate,
                                    @FuelOilIGSTRate,
                                    @FuelOilCESSRate,
                                    @TaxiCGSTRate,
                                    @TaxiSGSTRate,
                                    @TaxiIGSTRate,
                                    @TaxiCESSRate,
                                    @AutoGSTRate,
                                    @AutoCGSTRate,
                                    @AutoSGSTRate,
                                    @AutoIGSTRate,
                                    @AutoCESSRate,
                                    @AccidentGSTRate,
                                    @AccidentCGSTRate,
                                    @AccidentSGSTRate,
                                    @AccidentIGSTRate,
                                    @AccidentCESSRate,
                                    @MaintenanceGSTRate,
                                    @MaintenanceCGSTRate,
                                    @MaintenanceSGSTRate,
                                    @MaintenanceIGSTRate,
                                    @MaintenanceCESSRate,
                                    @UnitCode,
                                    @CompanyCode,
                                    @BaseCurrency,
                                    @CreatedBy,
                                    @CreatedTime,
                                    @UnitID,
                                    @CompanyID,
                                    @FuelRateDailyUpdate,
                                    @UnitName,
                                    @CompanyName
                                   )", generalsetup);
            }

            return setUpID;
        }

        /// <summary>
        /// Save fuel rates
        /// </summary>
        /// <param name="generalsetup"></param>
        /// <param name="FuelRates"></param>
        private void SaveFuelRates(List<FuelTypeRatesModel> fuelRates, int unitID, DateTime effectiveDateFuel, string unitCode, int setupID)
        {
            foreach (FuelTypeRatesModel fuel in fuelRates)
            {

                var FuelTypeRateID = _repository.Query<int>(@"SELECT FuelTypeRateID from peri_vms_fueltyperates_m
                                                    where CompanyID=@CompanyID and UnitID=@UnitID and IsActive=1
                                                    and DATE(EffectiveDate)=DATE(@EffectiveDate) and LookupID=@LookupID",
                        new
                        {
                            CompanyID = ApplicationContext.Current.UserInfo.CompanyID,
                            UnitID = unitID,
                            EffectiveDate = effectiveDateFuel,
                            LookupID = fuel.LookupID
                        }).FirstOrDefault();

                if (FuelTypeRateID > 0)
                {
                    //Updation
                    _repository.Execute(@"UPDATE peri_vms_fueltyperates_m SET 
                                        Rate=@Rate, 
                                        ModifiedBy=@ModifiedBy,
                                        ModifiedTime=@ModifiedTime                                      
                                         where FuelTypeRateID=@FuelTypeRateID",
                                        new
                                        {
                                            Rate = fuel.Rate,
                                            ModifiedBy = ApplicationContext.Current.UserInfo.UserID,
                                            ModifiedTime = DateTime.UtcNow,
                                            FuelTypeRateID = FuelTypeRateID
                                        });
                }
                else
                {
                    //insertion
                    _repository.Insert(@"Insert into peri_vms_fueltyperates_m(
                                        LookupID,
                                        Rate,
                                        EffectiveDate,
                                        LookupType,
                                        CreatedBy,
                                        CreatedTime,
                                        CompanyID,
                                        CompanyCode,
                                        CompanyName,
                                        UnitID,
                                        UnitCode,                                       
                                        SetupID)
                                        values(
                                        @LookupID,
                                        @Rate,
                                        @EffectiveDate,
                                        @LookupType,
                                        @CreatedBy,
                                        @CreatedTime,
                                        @CompanyID,
                                        @CompanyCode,
                                        @CompanyName,
                                        @UnitID,
                                        @UnitCode,                                        
                                        @SetupID)",
                                         new
                                         {
                                             Rate = fuel.Rate,
                                             EffectiveDate = effectiveDateFuel,
                                             LookupType = fuel.LookupType,
                                             CreatedBy = ApplicationContext.Current.UserInfo.UserID,
                                             CreatedTime = DateTime.UtcNow,
                                             CompanyCode = ApplicationContext.Current.UserInfo.CompanyCode,
                                             CompanyName = ApplicationContext.Current.UserInfo.CompanyName,
                                             UnitCode = unitCode,
                                             CompanyID = ApplicationContext.Current.UserInfo.CompanyID,
                                             LookupID = fuel.LookupID,
                                             UnitID = unitID,
                                             SetupID = setupID
                                         });


                }
            }
        }

        /// <summary>
        /// Save over time rates
        /// </summary>
        /// <param name="generalsetup"></param>
        /// <param name="overTimeRates"></param>
        private void SaveOverTimeRates(List<CategoryOvertimeModel> overTimeRates, int unitID, DateTime effectiveDateOvertime, string unitCode, int setupID)
        {
            foreach (CategoryOvertimeModel over in overTimeRates)
            {

                var CategoryOTRateID = _repository.Query<int>(@"SELECT CategoryOTRateID from peri_vms_categoryovertimerate_m
                                                    where CompanyID=@CompanyID and UnitID=@UnitID and IsActive=1
                                                    and DATE(EffectiveDate)=DATE(@EffectiveDate) and DriverCategoryLookupID=@LookupID",
                        new
                        {
                            CompanyID = ApplicationContext.Current.UserInfo.CompanyID,
                            UnitID = unitID,
                            EffectiveDate = effectiveDateOvertime,
                            LookupID = over.DriverCategoryLookupID
                        }).FirstOrDefault();

                if (CategoryOTRateID > 0)
                {
                    //Updation
                    _repository.Execute(@"UPDATE peri_vms_categoryovertimerate_m SET                                             
                                            OvertimeRate=@OvertimeRate, 
                                            ModifiedBy=@ModifiedBy,
                                            ModifiedTime=@ModifiedTime                                           
                                            where CategoryOTRateID=@CategoryOTRateID",
                                        new
                                        {
                                            OvertimeRate = over.OvertimeRate,
                                            ModifiedBy = ApplicationContext.Current.UserInfo.UserID,
                                            ModifiedTime = DateTime.UtcNow,
                                            CategoryOTRateID = CategoryOTRateID

                                        });
                }
                else
                {
                    //insertion
                    _repository.Insert(@"Insert into peri_vms_categoryovertimerate_m(
                                            EffectiveDate,
                                            OvertimeRate,
                                            DriverCategoryLookupID,
                                            Type,
                                            CompanyID,
                                            CompanyCode,
                                            CompanyName,
                                            CreatedBy,
                                            CreatedTime,
                                            UnitID,
                                            UnitCode,                                            
                                            SetupID)
                                            values(
                                            @EffectiveDate,
                                            @OvertimeRate,
                                            @DriverCategoryLookupID,
                                            @Type,
                                            @CompanyID,
                                            @CompanyCode,
                                            @CompanyName,
                                            @CreatedBy,
                                            @CreatedTime,
                                            @UnitID,
                                            @UnitCode,
                                            @SetupID)",
                                        new
                                        {
                                            EffectiveDate = effectiveDateOvertime,
                                            OvertimeRate = over.OvertimeRate,
                                            DriverCategoryLookupID = over.DriverCategoryLookupID,
                                            Type = over.Type,
                                            CompanyID = ApplicationContext.Current.UserInfo.CompanyID,
                                            CompanyCode = ApplicationContext.Current.UserInfo.CompanyCode,
                                            CompanyName = ApplicationContext.Current.UserInfo.CompanyName,
                                            CreatedBy = ApplicationContext.Current.UserInfo.UserID,
                                            CreatedTime = DateTime.UtcNow,
                                            UnitID = unitID,
                                            UnitCode = unitCode,
                                            SetupID = setupID,
                                        });
                }
            }
        }

        private void SaveDayOffRates(List<DutyModerateModel> overTimeRates, int unitID, DateTime effectiveDateDayOff, string unitCode, int setupID)
        {
            foreach (DutyModerateModel duty in overTimeRates)
            {

                var DutyModeRateID = _repository.Query<int>(@"SELECT DutyModeRateID from peri_vms_dutymoderate_m
                                                    where CompanyID=@CompanyID and UnitID=@UnitID and IsActive=1
                                                    and DATE(EffectiveDate)=DATE(@EffectiveDate) 
                                                    and DayOffTypeLookupID=@DayOffTypeLookupID and DriverCategoryLookupID=
                                                    @DriverCategoryLookupID",
                        new
                        {
                            CompanyID = ApplicationContext.Current.UserInfo.CompanyID,
                            UnitID = unitID,
                            EffectiveDate = effectiveDateDayOff,
                            DayOffTypeLookupID = duty.DayOffTypeLookupID,
                            DriverCategoryLookupID = duty.DriverCategoryLookupID,
                        }).FirstOrDefault();

                if (DutyModeRateID > 0)
                {
                    //Updation
                    _repository.Execute(@"UPDATE peri_vms_dutymoderate_m SET  
                                            OffDayRate=@OffDayRate,
                                            ModifiedBy=@ModifiedBy,ModifiedTime=@ModifiedTime where DutyModeRateID=@DutyModeRateID",
                                        new
                                        {
                                            OffDayRate = duty.OffDayRate,
                                            DutyModeRateID = DutyModeRateID,
                                            ModifiedBy = ApplicationContext.Current.UserInfo.UserID,
                                            ModifiedTime = DateTime.UtcNow
                                        });
                }
                else
                {
                    //insertion
                    _repository.Insert(@"Insert into peri_vms_dutymoderate_m(
                                            DayOffTypeLookupID,
                                            Type,
                                            DriverCategoryLookupID,
                                            OffDayRate,
                                            EffectiveDate,
                                            CreatedBy,
                                            CreatedTime,
                                            CompanyID,
                                            CompanyCode,
                                            CompanyName,
                                            UnitID,
                                            UnitCode
                                            )
                                            values(
                                            @DayOffTypeLookupID,
                                            @Type,
                                            @DriverCategoryLookupID,
                                            @OffDayRate,
                                            @EffectiveDate,
                                            @CreatedBy,
                                            @CreatedTime,
                                            @CompanyID,
                                            @CompanyCode,
                                            @CompanyName,
                                            @UnitID,
                                            @UnitCode
                                            )",
                                        new
                                        {
                                            DayOffTypeLookupID = duty.DayOffTypeLookupID,
                                            Type = duty.Type,
                                            DriverCategoryLookupID = duty.DriverCategoryLookupID,
                                            OffDayRate = duty.OffDayRate,
                                            EffectiveDate = effectiveDateDayOff,
                                            CreatedBy = ApplicationContext.Current.UserInfo.UserID,
                                            CreatedTime = DateTime.Now,
                                            CompanyID = ApplicationContext.Current.UserInfo.CompanyID,
                                            CompanyCode = ApplicationContext.Current.UserInfo.CompanyCode,
                                            CompanyName = ApplicationContext.Current.UserInfo.CompanyName,
                                            UnitID = unitID,
                                            UnitCode = unitCode
                                        });

                }
            }
        }

        private void SaveAllowanceRates(List<AllowanceRateModel> allowanceRates, int unitID, DateTime effectiveDateAllowance, string unitCode, int setupID)
        {
            foreach (AllowanceRateModel allowance in allowanceRates)
            {

                var AllowanceRateID = _repository.Query<int>(@"SELECT AllowanceRateID from peri_vms_allowancerate_m
                                                    where CompanyID=@CompanyID and UnitID=@UnitID and IsActive=1
                                                    and DATE(EffectiveDate)=DATE(@EffectiveDate) 
                                                    and DriverCategoryLookupID=@DriverCategoryLookupID 
                                                    and AllowanceTypeLookupID=@AllowanceTypeLookupID",
                        new
                        {
                            CompanyID = ApplicationContext.Current.UserInfo.CompanyID,
                            UnitID = unitID,
                            EffectiveDate = effectiveDateAllowance,
                            DriverCategoryLookupID = allowance.DriverCategoryLookupID,
                            AllowanceTypeLookupID = allowance.AllowanceTypeLookupID,
                        }).FirstOrDefault();

                if (AllowanceRateID > 0)
                {
                    //Updation
                    _repository.Execute(@"UPDATE peri_vms_allowancerate_m SET  
                                             AllowanceRate=@AllowanceRate,
                                             ModifiedBy=@ModifiedBy,ModifiedTime=@ModifiedTime 
                                             where AllowanceRateID=@AllowanceRateID",
                                         new
                                         {
                                             AllowanceRate = allowance.AllowanceRate,
                                             AllowanceRateID = AllowanceRateID,
                                             ModifiedBy = ApplicationContext.Current.UserInfo.UserID,
                                             ModifiedTime = DateTime.UtcNow
                                         });
                }
                else
                {
                    //Insertion
                    _repository.Insert(@"Insert into peri_vms_allowancerate_m(
                                        EffectiveDate,
                                        DriverCategoryLookupID,
                                        AllowanceTypeLookupID,
                                        Type,
                                        AllowanceRate,
                                        UnitID,
                                        UnitCode,                                        
                                        CompanyID,
                                        CompanyCode,
                                        CompanyName,
                                        CreatedBy,
                                        CreatedTime)
                                        values(
                                        @EffectiveDate,
                                        @DriverCategoryLookupID,
                                        @AllowanceTypeLookupID,
                                        @Type,
                                        @AllowanceRate,
                                        @UnitID,
                                        @UnitCode,                                       
                                        @CompanyID,
                                        @CompanyCode,
                                        @CompanyName,
                                        @CreatedBy,
                                        @CreatedTime)",
                                    new
                                    {
                                        EffectiveDate = effectiveDateAllowance,
                                        DriverCategoryLookupID = allowance.DriverCategoryLookupID,
                                        AllowanceTypeLookupID = allowance.AllowanceTypeLookupID,
                                        Type = allowance.Type,
                                        AllowanceRate = allowance.AllowanceRate,
                                        UnitID = unitID,
                                        UnitCode = unitCode,
                                        CompanyID = ApplicationContext.Current.UserInfo.CompanyID,
                                        CompanyCode = ApplicationContext.Current.UserInfo.CompanyCode,
                                        CompanyName = ApplicationContext.Current.UserInfo.CompanyName,
                                        CreatedBy = ApplicationContext.Current.UserInfo.UserID,
                                        CreatedTime = DateTime.UtcNow
                                    });

                }
            }
        }

        private void SaveTaxiRates(List<TaxiRateModel> taxiRates, int unitID, DateTime effectiveDateTaxi, string unitCode, int setupID)
        {
            foreach (TaxiRateModel taxi in taxiRates)
            {

                var ModelRateID = _repository.Query<int>(@"SELECT ModelRateID from peri_vms_modelrate
                                                    where CompanyID=@CompanyID and UnitID=@UnitID and IsActive=1
                                                    and DATE(EffectiveDate)=DATE(@EffectiveDate) 
                                                    and ModelID=@ModelID 
                                                    and LookupID=@LookupID",
                        new
                        {
                            CompanyID = ApplicationContext.Current.UserInfo.CompanyID,
                            UnitID = unitID,
                            EffectiveDate = effectiveDateTaxi,
                            ModelID = taxi.ModelID,
                            LookupID = taxi.LookupID,
                        }).FirstOrDefault();

                if (ModelRateID > 0)
                {
                    //Updation
                    _repository.Execute(@"UPDATE peri_vms_modelrate SET  
                                            ACHoulryRate=@ACHoulryRate,
                                            NonACHourlyRate=@NonACHourlyRate,
                                            ACKiloMeterRate=@ACKiloMeterRate,
                                            NonACKiloMeterRate=@NonACKiloMeterRate,
                                            ModifiedBy=@ModifiedBy,
                                            ModifiedTime=@ModifiedTime where ModelRateID=@ModelRateID",
                                        new
                                        {
                                            ACHoulryRate = taxi.ACHoulryRate,
                                            NonACHourlyRate = taxi.NonACHourlyRate,
                                            ACKiloMeterRate = taxi.ACKiloMeterRate,
                                            NonACKiloMeterRate = taxi.NonACKiloMeterRate,
                                            ModelRateID = ModelRateID,
                                            ModifiedBy = ApplicationContext.Current.UserInfo.UserID,
                                            ModifiedTime = DateTime.UtcNow
                                        });
                }
                else
                {

                    //Insertion
                    _repository.Insert(@"Insert into peri_vms_modelrate(
                                            CompanyName,
                                            CompanyCode,
                                            UnitCode,
                                           
                                            CompanyID,
                                            UnitID,
                                            EffectiveDate,
                                            ModelID,
                                            ModelName,
                                            LookupID,
                                            LookupType,
                                            ACHoulryRate,
                                            NonACHourlyRate,
                                            ACKiloMeterRate,
                                            NonACKiloMeterRate,
                                            CreatedBy,
                                            CreatedTime)
                                            values(
                                            @CompanyName,
                                            @CompanyCode,
                                            @UnitCode,                                           
                                            @CompanyID,
                                            @UnitID,
                                            @EffectiveDate,
                                            @ModelID,
                                            @ModelName,
                                            @LookupID,
                                            @LookupType,
                                            @ACHoulryRate,
                                            @NonACHourlyRate,
                                            @ACKiloMeterRate,
                                            @NonACKiloMeterRate,
                                            @CreatedBy,
                                            @CreatedTime)",
                                            new
                                            {
                                                CompanyName = ApplicationContext.Current.UserInfo.CompanyName,
                                                CompanyCode = ApplicationContext.Current.UserInfo.CompanyCode,
                                                UnitCode = unitCode,
                                                CompanyID = ApplicationContext.Current.UserInfo.CompanyID,
                                                UnitID = unitID,
                                                EffectiveDate = effectiveDateTaxi,
                                                ModelID = taxi.ModelID,
                                                ModelName = taxi.ModelName,
                                                LookupID = taxi.LookupID,
                                                LookupType = taxi.LookupType,
                                                ACHoulryRate = taxi.ACHoulryRate,
                                                NonACHourlyRate = taxi.NonACHourlyRate,
                                                ACKiloMeterRate = taxi.ACKiloMeterRate,
                                                NonACKiloMeterRate = taxi.NonACKiloMeterRate,
                                                CreatedBy = ApplicationContext.Current.UserInfo.UserID,
                                                CreatedTime = DateTime.UtcNow
                                            });
                }
            }
        }

        /// <summary>
        /// check whether set up is already existing for the unit
        /// </summary>
        /// <param name="unitID"></param>
        /// <returns></returns>
        private int IsSetUpExistsForUnit(int unitID)
        {
            var setupId = _repository.Query<int>(@"SELECT SetupID from peri_vms_setup
                                                    where CompanyID=@CompanyID and UnitID=@UnitID and IsActive=1
                                                    ",
                       new
                       {
                           CompanyID = ApplicationContext.Current.UserInfo.CompanyID,
                           UnitID = unitID
                       }).FirstOrDefault();

            return setupId;
        }
    }
}

SAPPERI.Master.GeneralSetup.js
==============================

jQuery(function ($) {
    var grdFuelType = "#grdFuelType";
    var grdPagerFuelType = "#grdPagerFuelType";
    var grdOvertime = "#grdOvertime";
    var grdPagerOvertime = "#grdPagerOvertime";
    var grdAllowance = "#grdAllowance";
    var grdPagerAllowance = "#grdPagerAllowance";
    var grid_Emp = "#grid-Employeetable";
    var pager_Emp = "#grid-employeepager";
    var grid_DayoffRates = "#grdDayoffRates";
    var pager_DayoffRates = "#grdPagerDayoffRates";
    var grid_AllowancesRates = "#grdAllowanceRates";
    var pager_AllowancesRates = "#grdPagerAllowanceRates";
    var grid_TaxiRates = "#grdTaxiRates";
    var pager_TaxiRates = "#grdPagerTaxiRates";
    var status = 0;
    var FuelRates = [];
    var OverTimeRates = [];
    var DayoffRates = [];
    var AllowanceRates = [];
    var TaxiRates = [];

    LoadModels();
    GetGSTRate();
    loadDefaults();

    // .. Click events ....

    $("#btnShowEmpmodal").click(function () {
        var unitid = $("#ddlUnitsEmployee").val();
        $('#ddlUnitsEmployee').removeClass("input-validation-error");

        if (unitid == '' || unitid == -1 || unitid == null) {
            $('#ddlUnitsEmployee').addClass("input-validation-error");
        }
        else {
            $('#modalEmpDetails').modal('open');
            $(grid_Emp).jqGrid('GridUnload');
            $("#loader_Emplist").show();
            $.ajax({
                type: "POST",
                url: "../GeneralSetup/GetEmployees?UnitID=" + unitid,
                dataType: "json",
                cache: false,
                success: function (data) {
                    gridBindEmpData(data);
                    $("#loader_Emplist").hide();
                }
            })
        }
        $('#ddlUnit').material_select();
    });

    $("#rbEmployee").click(function () {
        $("#divfrontoffice").hide();
        $("#divemployee").show();
        $("#ddlUnitsEmployee").removeAttr("disabled");
        $("#txtEmployeeCode").removeAttr("disabled");
        $("#txtEmployeeName").removeAttr("disabled");
        $("#txtMailID").removeAttr("disabled");
        $("#txtMobileNo").removeAttr("disabled");
        //$("#txtFrontOfficeMailID").attr("disabled", "disabled");
        //$("#txtDepartmentMailID").attr("disabled", "disabled");
        //$("#txtExecutiveMailID").attr("disabled", "disabled");
        $("#ddlUnitsEmployee").material_select();
    });



    $("#tab3").click(function () {
        $("#btnSave").hide();
        $("#btnSaveToOtherUnits").hide();
        $("#btnEmployeeSave").show();
    });

    $("#rbFrontOffice").click(function () {
        $("#divfrontoffice").show();
        $("#divemployee").hide();
        $.ajax({
            url: '../GeneralSetup/getFrontOfficeDetails',
            data: { UnitID: $('#ddlUnitsEmployee').val() },
            type: 'POST',
            success: function (data) {
                bindLotusFrontOffice(data);
            }
        });
    });

    $("#btnEmployeeCancel").click(function () {
        ClearMailSetupForm();
    });

    //clear mail set up form.
    function ClearMailSetupForm() {
        $("#divfrontoffice").hide();
        $("#divemployee").show();
        $("#rbEmployee").prop("checked", true);
        $('#txtEmployeeCode').val('');
        $('#txtEmployeeID').val('');
        $('#txtEmployeeName').val('');
        $('#txtMailID').val('');
        $('#txtMobileNo').val('');
        $('#txtBccMail').val('');
        $('#txtCcMail1').val('');
        $('#txtCcMail2').val('');
        $('#txtCcMail3').val('');
        RemoveValidation('#txtEmployeeCode');
        RemoveValidation('#txtEmployeeName');
        RemoveValidation('#txtMailID');
        RemoveValidation('#txtFrontOfficeMailID');
    }


    $("#tab1,#tab2,#tab4,#tab5,#tab6,#tab7").click(function () {
        $("#btnSave").show();
        $("#btnSaveToOtherUnits").show();
    });

    $("#tab2").click(function () {
        $(grid_TaxiRates).jqGrid("setGridWidth", $("#dvTaxirates").width());
    });

    $("#btnEmployeeSave").click(function () {

        if (validateEmployeeTab()) {
            //lotus mail

            var LotusDetails = new Object();
            if ($("#rbEmployee").is(":checked")) {
                LotusDetails.MailStatus = 1;
            }
            else {
                LotusDetails.MailStatus = 0;
            }
            LotusDetails.UnitCode = $("#hdnUnitCode").val();
            LotusDetails.EmployeeID = $("#txtEmployeeID").val();
            LotusDetails.EmployeeCode = $("#txtEmployeeCode").val();
            LotusDetails.EmployeeName = $("#txtEmployeeName").val();
            LotusDetails.MobileNumber = $("#txtMobileNo").val();
            LotusDetails.LotusMail = $("#txtMailID").val();
            LotusDetails.UnitID = $("#ddlUnitsEmployee").val();
            LotusDetails.UnitName = $("#ddlUnitsEmployee option:selected").text();
            LotusDetails.FrontOfficeLotusID = $("#txtFrontOfficeMailID").val();
            LotusDetails.ExecutiveLotusID1 = $("#txtDepartmentMailID").val();
            LotusDetails.ExecutiveLotusID2 = $("#txtExecutiveMailID").val();
            LotusDetails.BCCMail1 = $("#txtBccMail").val();
            LotusDetails.CCMail1 = $("#txtCcMail1").val();
            LotusDetails.CCMail2 = $("#txtCcMail2").val();
            LotusDetails.CCMail3 = $("#txtCcMail3").val();

            $.ajax({
                url: '../GeneralSetup/SaveMailSetupDetails',
                type: 'POST',
                data: {
                    LotusDetails: LotusDetails
                },
                success: function (data) {
                    if (data > 0) {
                        message = '<p>Mail set up details saved successfully. <a>Pop up closes in 5 secs</a></p>';
                        type = 'notice';
                        showNotification(message, type);
                        ClearMailSetupForm();
                    }
                }
            });
        }

    });

    $("#btnSaveToOtherUnits").click(function () {
        $('#modalApplytoOtherUnits').modal('open');
        //document.getElementById("ddlUnitsToApply").options[0].disabled = true;
        //$('#ddlUnitsToApply').material_select();
        //var lbl = $('ul[class="dropdown-content select-dropdown multiple-select-dropdown"] li').first().find("label")[0]; $(lbl).hide();
    });

    $("#btnSave").click(function () {
        status = 0;
        SaveDetails(status);
    });

    $("#btnSaveOtherUnits").click(function () {
        status = 1;
        var units = $("#ddlUnitsToApply").val();

        if (units != null && units != undefined && units.length > 0) {
            if (units[0] == "")
                units = units.slice(1);
            if (units.length > 0)
                SaveDetails(status);
            else {
                message = '<p>Please select Units to apply. <a>Pop up closes in 5 secs</a></p>';
                type = 'warning';
                showNotification(message, type);
            }
        }
        else {
            $('#ddlUnitsToApply').addClass("input-validation-error");
            $('#ddlUnitsToApply').material_select();
        }
    });

    $("#ddlUnitsToApply").change(function () {
        var units = $("#ddlUnitsToApply").val();
        if (units != null && units != undefined && units.length > 0) {
            $('#ddlUnitsToApply').removeClass("input-validation-error");
            $('#ddlUnitsToApply').material_select();
        }
    });

    // .. Change events ....

    $('#txtEffectiveDateFuel').change(function () {
        if ($(this).val() != "") {
            $.ajax({
                url: '../GeneralSetup/getFuelRates',
                type: 'POST',
                data: { EffectiveDate: $('#txtEffectiveDateFuel').val(), UnitID: $('#ddlUnits').val() },
                success: function (data) {
                    if (data.length > 0) {
                        $('#grdFuelType').jqGrid('GridUnload');
                        bindFuelRates(data);
                    }
                    else {
                        bindFuelRates([]);
                    }
                }
            });
        }
    });

    $('#txtEffectiveDateOvertime').change(function () {
        if ($(this).val() != "") {
            $.ajax({
                url: '../GeneralSetup/getOvertimeRates',
                type: 'POST',
                data: { EffectiveDate: $('#txtEffectiveDateOvertime').val(), UnitID: $('#ddlUnits').val() },
                success: function (data) {
                    $('#grdOvertime').jqGrid('GridUnload');
                    if (data.length > 0) {
                        bindOvertimeRates(data);
                    }
                    else {
                        bindOvertimeRates([]);
                    }
                }
            });
        }
    });

    $('#txtEffectiveDateDayOff').change(function () {
        if ($(this).val() != "") {
            $.ajax({
                url: '../GeneralSetup/getDayoffRates',
                type: 'POST',
                data: { EffectiveDate: $('#txtEffectiveDateDayOff').val(), UnitID: $('#ddlUnits').val() },
                success: function (data) {
                    $('#grdDayoffRates').jqGrid('GridUnload');
                    if (data.length > 0) {
                        bindDayOffRates(data);
                    }
                    else {
                        bindDayOffRates([]);
                    }
                }
            });
        }
    });

    $('#txtEffectiveDatetaxiRate').change(function () {
        if ($(this).val() != "") {
            $.ajax({
                url: '../GeneralSetup/getTaxiRates',
                type: 'POST',
                data: { EffectiveDate: $('#txtEffectiveDatetaxiRate').val(), UnitID: $('#ddlUnits').val() },
                success: function (data) {

                    if (data.length > 0) {
                        bindTaxiRates(data);
                    }
                    else {
                        bindTaxiRates([]);
                    }
                }
            });
        }
    });

    $('#txtEffectiveDateAllowance').change(function () {
        if ($(this).val() != "") {
            $.ajax({
                url: '../GeneralSetup/getAllowanceRates',
                type: 'POST',
                data: { EffectiveDate: $('#txtEffectiveDateAllowance').val(), UnitID: $('#ddlUnits').val() },
                success: function (data) {
                    if (data.length > 0) {
                        $('#grdAllowanceRates').jqGrid('GridUnload');
                        bindAllowanceRates(data);
                    }
                    else {
                        bindAllowanceRates([]);
                    }
                }
            });
        }
    });

    $("#ddlUnits").change(function () {
        removeValidations();
        BindRates($("#ddlUnits").val());
    });

    $("#ddlUnitsEmployee").change(function () {
        if ($("#ddlUnitsEmployee").val() != "" && $("#ddlUnitsEmployee").val() > 0) {
            $.ajax({
                url: '../GeneralSetup/getMailDetails',
                type: 'POST',
                data: { UnitID: $('#ddlUnitsEmployee').val() },
                success: function (data) {
                    bindLotusEmployee(data);
                }
            });
        }

    });

    $("#ddlTaxiModels").change(function () {
        var UnitID = $("#ddlUnits").val();
        var modelid = $(this).val();
        var isvalid = 1;
        if ($("#ddlTaxiModels").val() != "") {
            var allData = $(grid_TaxiRates).jqGrid('getGridParam', 'data');
            $.each(allData, function (i, val) {
                if (val.ModelID == modelid) {
                    isvalid = 0;
                    message = '<p>Model already exists. <a>Pop up closes in 5 secs</a></p>';
                    type = 'warning';
                    showNotification(message, type);
                }
            });
            if (isvalid == 1) {
                $.ajax({
                    type: "POST",
                    url: "../GeneralSetup/BindTaxiRateTypes",
                    data: { UnitID: UnitID },
                    dataType: "json",
                    success: function (data) {
                        var arr = [];
                        var ModelID = $("#ddlTaxiModels").val();
                        var ModelName = $('#ddlTaxiModels option:selected').text();
                        $.each(data, function (i, val) {
                            arr.push({
                                ModelID: ModelID,
                                ModelName: ModelName,
                                LookupID: val.LookupID,
                                LookupType: val.LookupType,
                                ACKiloMeterRate: 0,
                                NonACKiloMeterRate: 0,
                                ACHoulryRate: 0,
                                NonACHourlyRate: 0
                            });
                        });


                        if (arr.length > 0) {
                            for (var i = 0; i < arr.length; i++) {
                                jQuery("#grdTaxiRates").jqGrid('addRowData', i + 1, arr[i]);
                            }
                        }

                    }
                });
            }
        }

    });

    //..Other events ..

    $('.numericclass').keypress(function (event) {
        var $this = $(this);
        if ((event.which != 46 || $this.val().indexOf('.') != -1) && ((event.which < 48 || event.which > 57) && (event.which != 0 && event.which != 8))) {
            event.preventDefault();
        }
        var text = $(this).val();
        if ((event.which == 46) && (text.indexOf('.') == -1)) {
            setTimeout(function () {
                if ($this.val().substring($this.val().indexOf('.')).length > 3) {
                    $this.val($this.val().substring(0, $this.val().indexOf('.') + 3));
                }
            }, 1);
        } if ((text.indexOf('.') != -1) && (text.substring(text.indexOf('.')).length > 2) && (event.which != 0 && event.which != 8) && ($(this)[0].selectionStart >= text.length - 2)) {
            event.preventDefault();
        }
    });

    $("#ddlInsuranceGSTRate,#ddlTyreGstRate,#ddlBatteryGstRate,#ddlTaxGstRate,#ddlPollutionGstRate,#ddlPermitGstRate,#ddlTestingGstRate,#ddlServiceGstRate,#ddlFuelOilGstRate,#ddlTaxiGstRate,#ddlAutoGstRate,#ddlAccidentGstRate,#ddlMaintenanceGstRate").change(function () {
        var GSTRate = $(this).val();
        var id = $(this).attr('id');
        TaxRateBinding(GSTRate, id);
    });

    $("input[id*='txtMobileNo']").keydown(function (event) {
        if (event.shiftKey == true) {
            event.preventDefault();
        }
        if ((event.keyCode >= 48 && event.keyCode <= 57) ||
            (event.keyCode >= 96 && event.keyCode <= 105) ||
            event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 37 ||
            event.keyCode == 39 || event.keyCode == 46 || event.keyCode == 110) {
        } else {
            event.preventDefault();
        }
    });

    //.. Functions ..


    function SaveDetails(status) {
        var chkfuel = 0, chkovertime = 0, chkdayoff = 0, chkallowance = 0, chktaxi = 0, chkothers = 0;

        //fuel rates      


        var ids = jQuery(grdFuelType).jqGrid('getDataIDs');
        for (var i = 0; i < ids.length; i++) {
            var rowId = ids[i];
            FuelRates.push({
                LookupID: $(grdFuelType).jqGrid("getRowData", rowId).LookupID,
                LookupType: $(grdFuelType).jqGrid("getRowData", rowId).LookupType,
                Rate: $("#txtRate_" + rowId + "").val()
            });
        }

        // var FuelRates = $(grdFuelType).jqGrid('getGridParam', 'data');

        //overtime rates      


        var ids = jQuery(grdOvertime).jqGrid('getDataIDs');
        for (var i = 0; i < ids.length; i++) {
            var rowId = ids[i];
            OverTimeRates.push({
                DriverCategoryLookupID: $(grdOvertime).jqGrid("getRowData", rowId).DriverCategoryLookupID,
                Type: $(grdFuelType).jqGrid("getRowData", rowId).Type,
                OvertimeRate: $("#txtOverRate_" + rowId + "").val()
            });
        }

        // var OverTimeRates = $(grdOvertime).jqGrid('getGridParam', 'data');

        //Dayoff rates  

        // var DayoffRates = $(grid_DayoffRates).jqGrid('getGridParam', 'data');



        var ids = jQuery(grid_DayoffRates).jqGrid('getDataIDs');
        for (var i = 0; i < ids.length; i++) {
            var rowId = ids[i];
            DayoffRates.push({

                DriverCategoryLookupID: $(grid_DayoffRates).jqGrid("getRowData", rowId).DriverCategoryLookupID,
                DriverType: $(grid_DayoffRates).jqGrid("getRowData", rowId).DriverType,
                DayOffTypeLookupID: $(grid_DayoffRates).jqGrid("getRowData", rowId).DayOffTypeLookupID,
                Type: $(grid_DayoffRates).jqGrid("getRowData", rowId).Type,
                OffDayRate: $("#txtOffDayRate_" + rowId + "").val(),
            });
        }


        //Allowance rates    

        // var AllowanceRates = $(grid_AllowancesRates).jqGrid('getGridParam', 'data');


        var ids = jQuery(grid_AllowancesRates).jqGrid('getDataIDs');
        for (var i = 0; i < ids.length; i++) {
            var rowId = ids[i];
            AllowanceRates.push({
                DriverCategoryLookupID: $(grid_AllowancesRates).jqGrid("getRowData", rowId).DriverCategoryLookupID,
                DriverType: $(grid_AllowancesRates).jqGrid("getRowData", rowId).DriverType,
                AllowanceTypeLookupID: $(grid_AllowancesRates).jqGrid("getRowData", rowId).AllowanceTypeLookupID,
                Type: $(grid_AllowancesRates).jqGrid("getRowData", rowId).Type,
                AllowanceRate: $("#txtAllowanceRate_" + rowId + "").val(),
            });
        }

        //Taxi rates     


        var ids = jQuery(grid_TaxiRates).jqGrid('getDataIDs');
        for (var i = 0; i < ids.length; i++) {
            var rowId = ids[i];
            TaxiRates.push({
                ModelID: $(grid_TaxiRates).jqGrid("getRowData", rowId).ModelID,
                ModelName: $(grid_TaxiRates).jqGrid("getRowData", rowId).ModelName,
                LookupID: $(grid_TaxiRates).jqGrid("getRowData", rowId).LookupID,
                AllowanceRate: $("#txtAllowanceRate_" + rowId + "").val(),
                ACKiloMeterRate: $("#txtACKiloMeterRate_" + rowId + "").val(),
                NonACKiloMeterRate: $("#txtNonACKiloMeterRate_" + rowId + "").val(),
                ACHoulryRate: $("#txtACHoulryRate_" + rowId + "").val(),
                NonACHourlyRate: $("#txtNonACHourlyRate_" + rowId + "").val(),
                LookupType: $(grid_TaxiRates).jqGrid("getRowData", rowId).LookupType,
            });
        }

        if (fieldValidation() == 1) {
            //general setup

            var GeneralSetup = new Object();
            GeneralSetup.SetupID = $("#hdnSetupID").val();
            GeneralSetup.UnitCode = $("#hdnUnitCode").val();
            GeneralSetup.UnitID = $("#ddlUnits").val();
            GeneralSetup.UnitName = $("#ddlUnits option:selected").text();
            GeneralSetup.EffectiveDateFuel = $("#txtEffectiveDateFuel").val();
            GeneralSetup.EffectiveDateOvertime = $("#txtEffectiveDateOvertime").val();
            GeneralSetup.EffectiveDateDayOff = $("#txtEffectiveDateDayOff").val();
            GeneralSetup.EffectiveDateAllowance = $("#txtEffectiveDateAllowance").val();
            GeneralSetup.EffectiveDateTaxi = $("#txtEffectiveDatetaxiRate").val();

            GeneralSetup.TaxVendorID = $("#ddlTax").val();
            GeneralSetup.TaxVendor = $("#ddlTax option:selected").text();
            GeneralSetup.PollutionVendorID = $("#ddlPollution").val();
            GeneralSetup.PollutionVendor = $("#ddlPollution option:selected").text();
            GeneralSetup.TestingVendorID = $("#ddlTesting").val();
            GeneralSetup.TestingVendor = $("#ddlTesting option:selected").text();
            GeneralSetup.AutoVendorID = $("#ddlAutoSlip").val();
            GeneralSetup.AutoVendor = $("#ddlAutoSlip option:selected").text();
            GeneralSetup.TaxiVendorID = $("#ddlTaxiSlip").val();
            GeneralSetup.TaxiVendor = $("#ddlTaxiSlip option:selected").text();
            GeneralSetup.InsuranceDebitAccountID = $("#ddlExpenseInsurance").val();
            GeneralSetup.InsuranceDebitAccount = $("#ddlExpenseInsurance option:selected").text();
            GeneralSetup.TaxDebitAccountID = $("#ddlExpenseTax").val();
            GeneralSetup.TaxDebitAccount = $("#ddlExpenseTax option:selected").text();
            GeneralSetup.PollutionDebitAccountID = $("#ddlExpensePollution").val();
            GeneralSetup.PollutionDebitAccount = $("#ddlExpensePollution option:selected").text();
            GeneralSetup.TestingDebitAccountID = $("#ddlExpenseTesting").val();
            GeneralSetup.TestingDebitAccount = $("#ddlExpenseTesting option:selected").text();
            GeneralSetup.ServiceDebitAccountID = $("#ddlExpenseService").val();
            GeneralSetup.ServiceDebitAccount = $("#ddlExpenseService option:selected").text();
            GeneralSetup.TyrePurchaseDebitAccountID = $("#ddlExpenseTyrePurchase").val();
            GeneralSetup.TyrePurchaseDebitAccount = $("#ddlExpenseTyrePurchase option:selected").text();
            GeneralSetup.ReregisterDebitAccountID = $("#ddlExpenseReregister").val();
            GeneralSetup.ReregisterDebitAccount = $("#ddlExpenseReregister option:selected").text();
            GeneralSetup.BatteryDebitAccountID = $("#ddlExpenseBatteryPurchase").val();
            GeneralSetup.BatteryDebitAccount = $("#ddlExpenseBatteryPurchase option:selected").text();
            GeneralSetup.FuelDebitAccountID = $("#ddlExpenseFuelBill").val();
            GeneralSetup.FuelDebitAccount = $("#ddlExpenseFuelBill option:selected").text();
            GeneralSetup.TaxiDebitAccountID = $("#ddlExpenseTaxiPayments").val();
            GeneralSetup.TaxiDebitAccount = $("#ddlExpenseTaxiPayments option:selected").text();
            GeneralSetup.AutoDebitAccountID = $("#ddlExpenseAutoPayments").val();
            GeneralSetup.AutoDebitAccount = $("#ddlExpenseAutoPayments option:selected").text();
            GeneralSetup.AdvanceDebitAccountID = $("#ddlExpenseAccidentAdvance").val();
            GeneralSetup.AdvanceDebitAccount = $("#ddlExpenseAccidentAdvance option:selected").text();
            GeneralSetup.MaintenanceDebitAccountID = $("#ddlExpenseMaintenance").val();
            GeneralSetup.MaintenanceDebitAccount = $("#ddlExpenseMaintenance option:selected").text();
            GeneralSetup.InsuranceGSTRate = $("#ddlInsuranceGSTRate").val();
            GeneralSetup.InsuranceCGSTRate = $("#ddlInsuranceCgstRate").val();
            GeneralSetup.InsuranceSGSTRate = $("#ddlInsuranceSgstRate").val();
            GeneralSetup.InsuranceIGSTRate = $("#ddlInsuranceIgstRate").val();
            GeneralSetup.InsuranceCESSRate = $("#ddlInsuranceCessRate").val();
            GeneralSetup.TyreGSTRate = $("#ddlTyreGstRate").val();
            GeneralSetup.TyreCGSTRate = $("#ddlTyreCgstRate").val();
            GeneralSetup.TyreSGSTRate = $("#ddlTyreSgstRate").val();
            GeneralSetup.TyreIGSTRate = $("#ddlTyreIgstRate").val();
            GeneralSetup.TyreCESSRate = $("#ddlTyreCessRate").val();
            GeneralSetup.BatteryGSTRate = $("#ddlBatteryGstRate").val();
            GeneralSetup.BatteryCGSTRate = $("#ddlBatteryCgstRate").val();
            GeneralSetup.BatterySGSTRate = $("#ddlBatterySgstRate").val();
            GeneralSetup.BatteryIGSTRate = $("#ddlBatteryIgstRate").val();
            GeneralSetup.BatteryCESSRate = $("#ddlBatteryCessRate").val();
            GeneralSetup.TaxGSTRate = $("#ddlTaxGstRate").val();
            GeneralSetup.TaxCGSTRate = $("#ddlTaxCgstRate").val();
            GeneralSetup.TaxSGSTRate = $("#ddlTaxSgstRate").val();
            GeneralSetup.TaxIGSTRate = $("#ddlTaxIgstRate").val();
            GeneralSetup.TaxCESSRate = $("#ddlTaxCessRate").val();
            GeneralSetup.PollutionGSTRate = $("#ddlPollutionGstRate").val();
            GeneralSetup.PollutionCGSTRate = $("#ddlPollutionCgstRate").val();
            GeneralSetup.PollutionSGSTRate = $("#ddlPollutionSgstRate").val();
            GeneralSetup.PollutionIGSTRate = $("#ddlPollutionIgstRate").val();
            GeneralSetup.PollutionCESSRate = $("#ddlPollutionCessRate").val();
            GeneralSetup.PermitGSTRate = $("#ddlPermitGstRate").val();
            GeneralSetup.PermitCGSTRate = $("#ddlPermitCgstRate").val();
            GeneralSetup.PermitSGSTRate = $("#ddlPermitSgstRate").val();
            GeneralSetup.PermitIGSTRate = $("#ddlPermitIgstRate").val();
            GeneralSetup.PermitCESSRate = $("#ddlPermitCessRate").val();
            GeneralSetup.TestingGSTRate = $("#ddlTestingGstRate").val();
            GeneralSetup.TestingCGSTRate = $("#ddlTestingCgstRate").val();
            GeneralSetup.TestingSGSTRate = $("#ddlTestingSgstRate").val();
            GeneralSetup.TestingIGSTRate = $("#ddlTestingIgstRate").val();
            GeneralSetup.TestingCESSRate = $("#ddlTestingCessRate").val();
            GeneralSetup.ServiceGSTRate = $("#ddlServiceGstRate").val();
            GeneralSetup.ServiceCGSTRate = $("#ddlServiceCgstRate").val();
            GeneralSetup.ServiceSGSTRate = $("#ddlServiceSgstRate").val();
            GeneralSetup.ServiceIGSTRate = $("#ddlServiceIgstRate").val();
            GeneralSetup.ServiceCESSRate = $("#ddlServiceCessRate").val();
            GeneralSetup.FuelOilGSTRate = $("#ddlFuelOilGstRate").val();
            GeneralSetup.FuelOilCGSTRate = $("#ddlFuelOilCgstRate").val();
            GeneralSetup.FuelOilSGSTRate = $("#ddlFuelOilSgstRate").val();
            GeneralSetup.FuelOilIGSTRate = $("#ddlFuelOilIgstRate").val();
            GeneralSetup.FuelOilCESSRate = $("#ddlFuelOilCessRate").val();
            GeneralSetup.TaxiGSTRate = $("#ddlTaxiGstRate").val();
            GeneralSetup.TaxiCGSTRate = $("#ddlTaxiCgstRate").val();
            GeneralSetup.TaxiSGSTRate = $("#ddlTaxiSgstRate").val();
            GeneralSetup.TaxiIGSTRate = $("#ddlTaxiIgstRate").val();
            GeneralSetup.TaxiCESSRate = $("#ddlTaxiCessRate").val();
            GeneralSetup.AutoGSTRate = $("#ddlAutoGstRate").val();
            GeneralSetup.AutoCGSTRate = $("#ddlAutoCgstRate").val();
            GeneralSetup.AutoSGSTRate = $("#ddlAutoSgstRate").val();
            GeneralSetup.AutoIGSTRate = $("#ddltAutoIgstRate").val();
            GeneralSetup.AutoCESSRate = $("#ddlAutoCessRate").val();
            GeneralSetup.AccidentGSTRate = $("#ddlAccidentGstRate").val();
            GeneralSetup.AccidentCGSTRate = $("#ddlAccidentCgstRate").val();
            GeneralSetup.AccidentSGSTRate = $("#ddlAccidentSgstRate").val();
            GeneralSetup.AccidentIGSTRate = $("#ddlAccidentIgstRate").val();
            GeneralSetup.AccidentCESSRate = $("#ddlAccidentCessRate").val();
            GeneralSetup.MaintenanceGSTRate = $("#ddlMaintenanceGstRate").val();
            GeneralSetup.MaintenanceCGSTRate = $("#ddlMaintenanceCgstRate").val();
            GeneralSetup.MaintenanceSGSTRate = $("#ddlMaintenanceSgstRate").val();
            GeneralSetup.MaintenanceIGSTRate = $("#ddlMaintenanceIgstRate").val();
            GeneralSetup.MaintenanceCESSRate = $("#ddlMaintenanceCessRate").val();
            GeneralSetup.UnitCode = $("#hdnUnitCode").val();
            GeneralSetup.BaseCurrency = $("#ddlCurrency").val();

            if ($("#chkDailyUpdate").is(":checked")) {
                GeneralSetup.FuelRateDailyUpdate = 1;
            }
            else {
                GeneralSetup.FuelRateDailyUpdate = 0;
            }
            GeneralSetup.UnitName = $("#ddlUnits option:selected").text();





            var units = $("#ddlUnitsToApply").val();

            if (status == 1) {



                chkfuel = checkCheckBoxValue('#ChkFuelRates');

                chkovertime = checkCheckBoxValue('#ChkOvertimeRates');

                chkdayoff = checkCheckBoxValue('#ChkDayoffRates');

                chkallowance = checkCheckBoxValue('#ChkAllowanceRates');

                chktaxi = checkCheckBoxValue('#ChkTaxiRates');

                chkothers = checkCheckBoxValue('#ChkOthers');

            }

            if (status == 0) {
                $.ajax({
                    url: '../GeneralSetup/SaveDetails',
                    type: 'POST',
                    data: {
                        GeneralSetup: GeneralSetup, FuelRates: FuelRates, OverTimeRates: OverTimeRates,
                        DayoffRates: DayoffRates, AllowanceRates: AllowanceRates, TaxiRates: TaxiRates
                    },
                    success: function (data) {
                        if (data > 0) {
                            message = '<p>Set up details saved successfully. <a>Pop up closes in 5 secs</a></p>';
                            type = 'notice';
                            showNotification(message, type);
                            loadDefaults();
                        }
                    }
                });
            }
            else {

                if (units[0] == "")
                    units = units.slice(1);

                $.ajax({
                    url: '../GeneralSetup/SaveDetailsOtherUnits',
                    type: 'POST',
                    data: {
                        GeneralSetup: GeneralSetup, FuelRates: FuelRates, OverTimeRates: OverTimeRates,
                        DayoffRates: DayoffRates, AllowanceRates: AllowanceRates, TaxiRates: TaxiRates, Units: units,
                        chkfuel: chkfuel, chkovertime: chkovertime, chkdayoff: chkdayoff, chkallowance: chkallowance,
                        chktaxi: chktaxi, chkothers: chkothers
                    },
                    success: function (data) {
                        if (data > 0) {
                            message = '<p>Set up details saved successfully. <a>Pop up closes in 5 secs</a></p>';
                            type = 'notice';
                            showNotification(message, type);
                            loadDefaults();
                            $('#modalApplytoOtherUnits').modal('close');
                        }
                    }
                });


            }
        }
    }

    //function for checking check box value.
    function checkCheckBoxValue(chkBox) {
        if ($(chkBox).prop("checked") == true) {
            return 1;
        }
        else {
            return 0;
        }
    }


    function fieldValidation() {
        var isvalid = 1;
        var previousFuelDate = new Date($('#hdnEffectivedateFuel').val());
        var currentFuelDate = new Date($('#txtEffectiveDateFuel').val());

        if ($('#txtEffectiveDateFuel').val() == "") {
            isvalid = 0;
            message = '<p>Provide Fuel Effective Date. <a>Pop up closes in 5 secs</a></p>';
            type = 'warning';
            showNotification(message, type);
            return;
        }

        if ($('#txtEffectiveDateOvertime').val() == "") {
            isvalid = 0;
            message = '<p>Provide Overtime Effective Date. <a>Pop up closes in 5 secs</a></p>';
            type = 'warning';
            showNotification(message, type);
            return;
        }

        if ($('#txtEffectiveDateDayOff').val() == "") {
            isvalid = 0;
            message = '<p>Provide Dayoff Effective Date. <a>Pop up closes in 5 secs</a></p>';
            type = 'warning';
            showNotification(message, type);
            return;
        }

        if ($('#txtEffectiveDateAllowance').val() == "") {
            isvalid = 0;
            message = '<p>Provide Allowance Effective Date. <a>Pop up closes in 5 secs</a></p>';
            type = 'warning';
            showNotification(message, type);
            return;
        }

        if ($('#txtEffectiveDatetaxiRate').val() == "") {
            isvalid = 0;
            message = '<p>Provide Taxi rates Effective Date. <a>Pop up closes in 5 secs</a></p>';
            type = 'warning';
            showNotification(message, type);
            return;
        }

        if (($('#chkDailyUpdate').prop("checked") == true) && (currentFuelDate < previousFuelDate)) {
            isvalid = 0;
            message = '<p>Current fuel date should be greater than previous fuel date. <a>Pop up closes in 5 secs</a></p>';
            type = 'warning';
            showNotification(message, type);
            return;
        }

        if ($('#txtEffectiveDateFuel').val() != "" && FuelRates.length == 0) {
            isvalid = 0;
            message = '<p>Provide Fuel Rates. <a>Pop up closes in 5 secs</a></p>';
            type = 'warning';
            showNotification(message, type);
            return;
        }
        if ($('#txtEffectiveDateOvertime').val() != "" && OverTimeRates.length == 0) {
            isvalid = 0;
            message = '<p>Provide Overtime Rates. <a>Pop up closes in 5 secs</a></p>';
            type = 'warning';
            showNotification(message, type);
            return;
        }

        if ($('#txtEffectiveDateDayOff').val() != "" && DayoffRates.length == 0) {
            isvalid = 0;
            message = '<p>Provide Day off Rates. <a>Pop up closes in 5 secs</a></p>';
            type = 'warning';
            showNotification(message, type);
            return;
        }

        if ($('#txtEffectiveDateAllowance').val() != "" && AllowanceRates.length == 0) {
            isvalid = 0;
            message = '<p>Provide Allowance Rates. <a>Pop up closes in 5 secs</a></p>';
            type = 'warning';
            showNotification(message, type);
            return;
        }

        if ($('#txtEffectiveDatetaxiRate').val() != "" && TaxiRates.length == 0) {
            isvalid = 0;
            message = '<p>Provide Taxi Rates. <a>Pop up closes in 5 secs</a></p>';
            type = 'warning';
            showNotification(message, type);
            return;
        }



        return isvalid;
    }

    function loadDefaults() {
        var unitID = $('#hdnCurrentUnitID').val();
        $('#ddlUnits').val(unitID);
        $('#ddlUnits').material_select();
        $('#ddlUnitsEmployee').val(unitID);
        $('#ddlUnitsEmployee').material_select();
        $("#ddlCurrency").val(1);
        $("#ddlCurrency").material_select();
        $("#ddlUnitsEmployee").removeAttr("disabled");
        $("#txtEmployeeCode").removeAttr("disabled");
        $("#txtEmployeeName").removeAttr("disabled");
        $("#txtMailID").removeAttr("disabled");
        $("#txtMobileNo").removeAttr("disabled");
        //$("#txtFrontOfficeMailID").attr("disabled", "disabled");
        //$("#txtDepartmentMailID").attr("disabled", "disabled");
        //$("#txtExecutiveMailID").attr("disabled", "disabled");
        $("#ddlUnitsEmployee").material_select();
        $("#divfrontoffice").hide();

        $('#ddlUnitsToApply').val('');
        $('#ddlUnitsToApply').material_select();

        $('#ChkFuelRates').prop("checked", false);
        $('#ChkOvertimeRates').prop("checked", false);
        $('#ChkDayoffRates').prop("checked", false);
        $('#ChkAllowanceRates').prop("checked", false);
        $('#ChkTaxiRates').prop("checked", false);
        $('#ChkVendorAccount').prop("checked", false);
        $('#ChkExpensesAccount').prop("checked", false);
        $('#ChkGST').prop("checked", false);
        $("#txtEffectiveDateFuel").datepicker({ dateFormat: "yy/mm/dd" }).datepicker("setDate", new Date());
        // GetGSTRate();
        BindRates($('#hdnCurrentUnitID').val());


    }

    function GetGSTRate() {
        $.ajax({
            type: "POST",
            url: "../Purchase/GetGSTRate",
            dataType: "json",
            success: function (GSTRate) {
                var htmlGSTRate = '';
                if (GSTRate.length > 0) {
                    for (var j = 0; j < GSTRate.length; j++) {
                        var key = GSTRate[j];
                        var value = GSTRate[j];
                        htmlGSTRate = htmlGSTRate + '<option value=' + key + '>' + value + '</option>';
                    }
                }
                $('#ddlInsuranceGSTRate').html(htmlGSTRate);
                $('#ddlInsuranceGSTRate').material_select();
                $('#ddlTyreGstRate').html(htmlGSTRate);
                $('#ddlTyreGstRate').material_select();
                $('#ddlBatteryGstRate').html(htmlGSTRate);
                $('#ddlBatteryGstRate').material_select();
                $('#ddlTaxGstRate').html(htmlGSTRate);
                $('#ddlTaxGstRate').material_select();
                $('#ddlPollutionGstRate').html(htmlGSTRate);
                $('#ddlPollutionGstRate').material_select();
                $('#ddlPermitGstRate').html(htmlGSTRate);
                $('#ddlPermitGstRate').material_select();
                $('#ddlTestingGstRate').html(htmlGSTRate);
                $('#ddlTestingGstRate').material_select();
                $('#ddlServiceGstRate').html(htmlGSTRate);
                $('#ddlServiceGstRate').material_select();
                $('#ddlFuelOilGstRate').html(htmlGSTRate);
                $('#ddlFuelOilGstRate').material_select();
                $('#ddlTaxiGstRate').html(htmlGSTRate);
                $('#ddlTaxiGstRate').material_select();
                $('#ddlAutoGstRate').html(htmlGSTRate);
                $('#ddlAutoGstRate').material_select();
                $('#ddlAccidentGstRate').html(htmlGSTRate);
                $('#ddlAccidentGstRate').material_select();
                $('#ddlMaintenanceGstRate').html(htmlGSTRate);
                $('#ddlMaintenanceGstRate').material_select();
            },

        });
    }

    function TaxRateBinding(GstRate, id) {
        var htmlCGST = '', htmlSGST = '', htmlIGST = '', htmlCESS = '';
        $.ajax({
            type: "POST",
            url: "../Purchase/GetTaxSpitUp",
            dataType: "json",
            data: { GstRate: GstRate },
            success: function (data) {
                if (data["CGST"].length > 0) {
                    for (var j = 0; j < data["CGST"].length; j++) {
                        var key = data["CGST"][j].TaxPercentage;
                        var value = data["CGST"][j].TaxPercentage;
                        htmlCGST = htmlCGST + '<option value=' + key + '>' + value + '</option>';
                    }
                }
                else {
                    htmlCGST = htmlCGST + '<option value="0">' + "----Select----" + '</option>';
                }

                if (data["SGST"].length > 0) {
                    for (var j = 0; j < data["SGST"].length; j++) {
                        var key = data["SGST"][j].TaxPercentage;
                        var value = data["SGST"][j].TaxPercentage;
                        htmlSGST = htmlSGST + '<option value=' + key + '>' + value + '</option>';
                    }
                }
                else {
                    htmlSGST = htmlSGST + '<option value="0">' + "----Select----" + '</option>';
                }

                if (data["IGST"].length > 0) {
                    for (var j = 0; j < data["IGST"].length; j++) {
                        var key = data["IGST"][j].TaxPercentage;
                        var value = data["IGST"][j].TaxPercentage;
                        htmlIGST = htmlIGST + '<option value=' + key + '>' + value + '</option>';
                    }
                }
                else {
                    htmlIGST = htmlIGST + '<option value="0">' + "----Select----" + '</option>';
                }

                if (data["ICESS"].length > 0) {
                    for (var j = 0; j < data["ICESS"].length; j++) {
                        var key = data["ICESS"][j].TaxPercentage;
                        var value = data["ICESS"][j].TaxPercentage;
                        htmlCESS = htmlCESS + '<option value=' + key + '>' + value + '</option>';
                    }
                }
                else {
                    htmlCESS = htmlCESS + '<option value="0">' + "----Select----" + '</option>';
                }

                if (id == "ddlInsuranceGSTRate") {
                    $('#ddlInsuranceCgstRate').html(htmlCGST);
                    $('#ddlInsuranceCgstRate').material_select();
                    $('#ddlInsuranceSgstRate').html(htmlSGST);
                    $('#ddlInsuranceSgstRate').material_select();
                    $('#ddlInsuranceIgstRate').html(htmlIGST);
                    $('#ddlInsuranceIgstRate').material_select();
                    $('#ddlInsuranceCessRate').html(htmlCESS);
                    $('#ddlInsuranceCessRate').material_select();
                }
                else if (id == "ddlTyreGstRate") {
                    $('#ddlTyreCgstRate').html(htmlCGST);
                    $('#ddlTyreCgstRate').material_select();
                    $('#ddlTyreSgstRate').html(htmlSGST);
                    $('#ddlTyreSgstRate').material_select();
                    $('#ddlTyreIgstRate').html(htmlIGST);
                    $('#ddlTyreIgstRate').material_select();
                    $('#ddlTyreCessRate').html(htmlCESS);
                    $('#ddlTyreCessRate').material_select();
                }

                else if (id == "ddlBatteryGstRate") {
                    $('#ddlBatteryCgstRate').html(htmlCGST);
                    $('#ddlBatteryCgstRate').material_select();
                    $('#ddlBatterySgstRate').html(htmlSGST);
                    $('#ddlBatterySgstRate').material_select();
                    $('#ddlBatteryIgstRate').html(htmlIGST);
                    $('#ddlBatteryIgstRate').material_select();
                    $('#ddlBatteryCessRate').html(htmlCESS);
                    $('#ddlBatteryCessRate').material_select();
                }

                else if (id == "ddlTaxGstRate") {
                    $('#ddlTaxCgstRate').html(htmlCGST);
                    $('#ddlTaxCgstRate').material_select();
                    $('#ddlTaxSgstRate').html(htmlSGST);
                    $('#ddlTaxSgstRate').material_select();
                    $('#ddlTaxIgstRate').html(htmlIGST);
                    $('#ddlTaxIgstRate').material_select();
                    $('#ddlTaxCessRate').html(htmlCESS);
                    $('#ddlTaxCessRate').material_select();
                }

                else if (id == "ddlPollutionGstRate") {
                    $('#ddlPollutionCgstRate').html(htmlCGST);
                    $('#ddlPollutionCgstRate').material_select();
                    $('#ddlPollutionSgstRate').html(htmlSGST);
                    $('#ddlPollutionSgstRate').material_select();
                    $('#ddlPollutionIgstRate').html(htmlIGST);
                    $('#ddlPollutionIgstRate').material_select();
                    $('#ddlPollutionCessRate').html(htmlCESS);
                    $('#ddlPollutionCessRate').material_select();
                }

                else if (id == "ddlPermitGstRate") {
                    $('#ddlPermitCgstRate').html(htmlCGST);
                    $('#ddlPermitCgstRate').material_select();
                    $('#ddlPermitSgstRate').html(htmlSGST);
                    $('#ddlPermitSgstRate').material_select();
                    $('#ddlPermitIgstRate').html(htmlIGST);
                    $('#ddlPermitIgstRate').material_select();
                    $('#ddlPermitCessRate').html(htmlCESS);
                    $('#ddlPermitCessRate').material_select();
                }

                else if (id == "ddlTestingGstRate") {
                    $('#ddlTestingCgstRate').html(htmlCGST);
                    $('#ddlTestingCgstRate').material_select();
                    $('#ddlTestingSgstRate').html(htmlSGST);
                    $('#ddlTestingSgstRate').material_select();
                    $('#ddlTestingIgstRate').html(htmlIGST);
                    $('#ddlTestingIgstRate').material_select();
                    $('#ddlTestingCessRate').html(htmlCESS);
                    $('#ddlTestingCessRate').material_select();
                }

                else if (id == "ddlServiceGstRate") {
                    $('#ddlServiceCgstRate').html(htmlCGST);
                    $('#ddlServiceCgstRate').material_select();
                    $('#ddlServiceSgstRate').html(htmlSGST);
                    $('#ddlServiceSgstRate').material_select();
                    $('#ddlServiceIgstRate').html(htmlIGST);
                    $('#ddlServiceIgstRate').material_select();
                    $('#ddlServiceCessRate').html(htmlCESS);
                    $('#ddlServiceCessRate').material_select();
                }

                else if (id == "ddlFuelOilGstRate") {
                    $('#ddlFuelOilCgstRate').html(htmlCGST);
                    $('#ddlFuelOilCgstRate').material_select();
                    $('#ddlFuelOilSgstRate').html(htmlSGST);
                    $('#ddlFuelOilSgstRate').material_select();
                    $('#ddlFuelOilIgstRate').html(htmlIGST);
                    $('#ddlFuelOilIgstRate').material_select();
                    $('#ddlFuelOilCessRate').html(htmlCESS);
                    $('#ddlFuelOilCessRate').material_select();
                }

                else if (id == "ddlTaxiGstRate") {
                    $('#ddlTaxiCgstRate').html(htmlCGST);
                    $('#ddlTaxiCgstRate').material_select();
                    $('#ddlTaxiSgstRate').html(htmlSGST);
                    $('#ddlTaxiSgstRate').material_select();
                    $('#ddlTaxiIgstRate').html(htmlIGST);
                    $('#ddlTaxiIgstRate').material_select();
                    $('#ddlTaxiCessRate').html(htmlCESS);
                    $('#ddlTaxiCessRate').material_select();
                }

                else if (id == "ddlAutoGstRate") {
                    $('#ddlAutoCgstRate').html(htmlCGST);
                    $('#ddlAutoCgstRate').material_select();
                    $('#ddlAutoSgstRate').html(htmlSGST);
                    $('#ddlAutoSgstRate').material_select();
                    $('#ddltAutoIgstRate').html(htmlIGST);
                    $('#ddltAutoIgstRate').material_select();
                    $('#ddlAutoCessRate').html(htmlCESS);
                    $('#ddlAutoCessRate').material_select();
                }

                else if (id == "ddlAccidentGstRate") {
                    $('#ddlAccidentCgstRate').html(htmlCGST);
                    $('#ddlAccidentCgstRate').material_select();
                    $('#ddlAccidentSgstRate').html(htmlSGST);
                    $('#ddlAccidentSgstRate').material_select();
                    $('#ddlAccidentIgstRate').html(htmlIGST);
                    $('#ddlAccidentIgstRate').material_select();
                    $('#ddlAccidentCessRate').html(htmlCESS);
                    $('#ddlAccidentCessRate').material_select();
                }

                else if (id == "ddlMaintenanceGstRate") {
                    $('#ddlMaintenanceCgstRate').html(htmlCGST);
                    $('#ddlMaintenanceCgstRate').material_select();
                    $('#ddlMaintenanceSgstRate').html(htmlSGST);
                    $('#ddlMaintenanceSgstRate').material_select();
                    $('#ddlMaintenanceIgstRate').html(htmlIGST);
                    $('#ddlMaintenanceIgstRate').material_select();
                    $('#ddlMaintenanceCessRate').html(htmlCESS);
                    $('#ddlMaintenanceCessRate').material_select();
                }

            }
        });
    };

    function removeValidations() {
        $('#txtEffectiveDateFuel').val('');
        $('#chkDailyUpdate').prop("checked", false);
        jQuery(grdFuelType).jqGrid('GridUnload');
        $('#txtEffectiveDateOvertime').val('');
        jQuery(grdOvertime).jqGrid('GridUnload');
        $('#txtEffectiveDateDayOff').val('');
        jQuery(grid_DayoffRates).jqGrid('GridUnload');
        $('#txtEffectiveDateAllowance').val('');
        jQuery(grid_AllowancesRates).jqGrid('GridUnload');
        $('#txtEffectiveDatetaxiRate').val('');
        jQuery(grid_TaxiRates).jqGrid('GridUnload');
        $('#ddlTaxiModels').val('');
        $('#ddlTaxiModels').material_select();
        $('#rbEmployee').prop("checked", true);
        $('#ddlUnitsEmployee').val('');
        $('#ddlUnitsEmployee').material_select();
        $('#txtEmployeeCode').val('');
        $('#txtEmployeeID').val('');
        $('#txtEmployeeName').val('');
        $('#txtMailID').val('');
        $('#txtMobileNo').val('');
        $('#txtBccMail').val('');
        $('#txtCcMail1').val('');
        $('#txtCcMail2').val('');
        $('#txtCcMail3').val('');
        $('#txtFrontOfficeMailID').val('');
        $('#txtDepartmentMailID').val('');
        $('#txtExecutiveMailID').val('');
        $('#ddlTax').val('');
        $('#ddlTax').material_select();
        $('#ddlPollution').val('');
        $('#ddlPollution').material_select();
        $('#ddlTesting').val('');
        $('#ddlTesting').material_select();
        $('#ddlAutoSlip').val('');
        $('#ddlAutoSlip').material_select();
        $('#ddlTaxiSlip').val('');
        $('#ddlTaxiSlip').material_select();
        $('#ddlExpenseInsurance').val('');
        $('#ddlExpenseInsurance').material_select();
        $('#ddlExpenseTax').val('');
        $('#ddlExpenseTax').material_select();
        $('#ddlExpensePollution').val('');
        $('#ddlExpensePollution').material_select();
        $('#ddlExpenseTesting').val('');
        $('#ddlExpenseTesting').material_select();
        $('#ddlExpenseService').val('');
        $('#ddlExpenseService').material_select();
        $('#ddlExpenseTyrePurchase').val('');
        $('#ddlExpenseTyrePurchase').material_select();
        $('#ddlExpenseReregister').val('');
        $('#ddlExpenseReregister').material_select();
        $('#ddlExpenseBatteryPurchase').val('');
        $('#ddlExpenseBatteryPurchase').material_select();
        $('#ddlExpenseFuelBill').val('');
        $('#ddlExpenseFuelBill').material_select();
        $('#ddlExpenseTaxiPayments').val('');
        $('#ddlExpenseTaxiPayments').material_select();
        $('#ddlExpenseAutoPayments').val('');
        $('#ddlExpenseAutoPayments').material_select();
        $('#ddlExpenseAccidentAdvance').val('');
        $('#ddlExpenseAccidentAdvance').material_select();
        $('#ddlExpenseMaintenance').val('');
        $('#ddlExpenseMaintenance').material_select();
        $('#ddlInsuranceGSTRate').val('');
        $('#ddlInsuranceGSTRate').material_select();
        $('#ddlInsuranceCgstRate').val('');
        $('#ddlInsuranceCgstRate').material_select();
        $('#ddlInsuranceSgstRate').val('');
        $('#ddlInsuranceSgstRate').material_select();
        $('#ddlInsuranceIgstRate').val('');
        $('#ddlInsuranceIgstRate').material_select();
        $('#ddlInsuranceCessRate').val('');
        $('#ddlInsuranceCessRate').material_select();

        $('#ddlTyreGstRate').val('');
        $('#ddlTyreGstRate').material_select();
        $('#ddlTyreCgstRate').val('');
        $('#ddlTyreCgstRate').material_select();
        $('#ddlTyreSgstRate').val('');
        $('#ddlTyreSgstRate').material_select();
        $('#ddlTyreIgstRate').val('');
        $('#ddlTyreIgstRate').material_select();
        $('#ddlTyreCessRate').val('');
        $('#ddlTyreCessRate').material_select();

        $('#ddlBatteryGstRate').val('');
        $('#ddlBatteryGstRate').material_select();
        $('#ddlBatteryCgstRate').val('');
        $('#ddlBatteryCgstRate').material_select();
        $('#ddlBatterySgstRate').val('');
        $('#ddlBatterySgstRate').material_select();
        $('#ddlBatteryIgstRate').val('');
        $('#ddlBatteryIgstRate').material_select();
        $('#ddlBatteryCessRate').val('');
        $('#ddlBatteryCessRate').material_select();

        $('#ddlTaxGstRate').val('');
        $('#ddlTaxGstRate').material_select();
        $('#ddlTaxCgstRate').val('');
        $('#ddlTaxCgstRate').material_select();
        $('#ddlTaxSgstRate').val('');
        $('#ddlTaxSgstRate').material_select();
        $('#ddlTaxIgstRate').val('');
        $('#ddlTaxIgstRate').material_select();
        $('#ddlTaxCessRate').val('');
        $('#ddlTaxCessRate').material_select();

        $('#ddlPollutionGstRate').val('');
        $('#ddlPollutionGstRate').material_select();
        $('#ddlPollutionCgstRate').val('');
        $('#ddlPollutionCgstRate').material_select();
        $('#ddlPollutionSgstRate').val('');
        $('#ddlPollutionSgstRate').material_select();
        $('#ddlPollutionIgstRate').val('');
        $('#ddlPollutionIgstRate').material_select();
        $('#ddlPollutionCessRate').val('');
        $('#ddlPollutionCessRate').material_select();

        $('#ddlPermitGstRate').val('');
        $('#ddlPermitGstRate').material_select();
        $('#ddlPermitCgstRate').val('');
        $('#ddlPermitCgstRate').material_select();
        $('#ddlPermitSgstRate').val('');
        $('#ddlPermitSgstRate').material_select();
        $('#ddlPermitIgstRate').val('');
        $('#ddlPermitIgstRate').material_select();
        $('#ddlPermitCessRate').val('');
        $('#ddlPermitCessRate').material_select();

        $('#ddlTestingGstRate').val('');
        $('#ddlTestingGstRate').material_select();
        $('#ddlTestingCgstRate').val('');
        $('#ddlTestingCgstRate').material_select();
        $('#ddlTestingSgstRate').val('');
        $('#ddlTestingSgstRate').material_select();
        $('#ddlTestingIgstRate').val('');
        $('#ddlTestingIgstRate').material_select();
        $('#ddlTestingCessRate').val('');
        $('#ddlTestingCessRate').material_select();

        $('#ddlServiceGstRate').val('');
        $('#ddlServiceGstRate').material_select();
        $('#ddlServiceCgstRate').val('');
        $('#ddlServiceCgstRate').material_select();
        $('#ddlServiceSgstRate').val('');
        $('#ddlServiceSgstRate').material_select();
        $('#ddlServiceIgstRate').val('');
        $('#ddlServiceIgstRate').material_select();
        $('#ddlServiceCessRate').val('');
        $('#ddlServiceCessRate').material_select();

        $('#ddlFuelOilGstRate').val('');
        $('#ddlFuelOilGstRate').material_select();
        $('#ddlFuelOilCgstRate').val('');
        $('#ddlFuelOilCgstRate').material_select();
        $('#ddlFuelOilSgstRate').val('');
        $('#ddlFuelOilSgstRate').material_select();
        $('#ddlFuelOilIgstRate').val('');
        $('#ddlFuelOilIgstRate').material_select();
        $('#ddlFuelOilCessRate').val('');
        $('#ddlFuelOilCessRate').material_select();

        $('#ddlTaxiGstRate').val('');
        $('#ddlTaxiGstRate').material_select();
        $('#ddlTaxiCgstRate').val('');
        $('#ddlTaxiCgstRate').material_select();
        $('#ddlTaxiSgstRate').val('');
        $('#ddlTaxiSgstRate').material_select();
        $('#ddlTaxiIgstRate').val('');
        $('#ddlTaxiIgstRate').material_select();
        $('#ddlTaxiCessRate').val('');
        $('#ddlTaxiCessRate').material_select();

        $('#ddlAutoGstRate').val('');
        $('#ddlAutoGstRate').material_select();
        $('#ddlAutoCgstRate').val('');
        $('#ddlAutoCgstRate').material_select();
        $('#ddlAutoSgstRate').val('');
        $('#ddlAutoSgstRate').material_select();
        $('#ddltAutoIgstRate').val('');
        $('#ddltAutoIgstRate').material_select();
        $('#ddlAutoCessRate').val('');
        $('#ddlAutoCessRate').material_select();


        $('#ddlAccidentGstRate').val('');
        $('#ddlAccidentGstRate').material_select();
        $('#ddlAccidentCgstRate').val('');
        $('#ddlAccidentCgstRate').material_select();
        $('#ddlAccidentSgstRate').val('');
        $('#ddlAccidentSgstRate').material_select();
        $('#ddlAccidentIgstRate').val('');
        $('#ddlAccidentIgstRate').material_select();
        $('#ddlAccidentCessRate').val('');
        $('#ddlAccidentCessRate').material_select();


    }

    function BindRates(UnitID) {
        $.ajax({
            type: "POST",
            url: "../GeneralSetup/BindRates",
            data: { UnitID: UnitID },
            success: function (data) {

                bindLookups(data);

                //general setup
                if (data.GeneralSetUpLst.length > 0) {
                    $("#hdnSetupID").val(data.GeneralSetUpLst[0]["SetupID"]);
                    if (data.GeneralSetUpLst[0]["FuelRateDailyUpdate"] == 1) {
                        $("#chkDailyUpdate").prop("checked", true);
                    }
                    else {
                        $("#chkDailyUpdate").prop("checked", false);
                    }
                    bindGeneralSetup(data.GeneralSetUpLst);
                }
                else {
                    $("#hdnSetupID").val(0);
                }

                //Fuel rates
                if (data.FuelTypeRates.length > 0) {
                    //$("#hdnEffectivedateFuel").val(data.FuelTypeRates[0]["EffectiveDateString"]);
                    $("#txtEffectiveDateFuel").val(data.FuelTypeRates[0]["EffectiveDateString"]);
                    //                    $("#txtEffectiveDateFuel").datepicker({ dateFormat: "yy/mm/dd" }).datepicker("setDate", new Date());
                    bindFuelRates(data.FuelTypeRates);
                }
                else {
                    bindFuelRates([]);
                }

                //Overtime rates

                if (data.OvertimeRates.length > 0) {
                    $("#txtEffectiveDateOvertime").datepicker({ dateFormat: "yy/mm/dd" }).datepicker("setDate", new Date());
                    //$("#txtEffectiveDateOvertime").val(data.OvertimeRates[0]["EffectiveDateString"]);
                    var i;
                    for (i = 0; i < data.OvertimeRates.length; i++) {
                        if (data.OvertimeRates[i]["EffectiveDateString"] != null && data.OvertimeRates[i]["EffectiveDateString"] != "") {
                            $("#txtEffectiveDateOvertime").val(data.OvertimeRates[i]["EffectiveDateString"]);
                            break;
                        }
                    }


                    bindOvertimeRates(data.OvertimeRates);
                }
                else {
                    bindOvertimeRates([]);
                }

                //Dayoff rates

                if (data.DayOffRates.length > 0) {
                    //$("#txtEffectiveDateDayOff").val(data.DayOffRates[0]["EffectiveDateString"]);
                    $("#txtEffectiveDateDayOff").datepicker({ dateFormat: "yy/mm/dd" }).datepicker("setDate", new Date());
                    bindDayOffRates(data.DayOffRates);
                }
                else {
                    bindDayOffRates([]);
                }

                //Allowance rates

                if (data.AllowanceRates.length > 0) {
                    //$("#txtEffectiveDateAllowance").val(data.AllowanceRates[0]["EffectiveDateString"]);
                    $("#txtEffectiveDateAllowance").datepicker({ dateFormat: "yy/mm/dd" }).datepicker("setDate", new Date());
                    bindAllowanceRates(data.AllowanceRates);
                }
                else {
                    bindAllowanceRates([]);
                }

                //Taxi rates
                if (data.TaxiRatesList.length > 0) {
                    $("#txtEffectiveDatetaxiRate").val(data.TaxiRatesList[0]["EffectiveDateString"]);
                    bindTaxiRates(data.TaxiRatesList);
                }
                else {
                    bindTaxiRates([]);
                }

                //

                ////mail setup
                //if (data.LotusEmployeeList.length > 0) {
                //    bindLotusEmployee(data.LotusEmployeeList);
                //}
                //else if (data.LotusFrontOfficeList.length > 0) {
                //    bindLotusFrontOffice(data.LotusFrontOfficeList);
                //}

                LoadModels(UnitID);

            }

        });
    }

    function BindUnits() {
        $.ajax({
            type: "POST",
            url: "../GeneralSetup/BindUnits",
            success: function (data) {
                if (data.length > 0) {
                    //binding unit list
                    $("#ddlUnits").html("");
                    $("#ddlUnits").append('<option value="">---- Select ----</option>');
                    $('#ddlUnits').material_select();
                    $('#ddlUnits').find('option').remove();
                    var html = '<option value="">' + "---- Select ----" + '</option>';
                    $.each(data, function (i, val) {
                        html = html + '<option value="' +
                            val.UnitID + '">' + val.Unit + '</option>';
                    });
                    $('#ddlUnits').append(html);
                    $('#ddlUnits').material_select();


                    $("#ddlUnitsEmployee").html("");
                    $("#ddlUnitsEmployee").append('<option value="">---- Select ----</option>');
                    $('#ddlUnitsEmployee').material_select();
                    $('#ddlUnitsEmployee').find('option').remove();
                    var html = '<option value="">' + "---- Select ----" + '</option>';
                    $.each(data, function (i, val) {
                        html = html + '<option value="' +
                            val.UnitID + '">' + val.Unit + '</option>';
                    });
                    $('#ddlUnitsEmployee').append(html);
                    $('#ddlUnitsEmployee').material_select();
                }
            }
        });
    }

    function LoadModels(UnitID) {
        $.ajax({
            type: "POST",
            url: "../GeneralSetup/BindModels",
            data: { UnitID: UnitID },
            success: function (data) {
                if (data.length > 0) {
                    //Binding tax models
                    $("#ddlTaxiModels").html("");
                    $("#ddlTaxiModels").append('<option value="">---- Select ----</option>');
                    $('#ddlTaxiModels').material_select();
                    $('#ddlTaxiModels').find('option').remove();
                    var html = '<option value="">' + "---- Select ----" + '</option>';
                    $.each(data, function (i, val) {
                        html = html + '<option value="' +
                            val.ModelID + '">' + val.ModelName + '</option>';
                    });
                    $('#ddlTaxiModels').append(html);
                    $('#ddlTaxiModels').material_select();
                }
            }
        });
    }

    function bindGeneralSetup(data) {
        if (data.length > 0) {
            $("#hdnSetupID").val(data[0].SetupID);
            $("#ddlTax").val(data[0].TaxVendorID);
            $("#ddlTax").material_select();
            $("#ddlPollution").val(data[0].PollutionVendorID);
            $("#ddlPollution").material_select();
            $("#ddlTesting").val(data[0].TestingVendorID);
            $("#ddlTesting").material_select();
            $("#ddlAutoSlip").val(data[0].AutoVendorID);
            $("#ddlAutoSlip").material_select();
            $("#ddlTaxiSlip").val(data[0].TaxiVendorID);
            $("#ddlTaxiSlip").material_select();
            $("#ddlExpenseInsurance").val(data[0].InsuranceDebitAccountID);
            $("#ddlExpenseInsurance").material_select();
            $("#ddlExpenseTax").val(data[0].TaxDebitAccountID);
            $("#ddlExpenseTax").material_select();
            $("#ddlExpensePollution").val(data[0].PollutionDebitAccountID);
            $("#ddlExpensePollution").material_select();
            $("#ddlExpenseTesting").val(data[0].TestingVendorID);
            $("#ddlExpenseTesting").material_select();
            $("#ddlExpenseService").val(data[0].ServiceDebitAccountID);
            $("#ddlExpenseService").material_select();
            $("#ddlExpenseTyrePurchase").val(data[0].TyrePurchaseDebitAccountID);
            $("#ddlExpenseTyrePurchase").material_select();
            $("#ddlExpenseReregister").val(data[0].ReregisterDebitAccountID);
            $("#ddlExpenseReregister").material_select();
            $("#ddlExpenseBatteryPurchase").val(data[0].BatteryDebitAccountID);
            $("#ddlExpenseBatteryPurchase").material_select();
            $("#ddlExpenseFuelBill").val(data[0].FuelDebitAccountID);
            $("#ddlExpenseFuelBill").material_select();
            $("#ddlExpenseTaxiPayments").val(data[0].TaxiDebitAccountID);
            $("#ddlExpenseTaxiPayments").material_select();
            $("#ddlExpenseAutoPayments").val(data[0].AutoDebitAccountID);
            $("#ddlExpenseAutoPayments").material_select();
            $("#ddlExpenseAccidentAdvance").val(data[0].AdvanceDebitAccountID);
            $("#ddlExpenseAccidentAdvance").material_select();
            $("#ddlExpenseMaintenance").val(data[0].MaintenanceDebitAccountID);
            $("#ddlExpenseMaintenance").material_select();

            // GST link - Insurance
            $("#ddlInsuranceGSTRate").val(data[0].InsuranceGSTRate);
            $("#ddlInsuranceGSTRate").material_select();


            var htmlCGST = '';
            if (data[0].InsuranceCGSTRate != "" && data[0].InsuranceCGSTRate != null) {


                var key = data[0].InsuranceCGSTRate;
                var value = data[0].InsuranceCGSTRate;
                htmlCGST = htmlCGST + '<option value=' + key + '>' + value + '</option>';

            }
            else {
                var key = 0;
                var value = 0;
                htmlCGST = htmlCGST + '<option value = "" > ----- Select----- </option >';

            }
            $("#ddlInsuranceCgstRate").html(htmlCGST);
            $("#ddlInsuranceCgstRate").material_select();

            var htmlSGST = '';
            if (data[0].InsuranceSGSTRate != "" && data[0].InsuranceSGSTRate != null) {


                var key = data[0].InsuranceSGSTRate;
                var value = data[0].InsuranceSGSTRate;
                htmlSGST = htmlSGST + '<option value=' + key + '>' + value + '</option>';

            }
            else {
                var key = 0;
                var value = 0;
                htmlSGST = htmlSGST + '<option value="">-----Select----- </option>';
            }
            $("#ddlInsuranceSgstRate").html(htmlSGST);
            $("#ddlInsuranceSgstRate").material_select();

            var htmlIGST = '';
            if (data[0].InsuranceIGSTRate != "" && data[0].InsuranceIGSTRate != null) {

                var key = data[0].InsuranceIGSTRate;
                var value = data[0].InsuranceIGSTRate;
                htmlIGST = htmlIGST + '<option value=' + key + '>' + value + '</option>';

            }
            else {
                var key = 0;
                var value = 0;
                htmlIGST = htmlIGST + '<option value="">-----Select----- </option>';
            }
            $("#ddlInsuranceIgstRate").html(htmlIGST);
            $("#ddlInsuranceIgstRate").material_select();

            var htmlCESS = '';
            if (data[0].InsuranceCESSRate != "" && data[0].InsuranceCESSRate != null) {


                var key = data[0].InsuranceCESSRate;
                var value = data[0].InsuranceCESSRate;
                htmlCESS = htmlCESS + '<option value=' + key + '>' + value + '</option>';

            }
            else {
                var key = 0;
                var value = 0;
                htmlCESS = htmlCESS + '<option value="">-----Select----- </option>';
            }
            $("#ddlInsuranceCessRate").html(htmlCESS);
            $("#ddlInsuranceCessRate").material_select();


            // GST link - Tyre
            $("#ddlTyreGstRate").val(data[0].TyreGSTRate);
            $("#ddlTyreGstRate").material_select();


            var htmlCGST = '';
            if (data[0].TyreCGSTRate != "" && data[0].TyreCGSTRate != null) {

                var key = data[0].TyreCGSTRate;
                var value = data[0].TyreCGSTRate;
                htmlCGST = htmlCGST + '<option value=' + key + '>' + value + '</option>';

            }
            else {
                var key = 0;
                var value = 0;
                htmlCGST = htmlCGST + '<option value = "" > ----- Select----- </option >';

            }
            $("#ddlTyreCgstRate").html(htmlCGST);
            $("#ddlTyreCgstRate").material_select();

            var htmlSGST = '';
            if (data[0].TyreSGSTRate != "" && data[0].TyreSGSTRate != null) {


                var key = data[0].TyreSGSTRate;
                var value = data[0].TyreSGSTRate;
                htmlSGST = htmlSGST + '<option value=' + key + '>' + value + '</option>';

            }
            else {
                var key = 0;
                var value = 0;
                htmlSGST = htmlSGST + '<option value="">-----Select----- </option>';
            }
            $("#ddlTyreSgstRate").html(htmlSGST);
            $("#ddlTyreSgstRate").material_select();

            var htmlIGST = '';
            if (data[0].TyreIGSTRate != "" && data[0].TyreIGSTRate != null) {

                var key = data[0].TyreIGSTRate;
                var value = data[0].TyreIGSTRate;
                htmlIGST = htmlIGST + '<option value=' + key + '>' + value + '</option>';

            }
            else {
                var key = 0;
                var value = 0;
                htmlIGST = htmlIGST + '<option value="">-----Select----- </option>';
            }
            $("#ddlTyreIgstRate").html(htmlIGST);
            $("#ddlTyreIgstRate").material_select();

            var htmlCESS = '';
            if (data[0].TyreCESSRate != "" && data[0].TyreCESSRate != null) {


                var key = data[0].TyreCESSRate;
                var value = data[0].TyreCESSRate;
                htmlCESS = htmlCESS + '<option value=' + key + '>' + value + '</option>';

            }
            else {
                var key = 0;
                var value = 0;
                htmlCESS = htmlCESS + '<option value="">-----Select----- </option>';
            }
            $("#ddlTyreCessRate").html(htmlCESS);
            $("#ddlTyreCessRate").material_select();


            // GST link - Battery
            $("#ddlBatteryGstRate").val(data[0].BatteryGSTRate);
            $("#ddlBatteryGstRate").material_select();


            var htmlCGST = '';
            if (data[0].BatteryCGSTRate != "" && data[0].BatteryCGSTRate != null) {

                var key = data[0].BatteryCGSTRate;
                var value = data[0].BatteryCGSTRate;
                htmlCGST = htmlCGST + '<option value=' + key + '>' + value + '</option>';

            }
            else {
                var key = 0;
                var value = 0;
                htmlCGST = htmlCGST + '<option value = "" > ----- Select----- </option >';

            }
            $("#ddlBatteryCgstRate").html(htmlCGST);
            $("#ddlBatteryCgstRate").material_select();

            var htmlSGST = '';
            if (data[0].BatterySGSTRate != "" && data[0].BatterySGSTRate != null) {
                var key = data[0].BatterySGSTRate;
                var value = data[0].BatterySGSTRate;
                htmlSGST = htmlSGST + '<option value=' + key + '>' + value + '</option>';
            }
            else {
                var key = 0;
                var value = 0;
                htmlSGST = htmlSGST + '<option value="">-----Select----- </option>';
            }
            $("#ddlBatterySgstRate").html(htmlSGST);
            $("#ddlBatterySgstRate").material_select();

            var htmlIGST = '';
            if (data[0].BatteryIGSTRate != "" && data[0].BatteryIGSTRate != null) {

                var key = data[0].BatteryIGSTRate;
                var value = data[0].BatteryIGSTRate;
                htmlIGST = htmlIGST + '<option value=' + key + '>' + value + '</option>';

            }
            else {
                var key = 0;
                var value = 0;
                htmlIGST = htmlIGST + '<option value="">-----Select----- </option>';
            }
            $("#ddlBatteryIgstRate").html(htmlIGST);
            $("#ddlBatteryIgstRate").material_select();

            var htmlCESS = '';
            if (data[0].BatteryCESSRate != "" && data[0].BatteryCESSRate != null) {
                var key = data[0].BatteryCESSRate;
                var value = data[0].BatteryCESSRate;
                htmlCESS = htmlCESS + '<option value=' + key + '>' + value + '</option>';
            }
            else {
                var key = 0;
                var value = 0;
                htmlCESS = htmlCESS + '<option value="">-----Select----- </option>';
            }
            $("#ddlBatteryCessRate").html(htmlCESS);
            $("#ddlBatteryCessRate").material_select();

            // GST link - Tax
            $("#ddlTaxGstRate").val(data[0].TaxGSTRate);
            $("#ddlTaxGstRate").material_select();


            var htmlCGST = '';
            if (data[0].BatteryCGSTRate != "" && data[0].BatteryCGSTRate != null) {

                var key = data[0].TaxCGSTRate;
                var value = data[0].TaxCGSTRate;
                htmlCGST = htmlCGST + '<option value=' + key + '>' + value + '</option>';

            }
            else {
                var key = 0;
                var value = 0;
                htmlCGST = htmlCGST + '<option value = "" > ----- Select----- </option >';

            }
            $("#ddlTaxCgstRate").html(htmlCGST);
            $("#ddlTaxCgstRate").material_select();

            var htmlSGST = '';
            if (data[0].TaxSGSTRate != "" && data[0].TaxSGSTRate != null) {
                var key = data[0].TaxSGSTRate;
                var value = data[0].TaxSGSTRate;
                htmlSGST = htmlSGST + '<option value=' + key + '>' + value + '</option>';
            }
            else {
                var key = 0;
                var value = 0;
                htmlSGST = htmlSGST + '<option value="">-----Select----- </option>';
            }
            $("#ddlTaxSgstRate").html(htmlSGST);
            $("#ddlTaxSgstRate").material_select();

            var htmlIGST = '';
            if (data[0].TaxIGSTRate != "" && data[0].TaxIGSTRate != null) {

                var key = data[0].TaxIGSTRate;
                var value = data[0].TaxIGSTRate
                htmlIGST = htmlIGST + '<option value=' + key + '>' + value + '</option>';

            }
            else {
                var key = 0;
                var value = 0;
                htmlIGST = htmlIGST + '<option value="">-----Select----- </option>';
            }
            $("#ddlTaxIgstRate").html(htmlIGST);
            $("#ddlTaxIgstRate").material_select();

            var htmlCESS = '';
            if (data[0].TaxCESSRate != "" && data[0].TaxCESSRate != null) {
                var key = data[0].TaxCESSRate;
                var value = data[0].TaxCESSRate;
                htmlCESS = htmlCESS + '<option value=' + key + '>' + value + '</option>';
            }
            else {
                var key = 0;
                var value = 0;
                htmlCESS = htmlCESS + '<option value="">-----Select----- </option>';
            }
            $("#ddlTaxCessRate").html(htmlCESS);
            $("#ddlTaxCessRate").material_select();

            // GST link - Pollution
            $("#ddlPollutionGstRate").val(data[0].PollutionGSTRate);
            $("#ddlPollutionGstRate").material_select();


            var htmlCGST = '';
            if (data[0].PollutionCGSTRate != "" && data[0].PollutionCGSTRate != null) {

                var key = data[0].PollutionCGSTRate;
                var value = data[0].PollutionCGSTRate;
                htmlCGST = htmlCGST + '<option value=' + key + '>' + value + '</option>';

            }
            else {
                var key = 0;
                var value = 0;
                htmlCGST = htmlCGST + '<option value = "" > ----- Select----- </option >';

            }
            $("#ddlPollutionCgstRate").html(htmlCGST);
            $("#ddlPollutionCgstRate").material_select();

            var htmlSGST = '';
            if (data[0].PollutionSGSTRate != "" && data[0].PollutionSGSTRate != null) {
                var key = data[0].PollutionSGSTRate;
                var value = data[0].PollutionSGSTRate;
                htmlSGST = htmlSGST + '<option value=' + key + '>' + value + '</option>';
            }
            else {
                var key = 0;
                var value = 0;
                htmlSGST = htmlSGST + '<option value="">-----Select----- </option>';
            }
            $("#ddlPollutionSgstRate").html(htmlSGST);
            $("#ddlPollutionSgstRate").material_select();

            var htmlIGST = '';
            if (data[0].PollutionIGSTRate != "" && data[0].PollutionIGSTRate != null) {

                var key = data[0].PollutionIGSTRate;
                var value = data[0].PollutionIGSTRate;
                htmlIGST = htmlIGST + '<option value=' + key + '>' + value + '</option>';

            }
            else {
                var key = 0;
                var value = 0;
                htmlIGST = htmlIGST + '<option value="">-----Select----- </option>';
            }
            $("#ddlPollutionIgstRate").html(htmlIGST);
            $("#ddlPollutionIgstRate").material_select();

            var htmlCESS = '';
            if (data[0].PollutionCESSRate != "" && data[0].PollutionCESSRate != null) {
                var key = data[0].PollutionCESSRate;
                var value = data[0].PollutionCESSRate;
                htmlCESS = htmlCESS + '<option value=' + key + '>' + value + '</option>';
            }
            else {
                var key = 0;
                var value = 0;
                htmlCESS = htmlCESS + '<option value="">-----Select----- </option>';
            }
            $("#ddlPollutionCessRate").html(htmlCESS);
            $("#ddlPollutionCessRate").material_select();


            // GST link - Permit
            $("#ddlPermitGstRate").val(data[0].PermitGSTRate);
            $("#ddlPermitGstRate").material_select();


            var htmlCGST = '';
            if (data[0].PermitCGSTRate != "" && data[0].PermitCGSTRate != null) {

                var key = data[0].PermitCGSTRate;
                var value = data[0].PermitCGSTRate;
                htmlCGST = htmlCGST + '<option value=' + key + '>' + value + '</option>';

            }
            else {
                var key = 0;
                var value = 0;
                htmlCGST = htmlCGST + '<option value = "" > ----- Select----- </option >';

            }
            $("#ddlPermitCgstRate").html(htmlCGST);
            $("#ddlPermitCgstRate").material_select();

            var htmlSGST = '';
            if (data[0].PermitSGSTRate != "" && data[0].PermitSGSTRate != null) {
                var key = data[0].PermitSGSTRate;
                var value = data[0].PermitSGSTRate;
                htmlSGST = htmlSGST + '<option value=' + key + '>' + value + '</option>';
            }
            else {
                var key = 0;
                var value = 0;
                htmlSGST = htmlSGST + '<option value="">-----Select----- </option>';
            }
            $("#ddlPermitSgstRate").html(htmlSGST);
            $("#ddlPermitSgstRate").material_select();

            var htmlIGST = '';
            if (data[0].PermitIGSTRate != "" && data[0].PermitIGSTRate != null) {

                var key = data[0].PermitIGSTRate;
                var value = data[0].PermitIGSTRate;
                htmlIGST = htmlIGST + '<option value=' + key + '>' + value + '</option>';

            }
            else {
                var key = 0;
                var value = 0;
                htmlIGST = htmlIGST + '<option value="">-----Select----- </option>';
            }
            $("#ddlPermitIgstRate").html(htmlIGST);
            $("#ddlPermitIgstRate").material_select();

            var htmlCESS = '';
            if (data[0].PermitCESSRate != "" && data[0].PermitCESSRate != null) {
                var key = data[0].PermitCESSRate;
                var value = data[0].PermitCESSRate;
                htmlCESS = htmlCESS + '<option value=' + key + '>' + value + '</option>';
            }
            else {
                var key = 0;
                var value = 0;
                htmlCESS = htmlCESS + '<option value="">-----Select----- </option>';
            }
            $("#ddlPermitCessRate").html(htmlCESS);
            $("#ddlPermitCessRate").material_select();

            // GST link - Testing
            $("#ddlTestingGstRate").val(data[0].TestingGSTRate);
            $("#ddlTestingGstRate").material_select();

            var htmlCGST = '';
            if (data[0].TestingCGSTRate != "" && data[0].TestingCGSTRate != null) {

                var key = data[0].TestingCGSTRate;
                var value = data[0].TestingCGSTRate;
                htmlCGST = htmlCGST + '<option value=' + key + '>' + value + '</option>';

            }
            else {
                var key = 0;
                var value = 0;
                htmlCGST = htmlCGST + '<option value = "" > ----- Select----- </option >';

            }
            $("#ddlTestingCgstRate").html(htmlCGST);
            $("#ddlTestingCgstRate").material_select();

            var htmlSGST = '';
            if (data[0].TestingSGSTRate != "" && data[0].TestingSGSTRate != null) {
                var key = data[0].TestingSGSTRate;
                var value = data[0].TestingSGSTRate;
                htmlSGST = htmlSGST + '<option value=' + key + '>' + value + '</option>';
            }
            else {
                var key = 0;
                var value = 0;
                htmlSGST = htmlSGST + '<option value="">-----Select----- </option>';
            }
            $("#ddlTestingSgstRate").html(htmlSGST);
            $("#ddlTestingSgstRate").material_select();

            var htmlIGST = '';
            if (data[0].TestingIGSTRate != "" && data[0].TestingIGSTRate != null) {

                var key = data[0].TestingIGSTRate;
                var value = data[0].TestingIGSTRate;
                htmlIGST = htmlIGST + '<option value=' + key + '>' + value + '</option>';

            }
            else {
                var key = 0;
                var value = 0;
                htmlIGST = htmlIGST + '<option value="">-----Select----- </option>';
            }
            $("#ddlTestingIgstRate").html(htmlIGST);
            $("#ddlTestingIgstRate").material_select();

            var htmlCESS = '';
            if (data[0].TestingCESSRate != "" && data[0].TestingCESSRate != null) {
                var key = data[0].TestingCESSRate;
                var value = data[0].TestingCESSRate;
                htmlCESS = htmlCESS + '<option value=' + key + '>' + value + '</option>';
            }
            else {
                var key = 0;
                var value = 0;
                htmlCESS = htmlCESS + '<option value="">-----Select----- </option>';
            }
            $("#ddlTestingCessRate").html(htmlCESS);
            $("#ddlTestingCessRate").material_select();

            // GST link - Service
            $("#ddlServiceGstRate").val(data[0].ServiceGSTRate);
            $("#ddlServiceGstRate").material_select();

            var htmlCGST = '';
            if (data[0].ServiceCGSTRate != "" && data[0].ServiceCGSTRate != null) {

                var key = data[0].ServiceCGSTRate;
                var value = data[0].ServiceCGSTRate;
                htmlCGST = htmlCGST + '<option value=' + key + '>' + value + '</option>';

            }
            else {
                var key = 0;
                var value = 0;
                htmlCGST = htmlCGST + '<option value = "" > ----- Select----- </option >';

            }
            $("#ddlServiceCgstRate").html(htmlCGST);
            $("#ddlServiceCgstRate").material_select();

            var htmlSGST = '';
            if (data[0].ServiceSGSTRate != "" && data[0].ServiceSGSTRate != null) {
                var key = data[0].ServiceSGSTRate;
                var value = data[0].ServiceSGSTRate;
                htmlSGST = htmlSGST + '<option value=' + key + '>' + value + '</option>';
            }
            else {
                var key = 0;
                var value = 0;
                htmlSGST = htmlSGST + '<option value="">-----Select----- </option>';
            }
            $("#ddlServiceSgstRate").html(htmlSGST);
            $("#ddlServiceSgstRate").material_select();

            var htmlIGST = '';
            if (data[0].ServiceIGSTRate != "" && data[0].ServiceIGSTRate != null) {

                var key = data[0].ServiceIGSTRate;
                var value = data[0].ServiceIGSTRate;
                htmlIGST = htmlIGST + '<option value=' + key + '>' + value + '</option>';

            }
            else {
                var key = 0;
                var value = 0;
                htmlIGST = htmlIGST + '<option value="">-----Select----- </option>';
            }
            $("#ddlServiceIgstRate").html(htmlIGST);
            $("#ddlServiceIgstRate").material_select();

            var htmlCESS = '';
            if (data[0].ServiceCESSRate != "" && data[0].ServiceCESSRate != null) {
                var key = data[0].ServiceCESSRate;
                var value = data[0].ServiceCESSRate;
                htmlCESS = htmlCESS + '<option value=' + key + '>' + value + '</option>';
            }
            else {
                var key = 0;
                var value = 0;
                htmlCESS = htmlCESS + '<option value="">-----Select----- </option>';
            }
            $("#ddlServiceCessRate").html(htmlCESS);
            $("#ddlServiceCessRate").material_select();

            // GST link - Fuel oil
            $("#ddlFuelOilGstRate").val(data[0].FuelOilGSTRate);
            $("#ddlFuelOilGstRate").material_select();

            var htmlCGST = '';
            if (data[0].FuelOilCGSTRate != "" && data[0].FuelOilCGSTRate != null) {

                var key = data[0].FuelOilCGSTRate;
                var value = data[0].FuelOilCGSTRate;
                htmlCGST = htmlCGST + '<option value=' + key + '>' + value + '</option>';

            }
            else {
                var key = 0;
                var value = 0;
                htmlCGST = htmlCGST + '<option value = "" > ----- Select----- </option >';

            }
            $("#ddlFuelOilCgstRate").html(htmlCGST);
            $("#ddlFuelOilCgstRate").material_select();

            var htmlSGST = '';
            if (data[0].FuelOilSGSTRate != "" && data[0].FuelOilSGSTRate != null) {
                var key = data[0].FuelOilSGSTRate;
                var value = data[0].FuelOilSGSTRate;
                htmlSGST = htmlSGST + '<option value=' + key + '>' + value + '</option>';
            }
            else {
                var key = 0;
                var value = 0;
                htmlSGST = htmlSGST + '<option value="">-----Select----- </option>';
            }
            $("#ddlFuelOilSgstRate").html(htmlSGST);
            $("#ddlFuelOilSgstRate").material_select();

            var htmlIGST = '';
            if (data[0].FuelOilIGSTRate != "" && data[0].FuelOilIGSTRate != null) {

                var key = data[0].FuelOilIGSTRate;
                var value = data[0].FuelOilIGSTRate;
                htmlIGST = htmlIGST + '<option value=' + key + '>' + value + '</option>';

            }
            else {
                var key = 0;
                var value = 0;
                htmlIGST = htmlIGST + '<option value="">-----Select----- </option>';
            }
            $("#ddlFuelOilIgstRate").html(htmlIGST);
            $("#ddlFuelOilIgstRate").material_select();

            var htmlCESS = '';
            if (data[0].FuelOilCESSRate != "" && data[0].FuelOilCESSRate != null) {
                var key = data[0].FuelOilCESSRate;
                var value = data[0].FuelOilCESSRate;
                htmlCESS = htmlCESS + '<option value=' + key + '>' + value + '</option>';
            }
            else {
                var key = 0;
                var value = 0;
                htmlCESS = htmlCESS + '<option value="">-----Select----- </option>';
            }
            $("#ddlFuelOilCessRate").html(htmlCESS);
            $("#ddlFuelOilCessRate").material_select();

            // GST link - Taxi
            $("#ddlTaxiGstRate").val(data[0].TaxiGSTRate);
            $("#ddlTaxiGstRate").material_select();

            var htmlCGST = '';
            if (data[0].TaxiCGSTRate != "" && data[0].TaxiCGSTRate != null) {

                var key = data[0].TaxiCGSTRate;
                var value = data[0].TaxiCGSTRate;
                htmlCGST = htmlCGST + '<option value=' + key + '>' + value + '</option>';

            }
            else {
                var key = 0;
                var value = 0;
                htmlCGST = htmlCGST + '<option value = "" > ----- Select----- </option >';

            }
            $("#ddlTaxiCgstRate").html(htmlCGST);
            $("#ddlTaxiCgstRate").material_select();

            var htmlSGST = '';
            if (data[0].TaxiSGSTRate != "" && data[0].TaxiSGSTRate != null) {
                var key = data[0].TaxiSGSTRate;
                var value = data[0].TaxiSGSTRate;
                htmlSGST = htmlSGST + '<option value=' + key + '>' + value + '</option>';
            }
            else {
                var key = 0;
                var value = 0;
                htmlSGST = htmlSGST + '<option value="">-----Select----- </option>';
            }
            $("#ddlTaxiSgstRate").html(htmlSGST);
            $("#ddlTaxiSgstRate").material_select();

            var htmlIGST = '';
            if (data[0].TaxiIGSTRate != "" && data[0].TaxiIGSTRate != null) {

                var key = data[0].TaxiIGSTRate;
                var value = data[0].TaxiIGSTRate;
                htmlIGST = htmlIGST + '<option value=' + key + '>' + value + '</option>';

            }
            else {
                var key = 0;
                var value = 0;
                htmlIGST = htmlIGST + '<option value="">-----Select----- </option>';
            }
            $("#ddlTaxiIgstRate").html(htmlIGST);
            $("#ddlTaxiIgstRate").material_select();

            var htmlCESS = '';
            if (data[0].TaxiCESSRate != "" && data[0].TaxiCESSRate != null) {
                var key = data[0].TaxiCESSRate;
                var value = data[0].TaxiCESSRate;
                htmlCESS = htmlCESS + '<option value=' + key + '>' + value + '</option>';
            }
            else {
                var key = 0;
                var value = 0;
                htmlCESS = htmlCESS + '<option value="">-----Select----- </option>';
            }
            $("#ddlTaxiCessRate").html(htmlCESS);
            $("#ddlTaxiCessRate").material_select();

            // GST link - Auto
            $("#ddlAutoGstRate").val(data[0].AutoGSTRate);
            $("#ddlAutoGstRate").material_select();

            var htmlCGST = '';
            if (data[0].AutoCGSTRate != "" && data[0].AutoCGSTRate != null) {

                var key = data[0].AutoCGSTRate;
                var value = data[0].AutoCGSTRate;
                htmlCGST = htmlCGST + '<option value=' + key + '>' + value + '</option>';
            }
            else {
                var key = 0;
                var value = 0;
                htmlCGST = htmlCGST + '<option value = "" > ----- Select----- </option >';

            }
            $("#ddlAutoCgstRate").html(htmlCGST);
            $("#ddlAutoCgstRate").material_select();

            var htmlSGST = '';
            if (data[0].AutoSGSTRate != "" && data[0].AutoSGSTRate != null) {
                var key = data[0].AutoSGSTRate;
                var value = data[0].AutoSGSTRate;
                htmlSGST = htmlSGST + '<option value=' + key + '>' + value + '</option>';
            }
            else {
                var key = 0;
                var value = 0;
                htmlSGST = htmlSGST + '<option value="">-----Select----- </option>';
            }
            $("#ddlAutoSgstRate").html(htmlSGST);
            $("#ddlAutoSgstRate").material_select();

            var htmlIGST = '';
            if (data[0].AutoIGSTRate != "" && data[0].AutoIGSTRate != null) {

                var key = data[0].AutoIGSTRate;
                var value = data[0].AutoIGSTRate;
                htmlIGST = htmlIGST + '<option value=' + key + '>' + value + '</option>';

            }
            else {
                var key = 0;
                var value = 0;
                htmlIGST = htmlIGST + '<option value="">-----Select----- </option>';
            }
            $("#ddltAutoIgstRate").html(htmlIGST);
            $("#ddltAutoIgstRate").material_select();

            var htmlCESS = '';
            if (data[0].AutoCESSRate != "" && data[0].AutoCESSRate != null) {
                var key = data[0].AutoCESSRate;
                var value = data[0].AutoCESSRate;
                htmlCESS = htmlCESS + '<option value=' + key + '>' + value + '</option>';
            }
            else {
                var key = 0;
                var value = 0;
                htmlCESS = htmlCESS + '<option value="">-----Select----- </option>';
            }
            $("#ddlAutoCessRate").html(htmlCESS);
            $("#ddlAutoCessRate").material_select();

            // GST link - Accident
            $("#ddlAccidentGstRate").val(data[0].AccidentGSTRate);
            $("#ddlAccidentGstRate").material_select();

            var htmlCGST = '';
            if (data[0].AccidentCGSTRate != "" && data[0].AccidentCGSTRate != null) {

                var key = data[0].AccidentCGSTRate;
                var value = data[0].AccidentCGSTRate;
                htmlCGST = htmlCGST + '<option value=' + key + '>' + value + '</option>';
            }
            else {
                var key = 0;
                var value = 0;
                htmlCGST = htmlCGST + '<option value = "" > ----- Select----- </option >';

            }
            $("#ddlAccidentCgstRate").html(htmlCGST);
            $("#ddlAccidentCgstRate").material_select();

            var htmlSGST = '';
            if (data[0].AccidentSGSTRate != "" && data[0].AccidentSGSTRate != null) {
                var key = data[0].AccidentSGSTRate;
                var value = data[0].AccidentSGSTRate;
                htmlSGST = htmlSGST + '<option value=' + key + '>' + value + '</option>';
            }
            else {
                var key = 0;
                var value = 0;
                htmlSGST = htmlSGST + '<option value="">-----Select----- </option>';
            }
            $("#ddlAccidentSgstRate").html(htmlSGST);
            $("#ddlAccidentSgstRate").material_select();

            var htmlIGST = '';
            if (data[0].AccidentIGSTRate != "" && data[0].AccidentIGSTRate != null) {

                var key = data[0].AccidentIGSTRate;
                var value = data[0].AccidentIGSTRate;
                htmlIGST = htmlIGST + '<option value=' + key + '>' + value + '</option>';

            }
            else {
                var key = 0;
                var value = 0;
                htmlIGST = htmlIGST + '<option value="">-----Select----- </option>';
            }
            $("#ddlAccidentIgstRate").html(htmlIGST);
            $("#ddlAccidentIgstRate").material_select();

            var htmlCESS = '';
            if (data[0].AccidentCESSRate != "" && data[0].AccidentCESSRate != null) {
                var key = data[0].AccidentCESSRate;
                var value = data[0].AccidentCESSRate;
                htmlCESS = htmlCESS + '<option value=' + key + '>' + value + '</option>';
            }
            else {
                var key = 0;
                var value = 0;
                htmlCESS = htmlCESS + '<option value="">-----Select----- </option>';
            }
            $("#ddlAccidentCessRate").html(htmlCESS);
            $("#ddlAccidentCessRate").material_select();


            // GST link - Maintenance
            $("#ddlMaintenanceGstRate").val(data[0].MaintenanceGSTRate);
            $("#ddlMaintenanceGstRate").material_select();

            var htmlCGST = '';
            if (data[0].MaintenanceCGSTRate != "" && data[0].MaintenanceCGSTRate != null) {

                var key = data[0].MaintenanceCGSTRate;
                var value = data[0].MaintenanceCGSTRate;
                htmlCGST = htmlCGST + '<option value=' + key + '>' + value + '</option>';
            }
            else {
                var key = 0;
                var value = 0;
                htmlCGST = htmlCGST + '<option value = "" > ----- Select----- </option >';

            }
            $("#ddlMaintenanceCgstRate").html(htmlCGST);
            $("#ddlMaintenanceCgstRate").material_select();

            var htmlSGST = '';
            if (data[0].MaintenanceSGSTRate != "" && data[0].MaintenanceSGSTRate != null) {
                var key = data[0].MaintenanceSGSTRate;
                var value = data[0].MaintenanceSGSTRate;
                htmlSGST = htmlSGST + '<option value=' + key + '>' + value + '</option>';
            }
            else {
                var key = 0;
                var value = 0;
                htmlSGST = htmlSGST + '<option value="">-----Select----- </option>';
            }
            $("#ddlMaintenanceSgstRate").html(htmlSGST);
            $("#ddlMaintenanceSgstRate").material_select();

            var htmlIGST = '';
            if (data[0].MaintenanceIGSTRate != "" && data[0].MaintenanceIGSTRate != null) {

                var key = data[0].MaintenanceIGSTRate;
                var value = data[0].MaintenanceIGSTRate;
                htmlIGST = htmlIGST + '<option value=' + key + '>' + value + '</option>';

            }
            else {
                var key = 0;
                var value = 0;
                htmlIGST = htmlIGST + '<option value="">-----Select----- </option>';
            }
            $("#ddlMaintenanceIgstRate").html(htmlIGST);
            $("#ddlMaintenanceIgstRate").material_select();

            var htmlCESS = '';
            if (data[0].MaintenanceCESSRate != "" && data[0].MaintenanceCESSRate != null) {
                var key = data[0].MaintenanceCESSRate;
                var value = data[0].MaintenanceCESSRate;
                htmlCESS = htmlCESS + '<option value=' + key + '>' + value + '</option>';
            }
            else {
                var key = 0;
                var value = 0;
                htmlCESS = htmlCESS + '<option value="">-----Select----- </option>';
            }
            $("#ddlMaintenanceCessRate").html(htmlCESS);
            $("#ddlMaintenanceCessRate").material_select();



        }
    }

    function bindLotusEmployee(data) {
        if (data.length > 0) {
            $('#txtEmployeeCode').val(data[0].EmployeeCode);
            $('#txtEmployeeID').val(data[0].EmployeeID);
            $('#txtEmployeeName').val(data[0].EmployeeName);
            $('#txtMailID').val(data[0].LotusMail);
            $('#txtMobileNo').val(data[0].MobileNumber);
            $('#txtBccMail').val(data[0].BCCMail1);
            $('#txtCcMail1').val(data[0].CCMail1);
            $('#txtCcMail2').val(data[0].CCMail2);
            $('#txtCcMail3').val(data[0].CCMail3);
        }
        else {
            $('#txtEmployeeCode').val('');
            $('#txtEmployeeID').val('');
            $('#txtEmployeeName').val('');
            $('#txtMailID').val('');
            $('#txtMobileNo').val('');
            $('#txtBccMail').val('');
            $('#txtCcMail1').val('');
            $('#txtCcMail2').val('');
            $('#txtCcMail3').val('');
        }
    }

    function bindLotusFrontOffice(data) {
        if (data.length > 0) {
            $('#txtFrontOfficeMailID').val(data[0].FrontOfficeLotusID);
            $('#txtDepartmentMailID').val(data[0].ExecutiveLotusID1);
            $('#txtExecutiveMailID').val(data[0].ExecutiveLotusID2);
        }
        else {
            $('#txtFrontOfficeMailID').val('');
            $('#txtDepartmentMailID').val('');
            $('#txtExecutiveMailID').val('');
        }
    }

    function bindLookups(data) {
        //binding tax
        $("#ddlTax").html("");
        $("#ddlTax").append('<option value="">---- Select ----</option>');
        $('#ddlTax').material_select();
        $('#ddlTax').find('option').remove();
        var html = '<option value="">' + "---- Select ----" + '</option>';
        $.each(data.TaxList, function (i, val) {
            html = html + '<option value="' +
                val.VendorID + '">' + val.VendorName1 + '</option>';
        });
        $('#ddlTax').append(html);
        $('#ddlTax').material_select();

        //binding pollution
        $("#ddlPollution").html("");
        $("#ddlPollution").append('<option value="">---- Select ----</option>');
        $('#ddlPollution').material_select();
        $('#ddlPollution').find('option').remove();
        var html = '<option value="">' + "---- Select ----" + '</option>';
        $.each(data.PollutionList, function (i, val) {
            html = html + '<option value="' +
                val.VendorID + '">' + val.VendorName1 + '</option>';
        });
        $('#ddlPollution').append(html);
        $('#ddlPollution').material_select();

        //binding testing
        $("#ddlTesting").html("");
        $("#ddlTesting").append('<option value="">---- Select ----</option>');
        $('#ddlTesting').material_select();
        $('#ddlTesting').find('option').remove();
        var html = '<option value="">' + "---- Select ----" + '</option>';
        $.each(data.TestingList, function (i, val) {
            html = html + '<option value="' +
                val.VendorID + '">' + val.VendorName1 + '</option>';
        });
        $('#ddlTesting').append(html);
        $('#ddlTesting').material_select();

        //binding autoslip
        $("#ddlAutoSlip").html("");
        $("#ddlAutoSlip").append('<option value="">---- Select ----</option>');
        $('#ddlAutoSlip').material_select();
        $('#ddlAutoSlip').find('option').remove();
        var html = '<option value="">' + "---- Select ----" + '</option>';
        $.each(data.AutoSlipList, function (i, val) {
            html = html + '<option value="' +
                val.VendorID + '">' + val.VendorName1 + '</option>';
        });
        $('#ddlAutoSlip').append(html);
        $('#ddlAutoSlip').material_select();

        //binding taxislip
        $("#ddlTaxiSlip").html("");
        $("#ddlTaxiSlip").append('<option value="">---- Select ----</option>');
        $('#ddlTaxiSlip').material_select();
        $('#ddlTaxiSlip').find('option').remove();
        var html = '<option value="">' + "---- Select ----" + '</option>';
        $.each(data.TaxiSlipList, function (i, val) {
            html = html + '<option value="' +
                val.VendorID + '">' + val.VendorName1 + '</option>';
        });
        $('#ddlTaxiSlip').append(html);
        $('#ddlTaxiSlip').material_select();

        //expense insurance
        $("#ddlExpenseInsurance").html("");
        $("#ddlExpenseInsurance").append('<option value="">---- Select ----</option>');
        $('#ddlExpenseInsurance').material_select();
        $('#ddlExpenseInsurance').find('option').remove();
        var html = '<option value="">' + "---- Select ----" + '</option>';
        $.each(data.ExpenseInsuranceList, function (i, val) {
            html = html + '<option value="' +
                val.VendorID + '">' + val.VendorName1 + '</option>';
        });
        $('#ddlExpenseInsurance').append(html);
        $('#ddlExpenseInsurance').material_select();

        //expense tax
        $("#ddlExpenseTax").html("");
        $("#ddlExpenseTax").append('<option value="">---- Select ----</option>');
        $('#ddlExpenseTax').material_select();
        $('#ddlExpenseTax').find('option').remove();
        var html = '<option value="">' + "---- Select ----" + '</option>';
        $.each(data.ExpenseTaxList, function (i, val) {
            html = html + '<option value="' +
                val.VendorID + '">' + val.VendorName1 + '</option>';
        });
        $('#ddlExpenseTax').append(html);
        $('#ddlExpenseTax').material_select();

        //expense pollution
        $("#ddlExpensePollution").html("");
        $("#ddlExpensePollution").append('<option value="">---- Select ----</option>');
        $('#ddlExpensePollution').material_select();
        $('#ddlExpensePollution').find('option').remove();
        var html = '<option value="">' + "---- Select ----" + '</option>';
        $.each(data.ExpensePollutionList, function (i, val) {
            html = html + '<option value="' +
                val.VendorID + '">' + val.VendorName1 + '</option>';
        });
        $('#ddlExpensePollution').append(html);
        $('#ddlExpensePollution').material_select();

        //expense testing
        $("#ddlExpenseTesting").html("");
        $("#ddlExpenseTesting").append('<option value="">---- Select ----</option>');
        $('#ddlExpenseTesting').material_select();
        $('#ddlExpenseTesting').find('option').remove();
        var html = '<option value="">' + "---- Select ----" + '</option>';
        $.each(data.ExpenseTestingList, function (i, val) {
            html = html + '<option value="' +
                val.VendorID + '">' + val.VendorName1 + '</option>';
        });
        $('#ddlExpenseTesting').append(html);
        $('#ddlExpenseTesting').material_select();

        //expense service
        $("#ddlExpenseService").html("");
        $("#ddlExpenseService").append('<option value="">---- Select ----</option>');
        $('#ddlExpenseService').material_select();
        $('#ddlExpenseService').find('option').remove();
        var html = '<option value="">' + "---- Select ----" + '</option>';
        $.each(data.ExpenseServiceList, function (i, val) {
            html = html + '<option value="' +
                val.VendorID + '">' + val.VendorName1 + '</option>';
        });
        $('#ddlExpenseService').append(html);
        $('#ddlExpenseService').material_select();

        //expense tyre purchase
        $("#ddlExpenseTyrePurchase").html("");
        $("#ddlExpenseTyrePurchase").append('<option value="">---- Select ----</option>');
        $('#ddlExpenseTyrePurchase').material_select();
        $('#ddlExpenseTyrePurchase').find('option').remove();
        var html = '<option value="">' + "---- Select ----" + '</option>';
        $.each(data.ExpenseTyreList, function (i, val) {
            html = html + '<option value="' +
                val.VendorID + '">' + val.VendorName1 + '</option>';
        });
        $('#ddlExpenseTyrePurchase').append(html);
        $('#ddlExpenseTyrePurchase').material_select();

        //expense reregister
        $("#ddlExpenseReregister").html("");
        $("#ddlExpenseReregister").append('<option value="">---- Select ----</option>');
        $('#ddlExpenseReregister').material_select();
        $('#ddlExpenseReregister').find('option').remove();
        var html = '<option value="">' + "---- Select ----" + '</option>';
        $.each(data.ExpenseReregisterList, function (i, val) {
            html = html + '<option value="' +
                val.VendorID + '">' + val.VendorName1 + '</option>';
        });
        $('#ddlExpenseReregister').append(html);
        $('#ddlExpenseReregister').material_select();

        //expense battery purchase
        $("#ddlExpenseBatteryPurchase").html("");
        $("#ddlExpenseBatteryPurchase").append('<option value="">---- Select ----</option>');
        $('#ddlExpenseBatteryPurchase').material_select();
        $('#ddlExpenseBatteryPurchase').find('option').remove();
        var html = '<option value="">' + "---- Select ----" + '</option>';
        $.each(data.ExpenseBatteryList, function (i, val) {
            html = html + '<option value="' +
                val.VendorID + '">' + val.VendorName1 + '</option>';
        });
        $('#ddlExpenseBatteryPurchase').append(html);
        $('#ddlExpenseBatteryPurchase').material_select();

        //expense fuel bill
        $("#ddlExpenseFuelBill").html("");
        $("#ddlExpenseFuelBill").append('<option value="">---- Select ----</option>');
        $('#ddlExpenseFuelBill').material_select();
        $('#ddlExpenseFuelBill').find('option').remove();
        var html = '<option value="">' + "---- Select ----" + '</option>';
        $.each(data.ExpenseFuelBillList, function (i, val) {
            html = html + '<option value="' +
                val.VendorID + '">' + val.VendorName1 + '</option>';
        });
        $('#ddlExpenseFuelBill').append(html);
        $('#ddlExpenseFuelBill').material_select();

        //expense taxi payments
        $("#ddlExpenseTaxiPayments").html("");
        $("#ddlExpenseTaxiPayments").append('<option value="">---- Select ----</option>');
        $('#ddlExpenseTaxiPayments').material_select();
        $('#ddlExpenseTaxiPayments').find('option').remove();
        var html = '<option value="">' + "---- Select ----" + '</option>';
        $.each(data.ExpenseTaxiPaymentsList, function (i, val) {
            html = html + '<option value="' +
                val.VendorID + '">' + val.VendorName1 + '</option>';
        });
        $('#ddlExpenseTaxiPayments').append(html);
        $('#ddlExpenseTaxiPayments').material_select();

        //expense auto payments
        $("#ddlExpenseAutoPayments").html("");
        $("#ddlExpenseAutoPayments").append('<option value="">---- Select ----</option>');
        $('#ddlExpenseAutoPayments').material_select();
        $('#ddlExpenseAutoPayments').find('option').remove();
        var html = '<option value="">' + "---- Select ----" + '</option>';
        $.each(data.ExpenseAutoPaymentsList, function (i, val) {
            html = html + '<option value="' +
                val.VendorID + '">' + val.VendorName1 + '</option>';
        });
        $('#ddlExpenseAutoPayments').append(html);
        $('#ddlExpenseAutoPayments').material_select();

        //expense accident advance
        $("#ddlExpenseAccidentAdvance").html("");
        $("#ddlExpenseAccidentAdvance").append('<option value="">---- Select ----</option>');
        $('#ddlExpenseAccidentAdvance').material_select();
        $('#ddlExpenseAccidentAdvance').find('option').remove();
        var html = '<option value="">' + "---- Select ----" + '</option>';
        $.each(data.ExpenseAccidentAdvanceList, function (i, val) {
            html = html + '<option value="' +
                val.VendorID + '">' + val.VendorName1 + '</option>';
        });
        $('#ddlExpenseAccidentAdvance').append(html);
        $('#ddlExpenseAccidentAdvance').material_select();

        //expense maintenance
        $("#ddlExpenseMaintenance").html("");
        $("#ddlExpenseMaintenance").append('<option value="">---- Select ----</option>');
        $('#ddlExpenseMaintenance').material_select();
        $('#ddlExpenseMaintenance').find('option').remove();
        var html = '<option value="">' + "---- Select ----" + '</option>';
        $.each(data.ExpenseMaintenanceList, function (i, val) {
            html = html + '<option value="' +
                val.VendorID + '">' + val.VendorName1 + '</option>';
        });
        $('#ddlExpenseMaintenance').append(html);
        $('#ddlExpenseMaintenance').material_select();




    }

    function bindFuelRates(data) {
        $(grdFuelType).jqGrid('GridUnload');
        jQuery(grdFuelType).jqGrid({
            datastr: data,
            datatype: "jsonstring",
            colNames: ['LookupID', 'Type', 'Rate'],
            colModel: [
                { name: 'LookupID', index: 'LookupID', hidden: true },
                {
                    name: 'LookupType', index: 'LookupType'
                },
                {
                    name: 'Rate', index: 'Rate', align: 'center', sortable: false, search: false,

                    formatter: function (cellValue, option, rowObject) {

                          if (cellValue === undefined || cellValue === 'NULL' || cellValue == null || cellValue == "") {
                            rowObject.Rate = 0;
                            cellValue = 0;

                        }

                        return "<input type='text' name='txtRate' id='txtRate_" + option.rowId + "' value='" + cellValue + "' onkeypress=\"checkDecimal(event,this);\" onfocusout=\"ManageFuelData(event,this," + option.rowId + ",'" + grdFuelType + "');\" maxlength=8 />";
                    },
                    unformat: function (cellValue, option, cell) {
                        return $('input', cell).val();
                    }
                },
            ],
            viewrecords: true,
            //rowNum: 10,
            shrinkToFit: true,
            autowidth: true,
            height: 300,
            rowNum: 15,
            scroll: 1,
            // rowList: [10, 20, 30],
            //pager: grdPagerFuelType,
            altRows: true,
            multiselect: false,
            loadonce: true,
            sortname: 'LookupID',
            sortorder: "asc",
            loadComplete: function () {
                var table = this;
                setTimeout(function () {
                    updatePagerIcons(table);
                }, 0);
            },
            gridComplete: function () {
            },
            ondblClickRow: function () {
            },
            beforeSelectRow: function (rowid, e) {
            }
        })

        $(grdFuelType).jqGrid('navGrid', grdPagerFuelType,
            { 	//navbar options
                edit: false,
                editicon: 'ace-icon fa fa-pencil blue',
                add: false,
                addicon: 'ace-icon fa fa-plus-circle purple',
                del: false,
                delicon: 'ace-icon fa fa-trash-o red',
                search: true,
                searchicon: 'ace-icon fa fa-search orange',
                refresh: true,
                refreshicon: 'ace-icon fa fa-refresh green',
                view: false,
                viewicon: 'ace-icon fa fa-search-plus grey',
            },
            {

                recreateForm: true,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
                    style_edit_form(form);
                }
            },
            {

                closeAfterAdd: true,
                recreateForm: true,
                viewPagerButtons: false,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar')
                        .wrapInner('<div class="widget-header" />')
                    style_edit_form(form);
                }
            },
            {
                //delete record form
                recreateForm: true,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    if (form.data('styled')) return false;

                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
                    style_delete_form(form);

                    form.data('styled', true);
                },
                onClick: function (e) {

                }
            },
            {
                //search form
                recreateForm: true, sopt: ['cn'], ignoreCase: true, viewrecords: true, closeAfterSearch: true,
                afterShowSearch: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />')
                    style_search_form(form);
                },
                afterRedraw: function () {

                },

            },
            {
                //view record form
                recreateForm: true,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />')
                }
            }
        )
        $(window).triggerHandler('resize.jqGrid');
        function updatePagerIcons(table) {
            var replacement =
                {
                    'ui-icon-seek-first': 'ace-icon fa fa-angle-double-left bigger-140',
                    'ui-icon-seek-prev': 'ace-icon fa fa-angle-left bigger-140',
                    'ui-icon-seek-next': 'ace-icon fa fa-angle-right bigger-140',
                    'ui-icon-seek-end': 'ace-icon fa fa-angle-double-right bigger-140'
                };
            $('.ui-pg-table:not(.navtable) > tbody > tr > .ui-pg-button > .ui-icon').each(function () {
                var icon = $(this);
                var $class = $.trim(icon.attr('class').replace('ui-icon', ''));
                if ($class in replacement) icon.attr('class', 'ui-icon ' + replacement[$class]);
            })
        }
    }

    function bindOvertimeRates(data) {
        $(grdOvertime).jqGrid('GridUnload');
        jQuery(grdOvertime).jqGrid({
            datastr: data,
            datatype: "jsonstring",
            colNames: ['LookupID', 'Category', 'Rate'],
            colModel: [
                { name: 'DriverCategoryLookupID', index: 'DriverCategoryLookupID', hidden: true },
                {
                    name: 'Type', index: 'Type'
                },

                {
                    name: 'OvertimeRate', index: 'OvertimeRate', align: 'center', sortable: false, search: false,

                    formatter: function (cellValue, option, rowObject) {

                        if (cellValue === undefined || cellValue === 'NULL' || cellValue == null || cellValue == "") {
                            rowObject.OvertimeRate = 0;
                            cellValue = 0;
                        }

                        return "<input type='text' name='txtOverRate' id='txtOverRate_" + option.rowId + "' value='" + cellValue + "' onkeypress=\"checkDecimal(event,this);\" onfocusout=\"ManageOvertimeData(event,this," + option.rowId + ",'" + grdFuelType + "');\" maxlength=8 />";
                    },
                    unformat: function (cellValue, option, cell) {
                        return $('input', cell).val();
                    }
                },
            ],
            viewrecords: true,
            shrinkToFit: true,
            autowidth: true,
            height: 300,
            rowNum: 15,
            scroll: 1,
            // rowList: [10, 20, 30],
            // pager: grdPagerOvertime,
            altRows: true,
            multiselect: false,
            loadonce: true,
            sortname: 'DriverCategoryLookupID',
            sortorder: "asc",
            loadComplete: function () {
                var table = this;
                setTimeout(function () {
                    updatePagerIcons(table);
                }, 0);
            },
            gridComplete: function () {
            },
            ondblClickRow: function () {
            },
            beforeSelectRow: function (rowid, e) {
            }
        })

        $(grdOvertime).jqGrid('navGrid', grdPagerOvertime,
            { 	//navbar options
                edit: false,
                editicon: 'ace-icon fa fa-pencil blue',
                add: false,
                addicon: 'ace-icon fa fa-plus-circle purple',
                del: false,
                delicon: 'ace-icon fa fa-trash-o red',
                search: true,
                searchicon: 'ace-icon fa fa-search orange',
                refresh: true,
                refreshicon: 'ace-icon fa fa-refresh green',
                view: false,
                viewicon: 'ace-icon fa fa-search-plus grey',
            },
            {

                recreateForm: true,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
                    style_edit_form(form);
                }
            },
            {

                closeAfterAdd: true,
                recreateForm: true,
                viewPagerButtons: false,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar')
                        .wrapInner('<div class="widget-header" />')
                    style_edit_form(form);
                }
            },
            {
                //delete record form
                recreateForm: true,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    if (form.data('styled')) return false;

                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
                    style_delete_form(form);

                    form.data('styled', true);
                },
                onClick: function (e) {

                }
            },
            {
                //search form
                recreateForm: true, sopt: ['cn'], ignoreCase: true, viewrecords: true, closeAfterSearch: true,
                afterShowSearch: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />')
                    style_search_form(form);
                },
                afterRedraw: function () {

                },

            },
            {
                //view record form
                recreateForm: true,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />')
                }
            }
        )
        $(window).triggerHandler('resize.jqGrid');
        function updatePagerIcons(table) {
            var replacement =
                {
                    'ui-icon-seek-first': 'ace-icon fa fa-angle-double-left bigger-140',
                    'ui-icon-seek-prev': 'ace-icon fa fa-angle-left bigger-140',
                    'ui-icon-seek-next': 'ace-icon fa fa-angle-right bigger-140',
                    'ui-icon-seek-end': 'ace-icon fa fa-angle-double-right bigger-140'
                };
            $('.ui-pg-table:not(.navtable) > tbody > tr > .ui-pg-button > .ui-icon').each(function () {
                var icon = $(this);
                var $class = $.trim(icon.attr('class').replace('ui-icon', ''));
                if ($class in replacement) icon.attr('class', 'ui-icon ' + replacement[$class]);
            })
        }
    }

    function bindDayOffRates(data) {
        $(grid_DayoffRates).jqGrid('GridUnload');
        jQuery(grid_DayoffRates).jqGrid({
            datastr: data,
            datatype: "jsonstring",
            colNames: ['DriverCategoryLookupID', 'Category', 'DayOffTypeLookupID', 'Type', 'Rate'],
            colModel: [
                { name: 'DriverCategoryLookupID', index: 'DriverCategoryLookupID', hidden: true },
                {
                    name: 'DriverType', index: 'DriverType'
                },
                {
                    name: 'DayOffTypeLookupID', index: 'DayOffTypeLookupID', hidden: true
                },
                {
                    name: 'Type', index: 'Type'
                },


                {
                    name: 'OffDayRate', index: 'OffDayRate', align: 'center', sortable: false, search: false,

                    formatter: function (cellValue, option, rowObject) {

                        if (cellValue === undefined || cellValue === 'NULL' || cellValue == null || cellValue == "") {
                            rowObject.OffDayRate = 0;
                            cellValue = 0;
                        }

                        return "<input type='text' name='txtOffDayRate' id='txtOffDayRate_" + option.rowId + "' value='" + cellValue + "' onkeypress=\"checkDecimal(event,this);\" onfocusout=\"ManageDayoffData(event,this," + option.rowId + ",'" + grid_DayoffRates + "');\" maxlength=8 />";
                    },
                    unformat: function (cellValue, option, cell) {
                        return $('input', cell).val();
                    }
                },
            ],
            viewrecords: true,
            //rowNum: 10,
            shrinkToFit: true,
            autowidth: true,
            height: 600,
            rowNum: 15,
            scroll: 1,
            //rowList: [10, 20, 30],
            //pager: pager_DayoffRates,
            altRows: true,
            multiselect: false,
            loadonce: true,
            sortname: 'DriverCategoryLookupID',
            sortorder: "asc",
            loadComplete: function () {
                var table = this;
                setTimeout(function () {
                    updatePagerIcons(table);
                }, 0);
            },
            gridComplete: function () {
            },
            ondblClickRow: function () {
            },
            beforeSelectRow: function (rowid, e) {
            }
        })

        $(grid_DayoffRates).jqGrid('navGrid', pager_DayoffRates,
            { 	//navbar options
                edit: false,
                editicon: 'ace-icon fa fa-pencil blue',
                add: false,
                addicon: 'ace-icon fa fa-plus-circle purple',
                del: false,
                delicon: 'ace-icon fa fa-trash-o red',
                search: true,
                searchicon: 'ace-icon fa fa-search orange',
                refresh: true,
                refreshicon: 'ace-icon fa fa-refresh green',
                view: false,
                viewicon: 'ace-icon fa fa-search-plus grey',
            },
            {

                recreateForm: true,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
                    style_edit_form(form);
                }
            },
            {

                closeAfterAdd: true,
                recreateForm: true,
                viewPagerButtons: false,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar')
                        .wrapInner('<div class="widget-header" />')
                    style_edit_form(form);
                }
            },
            {
                //delete record form
                recreateForm: true,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    if (form.data('styled')) return false;

                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
                    style_delete_form(form);

                    form.data('styled', true);
                },
                onClick: function (e) {

                }
            },
            {
                //search form
                recreateForm: true, sopt: ['cn'], ignoreCase: true, viewrecords: true, closeAfterSearch: true,
                afterShowSearch: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />')
                    style_search_form(form);
                },
                afterRedraw: function () {

                },

            },
            {
                //view record form
                recreateForm: true,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />')
                }
            }
        )
        $(window).triggerHandler('resize.jqGrid');
        function updatePagerIcons(table) {
            var replacement =
                {
                    'ui-icon-seek-first': 'ace-icon fa fa-angle-double-left bigger-140',
                    'ui-icon-seek-prev': 'ace-icon fa fa-angle-left bigger-140',
                    'ui-icon-seek-next': 'ace-icon fa fa-angle-right bigger-140',
                    'ui-icon-seek-end': 'ace-icon fa fa-angle-double-right bigger-140'
                };
            $('.ui-pg-table:not(.navtable) > tbody > tr > .ui-pg-button > .ui-icon').each(function () {
                var icon = $(this);
                var $class = $.trim(icon.attr('class').replace('ui-icon', ''));
                if ($class in replacement) icon.attr('class', 'ui-icon ' + replacement[$class]);
            })
        }
    }

    function bindAllowanceRates(data) {
        $(grid_AllowancesRates).jqGrid('GridUnload');
        jQuery(grid_AllowancesRates).jqGrid({
            datastr: data,
            datatype: "jsonstring",
            colNames: ['DriverCategoryLookupID', 'Category', 'DayOffTypeLookupID', 'Type', 'Rate'],
            colModel: [
                { name: 'DriverCategoryLookupID', index: 'DriverCategoryLookupID', hidden: true },
                {
                    name: 'DriverType', index: 'DriverType'
                },
                {
                    name: 'AllowanceTypeLookupID', index: 'AllowanceTypeLookupID', hidden: true
                },
                {
                    name: 'Type', index: 'Type'
                },

                {
                    name: 'AllowanceRate', index: 'AllowanceRate', align: 'center', sortable: false, search: false,

                    formatter: function (cellValue, option, rowObject) {

                        if (cellValue === undefined || cellValue === 'NULL' || cellValue == null || cellValue == "") {
                            rowObject.AllowanceRate = 0;
                            cellValue = 0;
                        }

                        return "<input type='text' name='txtAllowanceRate' id='txtAllowanceRate_" + option.rowId + "' value='" + cellValue + "' onkeypress=\"checkDecimal(event,this);\" onfocusout=\"ManageAllowanceData(event,this," + option.rowId + ",'" + grid_AllowancesRates + "');\" maxlength=8 />";
                    },
                    unformat: function (cellValue, option, cell) {
                        return $('input', cell).val();
                    }
                },
            ],
            viewrecords: true,
            rowNum: 10,
            //height: 'auto',
            //width: 400,
            shrinkToFit: true,
            autowidth: true,
            height: 600,
            rowNum: 15,
            scroll: 1,
            //rowList: [10, 20, 30],
            // pager: pager_AllowancesRates,
            altRows: true,
            multiselect: false,
            loadonce: true,
            //sortname: 'DriverCategoryLookupID',
            //sortorder: "asc",
            loadComplete: function () {
                var table = this;
                setTimeout(function () {
                    updatePagerIcons(table);
                }, 0);
            },
            gridComplete: function () {
            },
            ondblClickRow: function () {
            },
            beforeSelectRow: function (rowid, e) {
            }
        })

        $(grid_AllowancesRates).jqGrid('navGrid', pager_AllowancesRates,
            { 	//navbar options
                edit: false,
                editicon: 'ace-icon fa fa-pencil blue',
                add: false,
                addicon: 'ace-icon fa fa-plus-circle purple',
                del: false,
                delicon: 'ace-icon fa fa-trash-o red',
                search: true,
                searchicon: 'ace-icon fa fa-search orange',
                refresh: true,
                refreshicon: 'ace-icon fa fa-refresh green',
                view: false,
                viewicon: 'ace-icon fa fa-search-plus grey',
            },
            {

                recreateForm: true,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
                    style_edit_form(form);
                }
            },
            {

                closeAfterAdd: true,
                recreateForm: true,
                viewPagerButtons: false,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar')
                        .wrapInner('<div class="widget-header" />')
                    style_edit_form(form);
                }
            },
            {
                //delete record form
                recreateForm: true,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    if (form.data('styled')) return false;

                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
                    style_delete_form(form);

                    form.data('styled', true);
                },
                onClick: function (e) {

                }
            },
            {
                //search form
                recreateForm: true, sopt: ['cn'], ignoreCase: true, viewrecords: true, closeAfterSearch: true,
                afterShowSearch: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />')
                    style_search_form(form);
                },
                afterRedraw: function () {

                },

            },
            {
                //view record form
                recreateForm: true,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />')
                }
            }
        )
        $(window).triggerHandler('resize.jqGrid');
        function updatePagerIcons(table) {
            var replacement =
                {
                    'ui-icon-seek-first': 'ace-icon fa fa-angle-double-left bigger-140',
                    'ui-icon-seek-prev': 'ace-icon fa fa-angle-left bigger-140',
                    'ui-icon-seek-next': 'ace-icon fa fa-angle-right bigger-140',
                    'ui-icon-seek-end': 'ace-icon fa fa-angle-double-right bigger-140'
                };
            $('.ui-pg-table:not(.navtable) > tbody > tr > .ui-pg-button > .ui-icon').each(function () {
                var icon = $(this);
                var $class = $.trim(icon.attr('class').replace('ui-icon', ''));
                if ($class in replacement) icon.attr('class', 'ui-icon ' + replacement[$class]);
            })
        }
    }

    function bindTaxiRates(data) {

        var parent_column = $(grid_TaxiRates).closest('[class*="col-"]');
        //resize to fit page size
        $(window).on('resize.jqGrid', function () {
            $(grid_TaxiRates).jqGrid('setGridWidth', parent_column.width());
        })

        //resize on sidebar collapse/expand
        $(document).on('settings.ace.jqGrid', function (ev, event_name, collapsed) {
            if (event_name === 'sidebar_collapsed' || event_name === 'main_container_fixed') {
                //setTimeout is for webkit only to give time for DOM changes and then redraw!!!
                setTimeout(function () {
                    $(grid_TaxiRates).jqGrid('setGridWidth', parent_column.width());
                }, 20);
            }
        })
        $(grid_TaxiRates).jqGrid('GridUnload');
        jQuery(grid_TaxiRates).jqGrid({
            datastr: data,
            datatype: "jsonstring",
            colNames: ['ModelID', 'Model Name', 'LookupID', 'Type', 'Per KM (AC)', 'Per KM (Non AC)', 'Per Hour (AC)', 'Per Hour (Non AC)'],
            colModel: [
                { name: 'ModelID', width: 500, index: 'ModelID', hidden: true },
                {
                    name: 'ModelName', index: 'ModelName'
                },
                {
                    name: 'LookupID', index: 'LookupID', hidden: true
                },
                {
                    name: 'LookupType', index: 'LookupType'
                },

                {
                    name: 'ACKiloMeterRate', index: 'ACKiloMeterRate', align: 'center', sortable: false, search: false,

                    formatter: function (cellValue, option, rowObject) {

                        if (cellValue === undefined || cellValue === 'NULL' || cellValue == null || cellValue == "") {
                            rowObject.ACKiloMeterRate = 0;
                            cellValue = 0;
                        }

                        return "<input type='text' name='txtACKiloMeterRate' id='txtACKiloMeterRate_" + option.rowId + "' value='" + cellValue + "' onkeypress=\"checkDecimal(event,this);\" onfocusout=\"ManageACKMData(event,this," + option.rowId + ",'" + grid_TaxiRates + "');\" maxlength=8 />";
                    },
                    unformat: function (cellValue, option, cell) {
                        return $('input', cell).val();
                    }
                },

                {
                    name: 'NonACKiloMeterRate', index: 'NonACKiloMeterRate', align: 'center', sortable: false, search: false,

                    formatter: function (cellValue, option, rowObject) {

                        if (cellValue === undefined || cellValue === 'NULL' || cellValue == null || cellValue == "") {
                            rowObject.NonACKiloMeterRate = 0;
                            cellValue = 0;
                        }

                        return "<input type='text' name='txtNonACKiloMeterRate' id='txtNonACKiloMeterRate_" + option.rowId + "' value='" + cellValue + "' onkeypress=\"checkDecimal(event,this);\" onfocusout=\"ManageNonACKMData(event,this," + option.rowId + ",'" + grid_TaxiRates + "');\" maxlength=8 />";
                    },
                    unformat: function (cellValue, option, cell) {
                        return $('input', cell).val();
                    }
                },
                {
                    name: 'ACHoulryRate', index: 'ACHoulryRate', align: 'center', sortable: false, search: false,

                    formatter: function (cellValue, option, rowObject) {

                        if (cellValue === undefined || cellValue === 'NULL' || cellValue == null || cellValue == "") {
                            rowObject.ACHoulryRate = 0;
                            cellValue = 0;
                        }

                        return "<input type='text' name='txtACHoulryRate' id='txtACHoulryRate_" + option.rowId + "' value='" + cellValue + "' onkeypress=\"checkDecimal(event,this);\" onfocusout=\"ManageACHourData(event,this," + option.rowId + ",'" + grid_TaxiRates + "');\" maxlength=8 />";
                    },
                    unformat: function (cellValue, option, cell) {
                        return $('input', cell).val();
                    }
                },
                {
                    name: 'NonACHourlyRate', index: 'NonACHourlyRate', align: 'center', sortable: false, search: false,

                    formatter: function (cellValue, option, rowObject) {

                        if (cellValue === undefined || cellValue === 'NULL' || cellValue == null || cellValue == "") {
                            rowObject.NonACHourlyRate = 0;
                            cellValue = 0;
                        }

                        return "<input type='text' name='txtNonACHourlyRate' id='txtNonACHourlyRate_" + option.rowId + "' value='" + cellValue + "' onkeypress=\"checkDecimal(event,this);\" onfocusout=\"ManageNonACHourData(event,this," + option.rowId + ",'" + grid_TaxiRates + "');\" maxlength=8 />";
                    },
                    unformat: function (cellValue, option, cell) {
                        return $('input', cell).val();
                    }
                },


            ],
            viewrecords: true,
            rowNum: 15,
            height: 800,
            //width: 970,
            scroll: 1,
            autowidth: true,
            // rowList: [10, 20, 30],
            pager: pager_TaxiRates,
            altRows: true,
            multiselect: false,
            loadonce: true,
            caption: 'Rate Details',
            loadComplete: function () {
                var table = this;
                setTimeout(function () {
                    updatePagerIcons(table);
                }, 0);
            },
            gridComplete: function () {
            },
            ondblClickRow: function () {
            },
            beforeSelectRow: function (rowid, e) {
            }
        })
        $(window).triggerHandler('resize.jqGrid');//trigger window resize to make the grid get the correct size
        $(grid_TaxiRates).jqGrid('navGrid', pager_TaxiRates,
            { 	//navbar options
                edit: false,
                editicon: 'ace-icon fa fa-pencil blue',
                add: false,
                addicon: 'ace-icon fa fa-plus-circle purple',
                del: false,
                delicon: 'ace-icon fa fa-trash-o red',
                search: true,
                searchicon: 'ace-icon fa fa-search orange',
                refresh: true,
                refreshicon: 'ace-icon fa fa-refresh green',
                view: false,
                viewicon: 'ace-icon fa fa-search-plus grey',
            },
            {

                recreateForm: true,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
                    style_edit_form(form);
                }
            },
            {

                closeAfterAdd: true,
                recreateForm: true,
                viewPagerButtons: false,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar')
                        .wrapInner('<div class="widget-header" />')
                    style_edit_form(form);
                }
            },
            {
                //delete record form
                recreateForm: true,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    if (form.data('styled')) return false;

                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
                    style_delete_form(form);

                    form.data('styled', true);
                },
                onClick: function (e) {

                }
            },
            {
                //search form
                recreateForm: true, sopt: ['cn'], ignoreCase: true, viewrecords: true, closeAfterSearch: true,
                afterShowSearch: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />')
                    style_search_form(form);
                },
                afterRedraw: function () {

                },

            },
            {
                //view record form
                recreateForm: true,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />')
                }
            }
        )
        $(window).triggerHandler('resize.jqGrid');
        function updatePagerIcons(table) {
            var replacement =
                {
                    'ui-icon-seek-first': 'ace-icon fa fa-angle-double-left bigger-140',
                    'ui-icon-seek-prev': 'ace-icon fa fa-angle-left bigger-140',
                    'ui-icon-seek-next': 'ace-icon fa fa-angle-right bigger-140',
                    'ui-icon-seek-end': 'ace-icon fa fa-angle-double-right bigger-140'
                };
            $('.ui-pg-table:not(.navtable) > tbody > tr > .ui-pg-button > .ui-icon').each(function () {
                var icon = $(this);
                var $class = $.trim(icon.attr('class').replace('ui-icon', ''));
                if ($class in replacement) icon.attr('class', 'ui-icon ' + replacement[$class]);
            })
        }
    }

    function gridBindEmpData(data) {
        var parent_column = $(grid_Emp).closest('[class*="col-"]');
        //resize to fit page size
        $(window).on('resize.jqGrid', function () {
            $(grid_Emp).jqGrid('setGridWidth', parent_column.width());
        })

        //resize on sidebar collapse/expand
        $(document).on('settings.ace.jqGrid', function (ev, event_name, collapsed) {
            if (event_name === 'sidebar_collapsed' || event_name === 'main_container_fixed') {
                //setTimeout is for webkit only to give time for DOM changes and then redraw!!!
                setTimeout(function () {
                    $(grid_Emp).jqGrid('setGridWidth', parent_column.width());
                }, 20);
            }
        })

        jQuery(grid_Emp).jqGrid({

            data: data,
            datatype: "local",
            //  height: 250,
            colNames: ['ID', 'Employee Code', 'Employee Name'],
            colModel: [
                { name: 'EmpId', index: 'EmpId', key: true, hidden: true },
                { name: 'EmpCode', index: 'EmpCode', editable: true, editoptions: { size: "20", maxlength: "30" } },
                { name: 'EmpFName', index: 'EmpFName', editable: true, editoptions: { size: "20", maxlength: "30" } }

            ],

            viewrecords: true,
            ignoreCase: true,
            rowNum: 10,
            rowList: [10, 20, 30],
            pager: pager_Emp,
            altRows: true,
            height: 450,
            multiselect: false,
            multiboxonly: true,
            ondblClickRow: function (rowId) {
                var rowData = jQuery(this).getRowData(rowId);

                name = rowData['EmpFName'];
                empcode = rowData['EmpCode'];
                EmpId = rowData['EmpId'];

                if (name != null && name != "") {
                    $("#txtEmployeeName").val(name);
                    $("#txtEmployeeCode").val(empcode);
                    $("#txtEmployeeID").val(EmpId);
                    $('#modalEmpDetails').modal('close'); // Close popup
                }
                else {

                }
            },
            loadComplete: function () {
                var table = this;
                setTimeout(function () {
                    updatePagerIcons(table);
                }, 0);
            },
            gridComplete: function () {

                $(grid_Emp + "_cb").css("width", "35px");
                $(grid_Emp + " tbody tr").children().first("td").css("width", "35px");
            },



        });

        $(window).triggerHandler('resize.jqGrid');//trigger window resize to make the grid get the correct size

        jQuery(grid_Emp).jqGrid('navGrid', pager_Emp,
            { 	//navbar options
                edit: false,
                editicon: 'ace-icon fa fa-pencil blue',
                add: false,
                addicon: 'ace-icon fa fa-plus-circle purple',
                del: false,
                delicon: 'ace-icon fa fa-trash-o red',
                search: true,
                searchicon: 'ace-icon fa fa-search orange',
                refresh: true,
                refreshicon: 'ace-icon fa fa-refresh green',
                view: false,
                viewicon: 'ace-icon fa fa-search-plus grey',
            },
            {
                //edit record form
                //closeAfterEdit: true,
                //width: 700,
                recreateForm: true,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
                    //   style_edit_form(form);
                }
            },
            {
                //new record form
                //width: 700,
                closeAfterAdd: true,
                recreateForm: true,
                viewPagerButtons: false,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar')
                        .wrapInner('<div class="widget-header" />')
                    //  style_edit_form(form);
                }
            },
            {
                //delete record form
                recreateForm: true,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    if (form.data('styled')) return false;

                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
                    // style_delete_form(form);

                    form.data('styled', true);
                },
                onClick: function (e) {
                    //alert(1);
                }
            },
            {
                //search form
                recreateForm: true,
                sopt: ['cn'],
                afterShowSearch: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />')
                    //style_search_form(form);
                },
                afterRedraw: function () {
                    // style_search_filters($(this));
                }
                ,
                //  multipleSearch: true,
                closeAfterSearch: true
            },
            {
                //view record form
                recreateForm: true,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />')
                }
            }
        )


        //function Link(cellvalue, options, rowObject) {
        //    // on grid edit click 
        //    var dataj = JSON.stringify(rowObject);
        //    var link = '<a href="javascript:void(0)" class="edit"><span class="ace-icon fa fa-pencil blue"></span></a><a href="javascript:void(0)" class="remove" style="margin-left: 3px;" ><span class="ace-icon fa fa-trash-o red"></span></a>'
        //    return link;


        //}


    }

    function updatePagerIcons(table) {
        var replacement =
            {
                'ui-icon-seek-first': 'ace-icon fa fa-angle-double-left bigger-140',
                'ui-icon-seek-prev': 'ace-icon fa fa-angle-left bigger-140',
                'ui-icon-seek-next': 'ace-icon fa fa-angle-right bigger-140',
                'ui-icon-seek-end': 'ace-icon fa fa-angle-double-right bigger-140'
            };
        $('.ui-pg-table:not(.navtable) > tbody > tr > .ui-pg-button > .ui-icon').each(function () {
            var icon = $(this);
            var $class = $.trim(icon.attr('class').replace('ui-icon', ''));

            if ($class in replacement) icon.attr('class', 'ui-icon ' + replacement[$class]);
        })
    }

});

function checkDecimal(e, rowId) {
    var charCode = (e.which) ? e.which : e.keyCode;
    if (charCode > 31 && (charCode < 48 || charCode > 57) && charCode != 46) {
        e.preventDefault();
        $(rowId).addClass("validate invalid");
        return false;
    }
    else {
        if (charCode == 8) {
            $(rowId).removeClass("validate invalid");
            return true;
        }
        else {
            var len = $(e.target).val().length;
            if (len >= 10) {
                e.preventDefault();
                $(rowId).addClass("validate invalid");
                return false;
            }
            var parts = $(e.target).val().split('.');
            if (parts[0].length > 8) {
                e.preventDefault();
                $(rowId).addClass("validate invalid");
                return false;
            }
            var index = $(e.target).val().indexOf('.');

            if (index > 0 && charCode == 46) {
                e.preventDefault();
                $(rowId).addClass("validate invalid");
                return false;
            }
            if (index > 0) {
                var CharAfterdot = (len) - index;

                if (CharAfterdot >= 3) {
                    e.preventDefault();
                    $(rowId).addClass("validate invalid");
                    return false;
                }
            }

            if (index == 0 && charCode == 46) {
                e.preventDefault();
                $(rowId).addClass("validate invalid");
                return false;
            }

            if (index == 0) {
                var CharAfterdot = (len) - index;

                if (CharAfterdot >= 2) {
                    e.preventDefault();
                    $(rowId).addClass("validate invalid");
                    return false;
                }
            }
        }
    }
    $(rowId).removeClass("validate invalid");
    return true;
}

function ManageDayoffData(e, rowId, rwNo, grid) {
    var rowData = $(grid).jqGrid('getRowData', rwNo);
    rowData.OffDayRate = $(rowId).val();
    $(grid).jqGrid('setRowData', rwNo, rowData);
}

function ManageFuelData(e, rowId, rwNo, grid) {
    var rowData = $(grid).jqGrid('getRowData', rwNo);
    rowData.Rate = $(rowId).val();
    $(grid).jqGrid('setRowData', rwNo, rowData);
}

function ManageOvertimeData(e, rowId, rwNo, grid) {
    var rowData = $(grid).jqGrid('getRowData', rwNo);
    rowData.OvertimeRate = $(rowId).val();
    $(grid).jqGrid('setRowData', rwNo, rowData);
}

function ManageAllowanceData(e, rowId, rwNo, grid) {
    var rowData = $(grid).jqGrid('getRowData', rwNo);
    rowData.AllowanceRate = $(rowId).val();
    $(grid).jqGrid('setRowData', rwNo, rowData);
}

function ManageACKMData(e, rowId, rwNo, grid) {
    var rowData = $(grid).jqGrid('getRowData', rwNo);
    rowData.ACKiloMeterRate = $(rowId).val();
    $(grid).jqGrid('setRowData', rwNo, rowData);
}

function ManageNonACKMData(e, rowId, rwNo, grid) {
    var rowData = $(grid).jqGrid('getRowData', rwNo);
    rowData.NonACKiloMeterRate = $(rowId).val();
    $(grid).jqGrid('setRowData', rwNo, rowData);
}

function ManageACHourData(e, rowId, rwNo, grid) {
    var rowData = $(grid).jqGrid('getRowData', rwNo);
    rowData.ACHoulryRate = $(rowId).val();
    $(grid).jqGrid('setRowData', rwNo, rowData);
}

function ManageNonACHourData(e, rowId, rwNo, grid) {
    var rowData = $(grid).jqGrid('getRowData', rwNo);
    rowData.NonACHourlyRate = $(rowId).val();
    $(grid).jqGrid('setRowData', rwNo, rowData);
}

//function for validating employee tab
function validateEmployeeTab() {

    var isEmailTabValid = true;
    if ($("#rbEmployee").is(":checked")) {
        if (IsEmpty("#txtEmployeeCode")) {
            AddValidation("#txtEmployeeCode");
            isEmailTabValid = false;
        }
        else {
            RemoveValidation("#txtEmployeeCode");
        }

        if (IsEmpty("#txtEmployeeName")) {
            AddValidation("#txtEmployeeName");
            isEmailTabValid = false;
        }
        else {
            RemoveValidation("#txtEmployeeName");
        }

        if (IsEmpty("#txtMailID")) {
            AddValidation("#txtMailID");
            isEmailTabValid = false;
        }
        else {
            RemoveValidation("#txtMailID");
        }
    }
    else {
        if (IsEmpty("#txtFrontOfficeMailID")) {
            AddValidation("#txtFrontOfficeMailID");
            isEmailTabValid = false;
        }
        else {
            if (validateEmailField($("#txtFrontOfficeMailID").val())) {
                RemoveValidation("#txtFrontOfficeMailID");
            }
            else {
                AddValidation("#txtFrontOfficeMailID");
                isEmailTabValid = false;
            }
        }

        if (!IsEmpty("#txtDepartmentMailID") && !validateEmailField($("#txtDepartmentMailID").val())) {
            AddValidation("#txtDepartmentMailID");
            isEmailTabValid = false;
        }
        else {
            RemoveValidation("#txtDepartmentMailID");
        }

        if (!IsEmpty("#txtExecutiveMailID") && !validateEmailField($("#txtExecutiveMailID").val())) {
            AddValidation("#txtExecutiveMailID");
            isEmailTabValid = false;
        }
        else {
            RemoveValidation("#txtExecutiveMailID");
        }

    }

    return isEmailTabValid;
}

function validateEmailField(email) {
    var re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    return re.test(String(email).toLowerCase());
}

//cehck for empty value
function IsEmpty(element) {
    if ($(element).val() == '' || $(element).val() == undefined) {
        return true;
    }
    else
        return false;
}


//add  validation class
function AddValidation(element) {
    $(element).addClass("input-validation-error");
}

//remove validation class
function RemoveValidation(element) {
    $(element).removeClass("input-validation-error");
}

